# OKI 66207 Processor
# (c) Stanislas Lejay
#

import sys
import idaapi
from idaapi import *

#For Version 7
from ida_auto import *
from ida_bytes import *
from ida_funcs import *
from ida_idaapi import *
from ida_idp import *
from ida_lines import *
from ida_nalt import *
from ida_name import *
from ida_netnode import *
from ida_offset import *
from ida_problems import *
from ida_segment import *
from ida_ua import *
from ida_xref import *
import ida_frame
import idc

'''
Misc information from 66201 spec:
    - Uses DATA and CODE segmentation
    - DD (data bit) is 1 if using WORDS or 0 if using BYTES
    - 66207.op format (x1     -x2x3 x4): See ./helpers/op_to_array.py

'''

class oki66207_processor_t(idaapi.processor_t):
    # IDA id (> 0x8000 for third party)
    id = 0x8000 + 0x1234

    # Processor features
    flag = PRN_HEX | PR_ASSEMBLE | PR_RNAMESOK

    # Number of bits in a byte for code segments (usually 8)
    # IDA supports values up to 32 bits
    cnbits = 8

    # Number of bits in a byte for non-code segments (usually 8)
    # IDA supports values up to 32 bits
    dnbits = 8

    # short processor names
    # Each name should be shorter than 9 characters
    psnames = ['oki66207']

    # long processor names
    # No restriction on name lengthes.
    plnames = ['OKI 66207/MSM66207']

    # size of a segment register in bytes
    segreg_size = 0

    # icode of the first instruction
    instruc_start = 0

    #
    # Number of digits in floating numbers after the decimal point.
    # If an element of this array equals 0, then the corresponding
    # floating point data is not used for the processor.
    # This array is used to align numbers in the output.
    #    real_width[0] - number of digits for short floats (only PDP-11 has them)
    #    real_width[1] - number of digits for "float"
    #    real_width[2] - number of digits for "double"
    #    real_width[3] - number of digits for "long double"
    # Example: IBM PC module has { 0,7,15,19 }
    #
    # (optional)
    real_width = (0, 0, 0, 0)

    # only one assembler is supported
    assembler = {
        # flag (for data representation)
        'flag' : ASH_HEXF0 | ASD_DECF0 | AS_UNEQU | AS_COLON | ASB_BINF0 | AS_N2CHR,

        # user defined flags (local only for IDP) (optional)
        'uflag' : 0,

        # Assembler name (displayed in menus)
        'name': plnames[0],

        # array of automatically generated header lines they appear at the start of disassembled text (optional)
        'header': [plnames[0], "Experimental for Honda OBD1 ECUs"],

        # org directive
        'origin': ".org",

        # end directive
        'end': ".end",

        # comment string (see also cmnt2)
        'cmnt': "#",

        # ASCII string delimiter
        'ascsep': "\"",

        # ASCII char constant delimiter
        'accsep': "'",

        # ASCII special chars (they can't appear in character and ascii constants)
        'esccodes': "\"'",

        #
        #    Data representation (db,dw,...):
        #
        # ASCII string directive
        'a_ascii': ".ascii",

        # byte directive
        'a_byte': ".byte",

        # word directive
        'a_word': ".hword",

        # remove if not allowed
        'a_dword': ".word",

        # array keyword. the following
        # sequences may appear:
        #    #h - header
        #    #d - size
        #    #v - value
        #    #s(b,w,l,q,f,d,o) - size specifiers
        #                        for byte,word,
        #                            dword,qword,
        #                            float,double,oword
        'a_dups': "#d dup(#v)",

        # uninitialized data directive (should include '%s' for the size of data)
        'a_bss': "%s dup ?",

        # 'equ' Used if AS_UNEQU is set (optional)
        'a_equ': ".equ",

        # 'seg ' prefix (example: push seg seg001)
        'a_seg': "seg",

        # current IP (instruction pointer) symbol in assembler
        'a_curip': "$pc",

        # "public" name keyword. NULL-gen default, ""-do not generate
        'a_public': "public",

        # "weak"    name keyword. NULL-gen default, ""-do not generate
        'a_weak': ".weak",

        # "extrn" name keyword
        'a_extrn': "extrn",

        # "comm" (communal variable)
        'a_comdef': "",

        # "align" keyword
        'a_align': ".align",

        # Left and right braces used in complex expressions
        'lbrace': "(",
        'rbrace': ")",

        # % mod    assembler time operation
        'a_mod': "%",

        # & bit and assembler time operation
        'a_band': "&",

        # | bit or assembler time operation
        'a_bor': "|",

        # ^ bit xor assembler time operation
        'a_xor': "^",

        # ~ bit not assembler time operation
        'a_bnot': "~",

        # << shift left assembler time operation
        'a_shl': "<<",

        # >> shift right assembler time operation
        'a_shr': ">>",

        # size of type (format string) (optional)
        'a_sizeof_fmt': ".size %s",

        'flag2': 0,

        # comment close string (optional)
        # this is used to denote a string which closes comments, for example, if the comments are represented with (* ... *)
        # then cmnt = "(*" and cmnt2 = "*)"
        'cmnt2': "",

        # low8 operation, should contain %s for the operand (optional fields)
        'low8': "",
        'high8': "",
        'low16': "%lo",
        'high16': "%hi",

        # the include directive (format string) (optional)
        'a_include_fmt': ".include %s",

        # if a named item is a structure and displayed in the verbose (multiline) form then display the name
        # as printf(a_strucname_fmt, typename)
        # (for asms with type checking, e.g. tasm ideal)
        # (optional)
        'a_vstruc_fmt': "",

        # 3-byte data (optional)
        'a_3byte': "",

        # 'rva' keyword for image based offsets (optional)
        # (see nalt.hpp, REFINFO_RVA)
        'a_rva': "rva"
    } # Assembler

    # ----------------------------------------------------------------------
    # Special flags used by the decoder, emulator and output
    #
    FL_SIGNED    = 0x01        # value/address is signed; output as such
    FL_VAL32    = 0x02        # 32 bit value / offset from low and high parts
    FL_SUB    = 0x04        # subtract offset from base

    #Global Pointer Node Definition
    GlobalPointerNode = None

    # Global Pointer Value
    GlobalPointer = BADADDR

    # ----------------------------------------------------------------------
    # The following callbacks are optional.
    # *** Please remove the callbacks that you don't plan to implement ***

    # ----------------------------------------------------------------------
    # Global pointer manipulations, init, save, load
    #

    def notify_init(self, idp_file):
        return 1


    def notify_oldfile(self, filename):
        """An old file is loaded (already)"""
        pass

    def notify_savebase(self):
        """The database is being saved. Processor module should save its local data"""
        pass


    # ----------------------------------------------------------------------
    # Registers definition
    #

# -----------------------------------------------------------------------------------------------------------------------------------------------------

IDEF_OPCODES = 0
IDEF_DD = 1
IDEF_CF = 2
IDEF_MNEMONIC = 3

INSN_DEFS = [
    ([0x0000, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "nop"),
    ([0x0001, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "rt"),
    ([0x0002, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "rti"),
    ([0x0003, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_JUMP, "jmp imm16"),
    ([0x0004, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "smovi"),
    ([0x0008, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, er0"),
    ([0x0008, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, r0"),
    ([0x0009, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, er1"),
    ([0x0009, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, r1"),
    ([0x000a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, er2"),
    ([0x000a, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, r2"),
    ([0x000b, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, er3"),
    ([0x000b, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, r3"),
    ([0x000c, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, r4"),
    ([0x000d, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, r5"),
    ([0x000e, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, r6"),
    ([0x000f, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, r7"),
    ([0x0010, ], DD_FLAG_UNUSED, CF_FLAG_VCALL, "vcal 0"),
    ([0x0011, ], DD_FLAG_UNUSED, CF_FLAG_VCALL, "vcal 1"),
    ([0x0012, ], DD_FLAG_UNUSED, CF_FLAG_VCALL, "vcal 2"),
    ([0x0013, ], DD_FLAG_UNUSED, CF_FLAG_VCALL, "vcal 3"),
    ([0x0014, ], DD_FLAG_UNUSED, CF_FLAG_VCALL, "vcal 4"),
    ([0x0015, ], DD_FLAG_UNUSED, CF_FLAG_VCALL, "vcal 5"),
    ([0x0016, ], DD_FLAG_UNUSED, CF_FLAG_VCALL, "vcal 6"),
    ([0x0017, ], DD_FLAG_UNUSED, CF_FLAG_VCALL, "vcal 7"),
    ([0x0018, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, er0"),
    ([0x0018, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, r0"),
    ([0x0019, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, er1"),
    ([0x0019, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, r1"),
    ([0x001a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, er2"),
    ([0x001a, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, r2"),
    ([0x001b, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, er3"),
    ([0x001b, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, r3"),
    ([0x001c, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, r4"),
    ([0x001d, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, r5"),
    ([0x001e, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, r6"),
    ([0x001f, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, r7"),
    ([0x0020, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb r0.0"),
    ([0x0020, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, r0"),
    ([0x0020, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr r0"),
    ([0x0020, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr r0"),
    ([0x0020, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr r0"),
    ([0x0020, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb r0   "),
    ([0x0020, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb r0.0"),
    ([0x0020, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr r0, c"),
    ([0x0020, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, r0 "),
    ([0x0020, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, r0.0"),
    ([0x0020, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb r0.0, c"),
    ([0x0020, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, r0'"),
    ([0x0020, 0x007c, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8a, r0'       "),
    ([0x0020, 0x0080, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r0, #imm8"),
    ([0x0020, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r0, a"),
    ([0x0020, 0x0083, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r0, off imm8"),
    ([0x0020, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, r0"),
    ([0x0020, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, r0"),
    ([0x0020, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, a"),
    ([0x0020, 0x0090, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r0, #imm8"),
    ([0x0020, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r0, a"),
    ([0x0020, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r0, off imm8"),
    ([0x0020, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, r0"),
    ([0x0020, 0x00a0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r0, #imm8"),
    ([0x0020, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r0, a"),
    ([0x0020, 0x00a3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r0, off imm8"),
    ([0x0020, 0x00b0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r0, #imm8"),
    ([0x0020, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r0, a"),
    ([0x0020, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r0, off imm8"),
    ([0x0020, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb r0"),
    ([0x0020, 0x00c0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r0, #imm8"),
    ([0x0020, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r0, a"),
    ([0x0020, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r0, off imm8"),
    ([0x0020, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb r0"),
    ([0x0020, 0x00d0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r0, #imm8"),
    ([0x0020, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r0, a"),
    ([0x0020, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r0, off imm8"),
    ([0x0020, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb r0"),
    ([0x0020, 0x00e0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r0, #imm8"),
    ([0x0020, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r0, a"),
    ([0x0020, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r0, off imm8"),
    ([0x0020, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb r0"),
    ([0x0020, 0x00f0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r0, #imm8"),
    ([0x0020, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r0, a"),
    ([0x0020, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, r0"),
    ([0x0020, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r0, off imm8"),
    ([0x0020, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab r0"),
    ([0x0021, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb r1.1"),
    ([0x0021, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, r1"),
    ([0x0021, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr r1"),
    ([0x0021, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr r1"),
    ([0x0021, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr r1"),
    ([0x0021, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb r1   "),
    ([0x0021, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb r1.1"),
    ([0x0021, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr r1, c"),
    ([0x0021, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, r1 "),
    ([0x0021, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, r1.1"),
    ([0x0021, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb r1.1, c"),
    ([0x0021, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, r1'"),
    ([0x0021, 0x007c, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8a, r1'       "),
    ([0x0021, 0x0080, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r1, #imm8"),
    ([0x0021, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r1, a"),
    ([0x0021, 0x0083, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r1, off imm8"),
    ([0x0021, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, r1"),
    ([0x0021, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, r1"),
    ([0x0021, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, a"),
    ([0x0021, 0x0090, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r1, #imm8"),
    ([0x0021, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r1, a"),
    ([0x0021, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r1, off imm8"),
    ([0x0021, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, r1"),
    ([0x0021, 0x00a0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r1, #imm8"),
    ([0x0021, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r1, a"),
    ([0x0021, 0x00a3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r1, off imm8"),
    ([0x0021, 0x00b0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r1, #imm8"),
    ([0x0021, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r1, a"),
    ([0x0021, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r1, off imm8"),
    ([0x0021, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb r1"),
    ([0x0021, 0x00c0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r1, #imm8"),
    ([0x0021, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r1, a"),
    ([0x0021, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r1, off imm8"),
    ([0x0021, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb r1"),
    ([0x0021, 0x00d0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r1, #imm8"),
    ([0x0021, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r1, a"),
    ([0x0021, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r1, off imm8"),
    ([0x0021, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb r1"),
    ([0x0021, 0x00e0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r1, #imm8"),
    ([0x0021, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r1, a"),
    ([0x0021, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r1, off imm8"),
    ([0x0021, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb r1"),
    ([0x0021, 0x00f0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r1, #imm8"),
    ([0x0021, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r1, a"),
    ([0x0021, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, r1"),
    ([0x0021, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r1, off imm8"),
    ([0x0021, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab r1"),
    ([0x0022, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb r2.2"),
    ([0x0022, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, r2"),
    ([0x0022, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr r2"),
    ([0x0022, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr r2"),
    ([0x0022, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr r2"),
    ([0x0022, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb r2   "),
    ([0x0022, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb r2.2"),
    ([0x0022, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr r2, c"),
    ([0x0022, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, r2 "),
    ([0x0022, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, r2.2"),
    ([0x0022, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb r2.2, c"),
    ([0x0022, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, r2'"),
    ([0x0022, 0x007c, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8a, r2'       "),
    ([0x0022, 0x0080, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r2, #imm8"),
    ([0x0022, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r2, a"),
    ([0x0022, 0x0083, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r2, off imm8"),
    ([0x0022, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, r2"),
    ([0x0022, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, r2"),
    ([0x0022, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, a"),
    ([0x0022, 0x0090, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r2, #imm8"),
    ([0x0022, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r2, a"),
    ([0x0022, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r2, off imm8"),
    ([0x0022, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, r2"),
    ([0x0022, 0x00a0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r2, #imm8"),
    ([0x0022, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r2, a"),
    ([0x0022, 0x00a3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r2, off imm8"),
    ([0x0022, 0x00b0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r2, #imm8"),
    ([0x0022, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r2, a"),
    ([0x0022, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r2, off imm8"),
    ([0x0022, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb r2"),
    ([0x0022, 0x00c0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r2, #imm8"),
    ([0x0022, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r2, a"),
    ([0x0022, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r2, off imm8"),
    ([0x0022, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb r2"),
    ([0x0022, 0x00d0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r2, #imm8"),
    ([0x0022, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r2, a"),
    ([0x0022, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r2, off imm8"),
    ([0x0022, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb r2"),
    ([0x0022, 0x00e0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r2, #imm8"),
    ([0x0022, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r2, a"),
    ([0x0022, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r2, off imm8"),
    ([0x0022, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb r2"),
    ([0x0022, 0x00f0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r2, #imm8"),
    ([0x0022, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r2, a"),
    ([0x0022, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, r2"),
    ([0x0022, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r2, off imm8"),
    ([0x0022, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab r2"),
    ([0x0023, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb r3.3"),
    ([0x0023, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, r3"),
    ([0x0023, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr r3"),
    ([0x0023, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr r3"),
    ([0x0023, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr r3"),
    ([0x0023, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb r3   "),
    ([0x0023, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb r3.3"),
    ([0x0023, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr r3, c"),
    ([0x0023, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, r3 "),
    ([0x0023, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, r3.3"),
    ([0x0023, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb r3.3, c"),
    ([0x0023, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, r3'"),
    ([0x0023, 0x007c, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8a, r3'       "),
    ([0x0023, 0x0080, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r3, #imm8"),
    ([0x0023, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r3, a"),
    ([0x0023, 0x0083, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r3, off imm8"),
    ([0x0023, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, r3"),
    ([0x0023, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, r3"),
    ([0x0023, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, a"),
    ([0x0023, 0x0090, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r3, #imm8"),
    ([0x0023, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r3, a"),
    ([0x0023, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r3, off imm8"),
    ([0x0023, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, r3"),
    ([0x0023, 0x00a0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r3, #imm8"),
    ([0x0023, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r3, a"),
    ([0x0023, 0x00a3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r3, off imm8"),
    ([0x0023, 0x00b0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r3, #imm8"),
    ([0x0023, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r3, a"),
    ([0x0023, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r3, off imm8"),
    ([0x0023, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb r3"),
    ([0x0023, 0x00c0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r3, #imm8"),
    ([0x0023, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r3, a"),
    ([0x0023, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r3, off imm8"),
    ([0x0023, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb r3"),
    ([0x0023, 0x00d0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r3, #imm8"),
    ([0x0023, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r3, a"),
    ([0x0023, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r3, off imm8"),
    ([0x0023, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb r3"),
    ([0x0023, 0x00e0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r3, #imm8"),
    ([0x0023, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r3, a"),
    ([0x0023, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r3, off imm8"),
    ([0x0023, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb r3"),
    ([0x0023, 0x00f0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r3, #imm8"),
    ([0x0023, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r3, a"),
    ([0x0023, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, r3"),
    ([0x0023, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r3, off imm8"),
    ([0x0023, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab r3"),
    ([0x0024, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb r4.4"),
    ([0x0024, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, r4"),
    ([0x0024, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr r4"),
    ([0x0024, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr r4"),
    ([0x0024, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr r4"),
    ([0x0024, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb r4   "),
    ([0x0024, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb r4.4"),
    ([0x0024, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr r4, c"),
    ([0x0024, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, r4 "),
    ([0x0024, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, r4.4"),
    ([0x0024, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb r4.4, c"),
    ([0x0024, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, r4'"),
    ([0x0024, 0x007c, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8a, r4'       "),
    ([0x0024, 0x0080, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r4, #imm8"),
    ([0x0024, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r4, a"),
    ([0x0024, 0x0083, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r4, off imm8"),
    ([0x0024, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, r4"),
    ([0x0024, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, r4"),
    ([0x0024, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, a"),
    ([0x0024, 0x0090, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r4, #imm8"),
    ([0x0024, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r4, a"),
    ([0x0024, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r4, off imm8"),
    ([0x0024, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, r4"),
    ([0x0024, 0x00a0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r4, #imm8"),
    ([0x0024, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r4, a"),
    ([0x0024, 0x00a3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r4, off imm8"),
    ([0x0024, 0x00b0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r4, #imm8"),
    ([0x0024, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r4, a"),
    ([0x0024, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r4, off imm8"),
    ([0x0024, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb r4"),
    ([0x0024, 0x00c0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r4, #imm8"),
    ([0x0024, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r4, a"),
    ([0x0024, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r4, off imm8"),
    ([0x0024, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb r4"),
    ([0x0024, 0x00d0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r4, #imm8"),
    ([0x0024, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r4, a"),
    ([0x0024, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r4, off imm8"),
    ([0x0024, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb r4"),
    ([0x0024, 0x00e0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r4, #imm8"),
    ([0x0024, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r4, a"),
    ([0x0024, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r4, off imm8"),
    ([0x0024, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb r4"),
    ([0x0024, 0x00f0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r4, #imm8"),
    ([0x0024, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r4, a"),
    ([0x0024, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, r4"),
    ([0x0024, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r4, off imm8"),
    ([0x0024, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab r4"),
    ([0x0025, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb r5.5"),
    ([0x0025, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, r5"),
    ([0x0025, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr r5"),
    ([0x0025, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr r5"),
    ([0x0025, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr r5"),
    ([0x0025, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb r5   "),
    ([0x0025, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb r5.5"),
    ([0x0025, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr r5, c"),
    ([0x0025, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, r5 "),
    ([0x0025, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, r5.5"),
    ([0x0025, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb r5.5, c"),
    ([0x0025, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, r5'"),
    ([0x0025, 0x007c, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8a, r5'       "),
    ([0x0025, 0x0080, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r5, #imm8"),
    ([0x0025, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r5, a"),
    ([0x0025, 0x0083, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r5, off imm8"),
    ([0x0025, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, r5"),
    ([0x0025, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, r5"),
    ([0x0025, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, a"),
    ([0x0025, 0x0090, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r5, #imm8"),
    ([0x0025, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r5, a"),
    ([0x0025, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r5, off imm8"),
    ([0x0025, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, r5"),
    ([0x0025, 0x00a0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r5, #imm8"),
    ([0x0025, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r5, a"),
    ([0x0025, 0x00a3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r5, off imm8"),
    ([0x0025, 0x00b0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r5, #imm8"),
    ([0x0025, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r5, a"),
    ([0x0025, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r5, off imm8"),
    ([0x0025, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb r5"),
    ([0x0025, 0x00c0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r5, #imm8"),
    ([0x0025, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r5, a"),
    ([0x0025, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r5, off imm8"),
    ([0x0025, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb r5"),
    ([0x0025, 0x00d0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r5, #imm8"),
    ([0x0025, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r5, a"),
    ([0x0025, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r5, off imm8"),
    ([0x0025, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb r5"),
    ([0x0025, 0x00e0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r5, #imm8"),
    ([0x0025, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r5, a"),
    ([0x0025, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r5, off imm8"),
    ([0x0025, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb r5"),
    ([0x0025, 0x00f0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r5, #imm8"),
    ([0x0025, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r5, a"),
    ([0x0025, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, r5"),
    ([0x0025, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r5, off imm8"),
    ([0x0025, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab r5"),
    ([0x0026, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb r6.6"),
    ([0x0026, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, r6"),
    ([0x0026, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr r6"),
    ([0x0026, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr r6"),
    ([0x0026, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr r6"),
    ([0x0026, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb r6   "),
    ([0x0026, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb r6.6"),
    ([0x0026, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr r6, c"),
    ([0x0026, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, r6 "),
    ([0x0026, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, r6.6"),
    ([0x0026, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb r6.6, c"),
    ([0x0026, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, r6'"),
    ([0x0026, 0x007c, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8a, r6'       "),
    ([0x0026, 0x0080, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r6, #imm8"),
    ([0x0026, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r6, a"),
    ([0x0026, 0x0083, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r6, off imm8"),
    ([0x0026, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, r6"),
    ([0x0026, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, r6"),
    ([0x0026, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, a"),
    ([0x0026, 0x0090, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r6, #imm8"),
    ([0x0026, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r6, a"),
    ([0x0026, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r6, off imm8"),
    ([0x0026, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, r6"),
    ([0x0026, 0x00a0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r6, #imm8"),
    ([0x0026, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r6, a"),
    ([0x0026, 0x00a3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r6, off imm8"),
    ([0x0026, 0x00b0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r6, #imm8"),
    ([0x0026, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r6, a"),
    ([0x0026, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r6, off imm8"),
    ([0x0026, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb r6"),
    ([0x0026, 0x00c0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r6, #imm8"),
    ([0x0026, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r6, a"),
    ([0x0026, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r6, off imm8"),
    ([0x0026, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb r6"),
    ([0x0026, 0x00d0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r6, #imm8"),
    ([0x0026, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r6, a"),
    ([0x0026, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r6, off imm8"),
    ([0x0026, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb r6"),
    ([0x0026, 0x00e0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r6, #imm8"),
    ([0x0026, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r6, a"),
    ([0x0026, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r6, off imm8"),
    ([0x0026, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb r6"),
    ([0x0026, 0x00f0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r6, #imm8"),
    ([0x0026, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r6, a"),
    ([0x0026, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, r6"),
    ([0x0026, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r6, off imm8"),
    ([0x0026, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab r6"),
    ([0x0027, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb r7.7"),
    ([0x0027, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, r7"),
    ([0x0027, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr r7"),
    ([0x0027, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr r7"),
    ([0x0027, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr r7"),
    ([0x0027, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb r7   "),
    ([0x0027, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb r7.7"),
    ([0x0027, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr r7, c"),
    ([0x0027, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, r7 "),
    ([0x0027, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, r7.7"),
    ([0x0027, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb r7.7, c"),
    ([0x0027, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, r7'"),
    ([0x0027, 0x007c, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8a, r7'       "),
    ([0x0027, 0x0080, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r7, #imm8"),
    ([0x0027, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r7, a"),
    ([0x0027, 0x0083, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r7, off imm8"),
    ([0x0027, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, r7"),
    ([0x0027, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, r7"),
    ([0x0027, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, a"),
    ([0x0027, 0x0090, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r7, #imm8"),
    ([0x0027, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r7, a"),
    ([0x0027, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r7, off imm8"),
    ([0x0027, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, r7"),
    ([0x0027, 0x00a0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r7, #imm8"),
    ([0x0027, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r7, a"),
    ([0x0027, 0x00a3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r7, off imm8"),
    ([0x0027, 0x00b0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r7, #imm8"),
    ([0x0027, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r7, a"),
    ([0x0027, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r7, off imm8"),
    ([0x0027, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb r7"),
    ([0x0027, 0x00c0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r7, #imm8"),
    ([0x0027, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r7, a"),
    ([0x0027, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r7, off imm8"),
    ([0x0027, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb r7"),
    ([0x0027, 0x00d0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r7, #imm8"),
    ([0x0027, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r7, a"),
    ([0x0027, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r7, off imm8"),
    ([0x0027, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb r7"),
    ([0x0027, 0x00e0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r7, #imm8"),
    ([0x0027, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r7, a"),
    ([0x0027, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r7, off imm8"),
    ([0x0027, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb r7"),
    ([0x0027, 0x00f0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r7, #imm8"),
    ([0x0027, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r7, a"),
    ([0x0027, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, r7"),
    ([0x0027, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r7, off imm8"),
    ([0x0027, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab r7"),
    ([0x0028, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, er0"),
    ([0x0028, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, r0"),
    ([0x0029, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, er1"),
    ([0x0029, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, r1"),
    ([0x002a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, er2"),
    ([0x002a, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, r2"),
    ([0x002b, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, er3"),
    ([0x002b, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, r3"),
    ([0x002c, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, r4"),
    ([0x002d, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, r5"),
    ([0x002e, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, r6"),
    ([0x002f, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, r7"),
    ([0x0030, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jrnz dp, rel8"),
    ([0x0031, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CALL, "scal rel8"),
    ([0x0032, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_CALL, "cal imm16"),
    ([0x0033, ], DD_FLAG_ONE, CF_FLAG_NEXT, "rol a"),
    ([0x0033, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "rolb a"),
    ([0x0034, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, er0"),
    ([0x0035, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, er1"),
    ([0x0036, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, er2"),
    ([0x0037, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, er3"),
    ([0x0038, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, er0"),
    ([0x0038, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, r0"),
    ([0x0039, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, er1"),
    ([0x0039, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, r1"),
    ([0x003a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, er2"),
    ([0x003a, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, r2"),
    ([0x003b, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, er3"),
    ([0x003b, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, r3"),
    ([0x003c, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, r4"),
    ([0x003d, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, r5"),
    ([0x003e, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, r6"),
    ([0x003f, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, r7"),
    ([0x0040, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, x1"),
    ([0x0041, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, x2"),
    ([0x0042, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, dp"),
    ([0x0043, ], DD_FLAG_ONE, CF_FLAG_NEXT, "ror a"),
    ([0x0043, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "rorb a"),
    ([0x0044, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, er0"),
    ([0x0044, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr er0   "),
    ([0x0044, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc er0"),
    ([0x0044, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec er0"),
    ([0x0044, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [er0]"),
    ([0x0044, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [er0]"),
    ([0x0044, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, er0'"),
    ([0x0044, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, er0"),
    ([0x0044, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, er0"),
    ([0x0044, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, er0"),
    ([0x0044, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, er0"),
    ([0x0044, 0x007c, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8a, er0'"),
    ([0x0044, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, er0"),
    ([0x0044, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, er0"),
    ([0x0044, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, er0"),
    ([0x0044, 0x0080, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add er0, #imm16"),
    ([0x0044, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add er0, a"),
    ([0x0044, 0x0083, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add er0, off imm8"),
    ([0x0044, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, a"),
    ([0x0044, 0x0090, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er0, #imm16"),
    ([0x0044, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er0, a"),
    ([0x0044, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er0, off imm8"),
    ([0x0044, 0x0098, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, #imm16"),
    ([0x0044, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, er0"),
    ([0x0044, 0x00a0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub er0, #imm16"),
    ([0x0044, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub er0, a"),
    ([0x0044, 0x00a3, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub er0, off imm8"),
    ([0x0044, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [er0]"),
    ([0x0044, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [er0]"),
    ([0x0044, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [er0]"),
    ([0x0044, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [er0]"),
    ([0x0044, 0x00b0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er0, #imm16"),
    ([0x0044, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er0, a"),
    ([0x0044, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er0, off imm8"),
    ([0x0044, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol er0"),
    ([0x0044, 0x00c0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er0, #imm16"),
    ([0x0044, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er0, a"),
    ([0x0044, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er0, off imm8"),
    ([0x0044, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror er0"),
    ([0x0044, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er0, #imm16"),
    ([0x0044, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er0, #imm16"),
    ([0x0044, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er0, a"),
    ([0x0044, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er0, off imm8"),
    ([0x0044, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll er0"),
    ([0x0044, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er0, a"),
    ([0x0044, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er0, off imm8"),
    ([0x0044, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl er0"),
    ([0x0044, 0x00f0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er0, #imm16"),
    ([0x0044, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er0, a"),
    ([0x0044, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er0, off imm8"),
    ([0x0044, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra er0"),
    ([0x0045, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, er1"),
    ([0x0045, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr er1   "),
    ([0x0045, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc er1"),
    ([0x0045, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec er1"),
    ([0x0045, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [er1]"),
    ([0x0045, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [er1]"),
    ([0x0045, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, er1'"),
    ([0x0045, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, er1"),
    ([0x0045, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, er1"),
    ([0x0045, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, er1"),
    ([0x0045, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, er1"),
    ([0x0045, 0x007c, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8a, er1'"),
    ([0x0045, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, er1"),
    ([0x0045, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, er1"),
    ([0x0045, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, er1"),
    ([0x0045, 0x0080, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add er1, #imm16"),
    ([0x0045, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add er1, a"),
    ([0x0045, 0x0083, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add er1, off imm8"),
    ([0x0045, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, a"),
    ([0x0045, 0x0090, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er1, #imm16"),
    ([0x0045, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er1, a"),
    ([0x0045, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er1, off imm8"),
    ([0x0045, 0x0098, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, #imm16"),
    ([0x0045, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, er1"),
    ([0x0045, 0x00a0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub er1, #imm16"),
    ([0x0045, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub er1, a"),
    ([0x0045, 0x00a3, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub er1, off imm8"),
    ([0x0045, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [er1]"),
    ([0x0045, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [er1]"),
    ([0x0045, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [er1]"),
    ([0x0045, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [er1]"),
    ([0x0045, 0x00b0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er1, #imm16"),
    ([0x0045, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er1, a"),
    ([0x0045, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er1, off imm8"),
    ([0x0045, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol er1"),
    ([0x0045, 0x00c0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er1, #imm16"),
    ([0x0045, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er1, a"),
    ([0x0045, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er1, off imm8"),
    ([0x0045, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror er1"),
    ([0x0045, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er1, #imm16"),
    ([0x0045, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er1, #imm16"),
    ([0x0045, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er1, a"),
    ([0x0045, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er1, off imm8"),
    ([0x0045, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll er1"),
    ([0x0045, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er1, a"),
    ([0x0045, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er1, off imm8"),
    ([0x0045, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl er1"),
    ([0x0045, 0x00f0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er1, #imm16"),
    ([0x0045, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er1, a"),
    ([0x0045, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er1, off imm8"),
    ([0x0045, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra er1"),
    ([0x0046, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, er2"),
    ([0x0046, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr er2   "),
    ([0x0046, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc er2"),
    ([0x0046, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec er2"),
    ([0x0046, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [er2]"),
    ([0x0046, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [er2]"),
    ([0x0046, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, er2'"),
    ([0x0046, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, er2"),
    ([0x0046, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, er2"),
    ([0x0046, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, er2"),
    ([0x0046, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, er2"),
    ([0x0046, 0x007c, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8a, er2'"),
    ([0x0046, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, er2"),
    ([0x0046, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, er2"),
    ([0x0046, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, er2"),
    ([0x0046, 0x0080, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add er2, #imm16"),
    ([0x0046, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add er2, a"),
    ([0x0046, 0x0083, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add er2, off imm8"),
    ([0x0046, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, a"),
    ([0x0046, 0x0090, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er2, #imm16"),
    ([0x0046, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er2, a"),
    ([0x0046, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er2, off imm8"),
    ([0x0046, 0x0098, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, #imm16"),
    ([0x0046, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, er2"),
    ([0x0046, 0x00a0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub er2, #imm16"),
    ([0x0046, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub er2, a"),
    ([0x0046, 0x00a3, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub er2, off imm8"),
    ([0x0046, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [er2]"),
    ([0x0046, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [er2]"),
    ([0x0046, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [er2]"),
    ([0x0046, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [er2]"),
    ([0x0046, 0x00b0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er2, #imm16"),
    ([0x0046, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er2, a"),
    ([0x0046, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er2, off imm8"),
    ([0x0046, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol er2"),
    ([0x0046, 0x00c0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er2, #imm16"),
    ([0x0046, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er2, a"),
    ([0x0046, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er2, off imm8"),
    ([0x0046, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror er2"),
    ([0x0046, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er2, #imm16"),
    ([0x0046, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er2, #imm16"),
    ([0x0046, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er2, a"),
    ([0x0046, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er2, off imm8"),
    ([0x0046, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll er2"),
    ([0x0046, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er2, a"),
    ([0x0046, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er2, off imm8"),
    ([0x0046, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl er2"),
    ([0x0046, 0x00f0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er2, #imm16"),
    ([0x0046, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er2, a"),
    ([0x0046, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er2, off imm8"),
    ([0x0046, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra er2"),
    ([0x0047, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, er3"),
    ([0x0047, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr er3   "),
    ([0x0047, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc er3"),
    ([0x0047, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec er3"),
    ([0x0047, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [er3]"),
    ([0x0047, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [er3]"),
    ([0x0047, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, er3'"),
    ([0x0047, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, er3"),
    ([0x0047, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, er3"),
    ([0x0047, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, er3"),
    ([0x0047, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, er3"),
    ([0x0047, 0x007c, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8a, er3'"),
    ([0x0047, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, er3"),
    ([0x0047, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, er3"),
    ([0x0047, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, er3"),
    ([0x0047, 0x0080, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add er3, #imm16"),
    ([0x0047, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add er3, a"),
    ([0x0047, 0x0083, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add er3, off imm8"),
    ([0x0047, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, a"),
    ([0x0047, 0x0090, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er3, #imm16"),
    ([0x0047, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er3, a"),
    ([0x0047, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er3, off imm8"),
    ([0x0047, 0x0098, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, #imm16"),
    ([0x0047, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, er3"),
    ([0x0047, 0x00a0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub er3, #imm16"),
    ([0x0047, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub er3, a"),
    ([0x0047, 0x00a3, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub er3, off imm8"),
    ([0x0047, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [er3]"),
    ([0x0047, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [er3]"),
    ([0x0047, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [er3]"),
    ([0x0047, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [er3]"),
    ([0x0047, 0x00b0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er3, #imm16"),
    ([0x0047, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er3, a"),
    ([0x0047, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er3, off imm8"),
    ([0x0047, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol er3"),
    ([0x0047, 0x00c0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er3, #imm16"),
    ([0x0047, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er3, a"),
    ([0x0047, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er3, off imm8"),
    ([0x0047, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror er3"),
    ([0x0047, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er3, #imm16"),
    ([0x0047, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er3, #imm16"),
    ([0x0047, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er3, a"),
    ([0x0047, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er3, off imm8"),
    ([0x0047, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll er3"),
    ([0x0047, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er3, a"),
    ([0x0047, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er3, off imm8"),
    ([0x0047, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl er3"),
    ([0x0047, 0x00f0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er3, #imm16"),
    ([0x0047, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er3, a"),
    ([0x0047, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er3, off imm8"),
    ([0x0047, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra er3"),
    ([0x0048, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, er0"),
    ([0x0048, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, r0"),
    ([0x0049, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, er1"),
    ([0x0049, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, r1"),
    ([0x004a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, er2"),
    ([0x004a, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, r2"),
    ([0x004b, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, er3"),
    ([0x004b, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, r3"),
    ([0x004c, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, r4"),
    ([0x004d, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, r5"),
    ([0x004e, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, r6"),
    ([0x004f, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, r7"),
    ([0x0050, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, a"),
    ([0x0051, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, a"),
    ([0x0052, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, a"),
    ([0x0053, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sll a"),
    ([0x0053, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sllb a"),
    ([0x0054, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "pushs lrb"),
    ([0x0055, ], DD_FLAG_ONE, CF_FLAG_NEXT, "pushs a"),
    ([0x0057, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, #imm16"),
    ([0x0058, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, er0"),
    ([0x0058, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, r0"),
    ([0x0059, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, er1"),
    ([0x0059, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, r1"),
    ([0x005a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, er2"),
    ([0x005a, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, r2"),
    ([0x005b, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, er3"),
    ([0x005b, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, r3"),
    ([0x005c, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, r4"),
    ([0x005d, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, r5"),
    ([0x005e, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, r6"),
    ([0x005f, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, r7"),
    ([0x0060, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, #imm16"),
    ([0x0061, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, #imm16"),
    ([0x0062, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, #imm16"),
    ([0x0063, ], DD_FLAG_ONE, CF_FLAG_NEXT, "srl a"),
    ([0x0063, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "srlb a"),
    ([0x0064, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "pops lrb"),
    ([0x0065, ], DD_FLAG_SET, CF_FLAG_NEXT, "pops a"),
    ([0x0067, imm16L, imm16H, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, #imm16"),
    ([0x0068, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, er0"),
    ([0x0068, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, r0"),
    ([0x0069, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, er1"),
    ([0x0069, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, r1"),
    ([0x006a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, er2"),
    ([0x006a, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, r2"),
    ([0x006b, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, er3"),
    ([0x006b, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, r3"),
    ([0x006c, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, r4"),
    ([0x006d, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, r5"),
    ([0x006e, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, r6"),
    ([0x006f, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, r7"),
    ([0x0070, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc x1"),
    ([0x0071, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc x2"),
    ([0x0072, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc dp"),
    ([0x0073, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sra a"),
    ([0x0073, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "srab a"),
    ([0x0076, ], DD_FLAG_ONE, CF_FLAG_NEXT, "pushu a"),
    ([0x0077, imm8, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, #imm8"),
    ([0x0078, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, r0"),
    ([0x0079, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, r1"),
    ([0x007a, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, r2"),
    ([0x007b, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, r3"),
    ([0x007c, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, r4"),
    ([0x007d, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, r5"),
    ([0x007e, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, r6"),
    ([0x007f, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, r7"),
    ([0x0080, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec x1"),
    ([0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec x2"),
    ([0x0082, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec dp"),
    ([0x0083, ], DD_FLAG_ONE, CF_FLAG_NEXT, "swap"),
    ([0x0083, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "swapb"),
    ([0x0084, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xnbl a, off imm8"),
    ([0x0085, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sc"),
    ([0x0086, imm16L, imm16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, #imm16"),
    ([0x0086, imm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, #imm8"),
    ([0x0087, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, off imm8"),
    ([0x0087, imm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, off imm8"),
    ([0x0088, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, er0"),
    ([0x0088, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, r0"),
    ([0x0089, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, er1"),
    ([0x0089, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, r1"),
    ([0x008a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, er2"),
    ([0x008a, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, r2"),
    ([0x008b, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, er3"),
    ([0x008b, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, r3"),
    ([0x008c, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, r4"),
    ([0x008d, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, r5"),
    ([0x008e, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, r6"),
    ([0x008f, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, r7"),
    ([0x0090, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, x1"),
    ([0x0090, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr x1   "),
    ([0x0090, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [x1]"),
    ([0x0090, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [x1]"),
    ([0x0090, 0x0035, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mul "),
    ([0x0090, 0x0037, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "div"),
    ([0x0090, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, x1"),
    ([0x0090, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, x1"),
    ([0x0090, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, x1"),
    ([0x0090, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, x1"),
    ([0x0090, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, x1"),
    ([0x0090, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, x1"),
    ([0x0090, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, x1"),
    ([0x0090, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, x1"),
    ([0x0090, 0x007c, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8, x1"),
    ([0x0090, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, x1"),
    ([0x0090, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, x1"),
    ([0x0090, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, x1"),
    ([0x0090, 0x0080, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add x1, #imm16"),
    ([0x0090, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add x1, a"),
    ([0x0090, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, x1"),
    ([0x0090, 0x0083, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add x1, off imm8"),
    ([0x0090, 0x0090, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc x1, #imm16"),
    ([0x0090, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc x1, a"),
    ([0x0090, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, x1"),
    ([0x0090, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc x1, off imm8"),
    ([0x0090, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, x1"),
    ([0x0090, 0x009c, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, imm16"),
    ([0x0090, 0x009d, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, imm16"),
    ([0x0090, 0x009e, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, imm16"),
    ([0x0090, 0x009f, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, imm16"),
    ([0x0090, 0x00a0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub x1, #imm16"),
    ([0x0090, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub x1, a"),
    ([0x0090, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, x1"),
    ([0x0090, 0x00a3, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub x1, off imm8"),
    ([0x0090, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [x1]"),
    ([0x0090, 0x00a9, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, imm16[x1]"),
    ([0x0090, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [x1]"),
    ([0x0090, 0x00ab, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, imm16[x1]"),
    ([0x0090, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [x1]"),
    ([0x0090, 0x00ad, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, imm16[x1]"),
    ([0x0090, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [x1]"),
    ([0x0090, 0x00af, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, imm16[x1]"),
    ([0x0090, 0x00b0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc x1, #imm16"),
    ([0x0090, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc x1, a"),
    ([0x0090, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, x1"),
    ([0x0090, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc x1, off imm8"),
    ([0x0090, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol x1"),
    ([0x0090, 0x00c0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp x1, #imm16"),
    ([0x0090, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp x1, a"),
    ([0x0090, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, x1"),
    ([0x0090, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp x1, off imm8"),
    ([0x0090, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror x1"),
    ([0x0090, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and x1, #imm16"),
    ([0x0090, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or x1, #imm16"),
    ([0x0090, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and x1, a"),
    ([0x0090, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, x1"),
    ([0x0090, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and x1, off imm8"),
    ([0x0090, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll x1"),
    ([0x0090, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or x1, a"),
    ([0x0090, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, x1"),
    ([0x0090, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or x1, off imm8"),
    ([0x0090, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl x1"),
    ([0x0090, 0x00f0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor x1, #imm16"),
    ([0x0090, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor x1, a"),
    ([0x0090, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, x1"),
    ([0x0090, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor x1, off imm8"),
    ([0x0090, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra x1"),
    ([0x0091, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, x2"),
    ([0x0091, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr x2   "),
    ([0x0091, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [x2]"),
    ([0x0091, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [x2]"),
    ([0x0091, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, x2"),
    ([0x0091, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, x2"),
    ([0x0091, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, x2"),
    ([0x0091, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, x2"),
    ([0x0091, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, x2"),
    ([0x0091, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, x2"),
    ([0x0091, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, x2"),
    ([0x0091, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, x2"),
    ([0x0091, 0x007c, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8, x2"),
    ([0x0091, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, x2"),
    ([0x0091, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, x2"),
    ([0x0091, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, x2"),
    ([0x0091, 0x0080, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add x2, #imm16"),
    ([0x0091, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add x2, a"),
    ([0x0091, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, x2"),
    ([0x0091, 0x0083, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add x2, off imm8"),
    ([0x0091, 0x0090, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc x2, #imm16"),
    ([0x0091, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc x2, a"),
    ([0x0091, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, x2"),
    ([0x0091, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc x2, off imm8"),
    ([0x0091, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, x2"),
    ([0x0091, 0x00a0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub x2, #imm16"),
    ([0x0091, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub x2, a"),
    ([0x0091, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, x2"),
    ([0x0091, 0x00a3, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub x2, off imm8"),
    ([0x0091, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [x2]"),
    ([0x0091, 0x00a9, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, imm16[x2]"),
    ([0x0091, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [x2]"),
    ([0x0091, 0x00ab, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, imm16[x2]"),
    ([0x0091, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [x2]"),
    ([0x0091, 0x00ad, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, imm16[x2]"),
    ([0x0091, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [x2]"),
    ([0x0091, 0x00af, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, imm16[x2]"),
    ([0x0091, 0x00b0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc x2, #imm16"),
    ([0x0091, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc x2, a"),
    ([0x0091, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, x2"),
    ([0x0091, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc x2, off imm8"),
    ([0x0091, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol x2"),
    ([0x0091, 0x00c0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp x2, #imm16"),
    ([0x0091, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp x2, a"),
    ([0x0091, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, x2"),
    ([0x0091, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp x2, off imm8"),
    ([0x0091, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror x2"),
    ([0x0091, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and x2, #imm16"),
    ([0x0091, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or x2, #imm16"),
    ([0x0091, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and x2, a"),
    ([0x0091, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, x2"),
    ([0x0091, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and x2, off imm8"),
    ([0x0091, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll x2"),
    ([0x0091, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or x2, a"),
    ([0x0091, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, x2"),
    ([0x0091, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or x2, off imm8"),
    ([0x0091, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl x2"),
    ([0x0091, 0x00f0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor x2, #imm16"),
    ([0x0091, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor x2, a"),
    ([0x0091, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, x2"),
    ([0x0091, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor x2, off imm8"),
    ([0x0091, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra x2"),
    ([0x0092, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, dp"),
    ([0x0092, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr dp   "),
    ([0x0092, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [dp]"),
    ([0x0092, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [dp]"),
    ([0x0092, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, dp"),
    ([0x0092, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, dp"),
    ([0x0092, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, dp"),
    ([0x0092, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, dp"),
    ([0x0092, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, dp"),
    ([0x0092, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, dp"),
    ([0x0092, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, dp"),
    ([0x0092, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, dp"),
    ([0x0092, 0x007c, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8, dp"),
    ([0x0092, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, dp"),
    ([0x0092, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, dp"),
    ([0x0092, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, dp"),
    ([0x0092, 0x0080, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add dp, #imm16"),
    ([0x0092, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add dp, a"),
    ([0x0092, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, dp"),
    ([0x0092, 0x0083, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add dp, off imm8"),
    ([0x0092, 0x0090, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc dp, #imm16"),
    ([0x0092, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc dp, a"),
    ([0x0092, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, dp"),
    ([0x0092, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc dp, off imm8"),
    ([0x0092, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, dp"),
    ([0x0092, 0x00a0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub dp, #imm16"),
    ([0x0092, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub dp, a"),
    ([0x0092, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, dp"),
    ([0x0092, 0x00a3, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub dp, off imm8"),
    ([0x0092, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [dp]"),
    ([0x0092, 0x00a9, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, imm16[dp]"),
    ([0x0092, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [dp]"),
    ([0x0092, 0x00ab, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, imm16[dp]"),
    ([0x0092, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [dp]"),
    ([0x0092, 0x00ad, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, imm16[dp]"),
    ([0x0092, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [dp]"),
    ([0x0092, 0x00af, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, imm16[dp]"),
    ([0x0092, 0x00b0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc dp, #imm16"),
    ([0x0092, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc dp, a"),
    ([0x0092, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, dp"),
    ([0x0092, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc dp, off imm8"),
    ([0x0092, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol dp"),
    ([0x0092, 0x00c0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp dp, #imm16"),
    ([0x0092, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp dp, a"),
    ([0x0092, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, dp"),
    ([0x0092, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp dp, off imm8"),
    ([0x0092, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror dp"),
    ([0x0092, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and dp, #imm16"),
    ([0x0092, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or dp, #imm16"),
    ([0x0092, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and dp, a"),
    ([0x0092, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, dp"),
    ([0x0092, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and dp, off imm8"),
    ([0x0092, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll dp"),
    ([0x0092, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or dp, a"),
    ([0x0092, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, dp"),
    ([0x0092, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or dp, off imm8"),
    ([0x0092, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl dp"),
    ([0x0092, 0x00f0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor dp, #imm16"),
    ([0x0092, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor dp, a"),
    ([0x0092, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, dp"),
    ([0x0092, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor dp, off imm8"),
    ([0x0092, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra dp"),
    ([0x0093, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "daa"),
    ([0x0094, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "das"),
    ([0x0095, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rc"),
    ([0x0096, imm16L, imm16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, #imm16"),
    ([0x0096, imm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, #imm8"),
    ([0x0097, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, off imm8"),
    ([0x0097, imm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, off imm8"),
    ([0x0098, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, #imm8"),
    ([0x0099, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, #imm8"),
    ([0x009a, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, #imm8"),
    ([0x009b, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, #imm8"),
    ([0x009c, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, #imm8"),
    ([0x009d, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, #imm8"),
    ([0x009e, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, #imm8"),
    ([0x009f, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, #imm8"),
    ([0x00a0, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, ssp"),
    ([0x00a0, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr ssp   "),
    ([0x00a0, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc ssp"),
    ([0x00a0, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec ssp"),
    ([0x00a0, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [ssp]"),
    ([0x00a0, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [ssp]     "),
    ([0x00a0, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, ssp"),
    ([0x00a0, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, ssp"),
    ([0x00a0, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, ssp"),
    ([0x00a0, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, ssp"),
    ([0x00a0, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, ssp"),
    ([0x00a0, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, ssp"),
    ([0x00a0, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, ssp"),
    ([0x00a0, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, ssp"),
    ([0x00a0, 0x007c, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8, ssp"),
    ([0x00a0, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, ssp"),
    ([0x00a0, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, ssp"),
    ([0x00a0, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, ssp"),
    ([0x00a0, 0x0080, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add ssp, #imm16"),
    ([0x00a0, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add ssp, a"),
    ([0x00a0, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, ssp"),
    ([0x00a0, 0x0083, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add ssp, off imm8"),
    ([0x00a0, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, a"),
    ([0x00a0, 0x0090, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc ssp, #imm16"),
    ([0x00a0, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc ssp, a"),
    ([0x00a0, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, ssp"),
    ([0x00a0, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc ssp, off imm8"),
    ([0x00a0, 0x0098, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, #imm16"),
    ([0x00a0, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, ssp"),
    ([0x00a0, 0x00a0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub ssp, #imm16"),
    ([0x00a0, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub ssp, a"),
    ([0x00a0, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, ssp"),
    ([0x00a0, 0x00a3, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub ssp, off imm8"),
    ([0x00a0, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [ssp]"),
    ([0x00a0, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [ssp]"),
    ([0x00a0, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [ssp]"),
    ([0x00a0, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [ssp]"),
    ([0x00a0, 0x00b0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc ssp, #imm16"),
    ([0x00a0, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc ssp, a"),
    ([0x00a0, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, ssp"),
    ([0x00a0, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc ssp, off imm8"),
    ([0x00a0, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol ssp"),
    ([0x00a0, 0x00c0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp ssp, #imm16"),
    ([0x00a0, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp ssp, a"),
    ([0x00a0, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, ssp"),
    ([0x00a0, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp ssp, off imm8"),
    ([0x00a0, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror ssp"),
    ([0x00a0, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and ssp, #imm16"),
    ([0x00a0, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or ssp, #imm16"),
    ([0x00a0, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and ssp, a"),
    ([0x00a0, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, ssp"),
    ([0x00a0, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and ssp, off imm8"),
    ([0x00a0, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll ssp"),
    ([0x00a0, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or ssp, a"),
    ([0x00a0, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, ssp"),
    ([0x00a0, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or ssp, off imm8"),
    ([0x00a0, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl ssp"),
    ([0x00a0, 0x00f0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor ssp, #imm16"),
    ([0x00a0, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor ssp, a"),
    ([0x00a0, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, ssp"),
    ([0x00a0, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor ssp, off imm8"),
    ([0x00a0, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra ssp"),
    ([0x00a1, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, usp"),
    ([0x00a1, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr usp   "),
    ([0x00a1, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc usp"),
    ([0x00a1, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec usp"),
    ([0x00a1, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [usp]"),
    ([0x00a1, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [usp]     "),
    ([0x00a1, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, usp"),
    ([0x00a1, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, usp"),
    ([0x00a1, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, usp"),
    ([0x00a1, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, usp"),
    ([0x00a1, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, usp"),
    ([0x00a1, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, usp"),
    ([0x00a1, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, usp"),
    ([0x00a1, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, usp"),
    ([0x00a1, 0x007c, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8, usp "),
    ([0x00a1, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, usp"),
    ([0x00a1, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, usp"),
    ([0x00a1, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, usp"),
    ([0x00a1, 0x0080, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add usp, #imm16"),
    ([0x00a1, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add usp, a"),
    ([0x00a1, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, usp"),
    ([0x00a1, 0x0083, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add usp, off imm8 "),
    ([0x00a1, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, a"),
    ([0x00a1, 0x0090, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc usp, #imm16"),
    ([0x00a1, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc usp, a"),
    ([0x00a1, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, usp"),
    ([0x00a1, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc usp, off imm8 "),
    ([0x00a1, 0x0098, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, #imm16"),
    ([0x00a1, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, usp"),
    ([0x00a1, 0x00a0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub usp, #imm16"),
    ([0x00a1, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub usp, a"),
    ([0x00a1, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, usp"),
    ([0x00a1, 0x00a3, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub usp, off imm8 "),
    ([0x00a1, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [usp]"),
    ([0x00a1, 0x00a9, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, imm16[usp]"),
    ([0x00a1, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [usp]"),
    ([0x00a1, 0x00ab, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, imm16[usp]"),
    ([0x00a1, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [usp]"),
    ([0x00a1, 0x00ad, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, imm16[usp]"),
    ([0x00a1, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [usp]"),
    ([0x00a1, 0x00b0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc usp, #imm16"),
    ([0x00a1, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc usp, a"),
    ([0x00a1, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, usp"),
    ([0x00a1, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc usp, off imm8 "),
    ([0x00a1, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol usp"),
    ([0x00a1, 0x00c0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp usp, #imm16"),
    ([0x00a1, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp usp, a"),
    ([0x00a1, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, usp"),
    ([0x00a1, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp usp, off imm8 "),
    ([0x00a1, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror usp"),
    ([0x00a1, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and usp, #imm16"),
    ([0x00a1, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or usp, #imm16"),
    ([0x00a1, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and usp, a"),
    ([0x00a1, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, usp"),
    ([0x00a1, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and usp, off imm8 "),
    ([0x00a1, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll usp"),
    ([0x00a1, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or usp, a"),
    ([0x00a1, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, usp"),
    ([0x00a1, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or usp, off imm8 "),
    ([0x00a1, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl usp"),
    ([0x00a1, 0x00f0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor usp, #imm16"),
    ([0x00a1, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor usp, a"),
    ([0x00a1, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, usp"),
    ([0x00a1, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor usp, off imm8 "),
    ([0x00a1, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra usp"),
    ([0x00a2, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswh.0"),
    ([0x00a2, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswh.1"),
    ([0x00a2, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswh.2"),
    ([0x00a2, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswh.3"),
    ([0x00a2, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswh.4"),
    ([0x00a2, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswh.5"),
    ([0x00a2, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswh.6"),
    ([0x00a2, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswh.7"),
    ([0x00a2, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, pswh"),
    ([0x00a2, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr pswh"),
    ([0x00a2, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr pswh"),
    ([0x00a2, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr pswh"),
    ([0x00a2, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb pswh   "),
    ([0x00a2, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb pswh"),
    ([0x00a2, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb pswh"),
    ([0x00a2, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswh.0"),
    ([0x00a2, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswh.1"),
    ([0x00a2, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswh.2"),
    ([0x00a2, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswh.3"),
    ([0x00a2, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswh.4"),
    ([0x00a2, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswh.5"),
    ([0x00a2, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswh.6"),
    ([0x00a2, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswh.7"),
    ([0x00a2, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr pswh, c"),
    ([0x00a2, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, pswh"),
    ([0x00a2, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswh.0"),
    ([0x00a2, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswh.1"),
    ([0x00a2, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswh.2"),
    ([0x00a2, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswh.3"),
    ([0x00a2, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswh.4"),
    ([0x00a2, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswh.5"),
    ([0x00a2, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswh.6"),
    ([0x00a2, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswh.7"),
    ([0x00a2, 0x0034, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mulb"),
    ([0x00a2, 0x0036, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "divb"),
    ([0x00a2, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswh.0, c"),
    ([0x00a2, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswh.1, c"),
    ([0x00a2, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswh.2, c"),
    ([0x00a2, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswh.3, c"),
    ([0x00a2, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswh.4, c"),
    ([0x00a2, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswh.5, c"),
    ([0x00a2, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswh.6, c"),
    ([0x00a2, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswh.7, c"),
    ([0x00a2, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, pswh"),
    ([0x00a2, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, pswh"),
    ([0x00a2, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, pswh"),
    ([0x00a2, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, pswh"),
    ([0x00a2, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, pswh"),
    ([0x00a2, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, pswh"),
    ([0x00a2, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, pswh"),
    ([0x00a2, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, pswh"),
    ([0x00a2, 0x007c, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8, pswh       "),
    ([0x00a2, 0x0080, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb pswh, #imm8"),
    ([0x00a2, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb pswh, a"),
    ([0x00a2, 0x0082, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, pswh"),
    ([0x00a2, 0x0083, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb pswh, off imm8"),
    ([0x00a2, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, pswh"),
    ([0x00a2, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, pswh"),
    ([0x00a2, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, a"),
    ([0x00a2, 0x0090, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb pswh, #imm8"),
    ([0x00a2, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb pswh, a"),
    ([0x00a2, 0x0092, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, pswh"),
    ([0x00a2, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb pswh, off imm8"),
    ([0x00a2, 0x0098, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, #imm8"),
    ([0x00a2, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, pswh"),
    ([0x00a2, 0x00a0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb pswh, #imm8"),
    ([0x00a2, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb pswh, a"),
    ([0x00a2, 0x00a2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, pswh"),
    ([0x00a2, 0x00a3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb pswh, off imm8"),
    ([0x00a2, 0x00af, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, imm16[usp]"),
    ([0x00a2, 0x00b0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb pswh, #imm8"),
    ([0x00a2, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb pswh, a"),
    ([0x00a2, 0x00b2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, pswh"),
    ([0x00a2, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb pswh, off imm8"),
    ([0x00a2, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb pswh"),
    ([0x00a2, 0x00c0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb pswh, #imm8"),
    ([0x00a2, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb pswh, a"),
    ([0x00a2, 0x00c2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, pswh"),
    ([0x00a2, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb pswh, off imm8"),
    ([0x00a2, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb pswh"),
    ([0x00a2, 0x00d0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb pswh, #imm8"),
    ([0x00a2, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb pswh, a"),
    ([0x00a2, 0x00d2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, pswh"),
    ([0x00a2, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb pswh, off imm8"),
    ([0x00a2, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb pswh"),
    ([0x00a2, 0x00e0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb pswh, #imm8"),
    ([0x00a2, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb pswh, a"),
    ([0x00a2, 0x00e2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, pswh"),
    ([0x00a2, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb pswh, off imm8"),
    ([0x00a2, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb pswh"),
    ([0x00a2, 0x00f0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb pswh, #imm8"),
    ([0x00a2, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb pswh, a"),
    ([0x00a2, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, pswh"),
    ([0x00a2, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb pswh, off imm8"),
    ([0x00a2, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab pswh"),
    ([0x00a3, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswl.0"),
    ([0x00a3, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswl.1"),
    ([0x00a3, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswl.2"),
    ([0x00a3, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswl.3"),
    ([0x00a3, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswl.4"),
    ([0x00a3, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswl.5"),
    ([0x00a3, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswl.6"),
    ([0x00a3, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswl.7"),
    ([0x00a3, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, pswl"),
    ([0x00a3, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr pswl"),
    ([0x00a3, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr pswl"),
    ([0x00a3, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr pswl"),
    ([0x00a3, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb pswl   "),
    ([0x00a3, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb pswl"),
    ([0x00a3, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb pswl"),
    ([0x00a3, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswl.0"),
    ([0x00a3, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswl.1"),
    ([0x00a3, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswl.2"),
    ([0x00a3, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswl.3"),
    ([0x00a3, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswl.4"),
    ([0x00a3, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswl.5"),
    ([0x00a3, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswl.6"),
    ([0x00a3, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswl.7"),
    ([0x00a3, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr pswl, c"),
    ([0x00a3, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, pswl"),
    ([0x00a3, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswl.0"),
    ([0x00a3, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswl.1"),
    ([0x00a3, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswl.2"),
    ([0x00a3, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswl.3"),
    ([0x00a3, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswl.4"),
    ([0x00a3, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswl.5"),
    ([0x00a3, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswl.6"),
    ([0x00a3, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswl.7"),
    ([0x00a3, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswl.0, c"),
    ([0x00a3, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswl.1, c"),
    ([0x00a3, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswl.2, c"),
    ([0x00a3, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswl.3, c"),
    ([0x00a3, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswl.4, c"),
    ([0x00a3, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswl.5, c"),
    ([0x00a3, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswl.6, c"),
    ([0x00a3, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswl.7, c"),
    ([0x00a3, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, pswl"),
    ([0x00a3, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, pswl"),
    ([0x00a3, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, pswl"),
    ([0x00a3, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, pswl"),
    ([0x00a3, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, pswl"),
    ([0x00a3, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, pswl"),
    ([0x00a3, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, pswl"),
    ([0x00a3, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, pswl"),
    ([0x00a3, 0x007c, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8, pswl       "),
    ([0x00a3, 0x0080, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb pswl, #imm8"),
    ([0x00a3, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb pswl, a"),
    ([0x00a3, 0x0082, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, pswl"),
    ([0x00a3, 0x0083, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb pswl, off imm8"),
    ([0x00a3, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, pswl"),
    ([0x00a3, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, pswl"),
    ([0x00a3, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, a"),
    ([0x00a3, 0x0090, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb pswl, #imm8"),
    ([0x00a3, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb pswl, a"),
    ([0x00a3, 0x0092, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, pswl"),
    ([0x00a3, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb pswl, off imm8"),
    ([0x00a3, 0x0098, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, #imm8"),
    ([0x00a3, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, pswl"),
    ([0x00a3, 0x00a0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb pswl, #imm8"),
    ([0x00a3, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb pswl, a"),
    ([0x00a3, 0x00a2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, pswl"),
    ([0x00a3, 0x00a3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb pswl, off imm8"),
    ([0x00a3, 0x00b0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb pswl, #imm8"),
    ([0x00a3, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb pswl, a"),
    ([0x00a3, 0x00b2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, pswl"),
    ([0x00a3, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb pswl, off imm8"),
    ([0x00a3, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb pswl"),
    ([0x00a3, 0x00c0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb pswl, #imm8"),
    ([0x00a3, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb pswl, a"),
    ([0x00a3, 0x00c2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, pswl"),
    ([0x00a3, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb pswl, off imm8"),
    ([0x00a3, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb pswl"),
    ([0x00a3, 0x00d0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb pswl, #imm8"),
    ([0x00a3, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb pswl, a"),
    ([0x00a3, 0x00d2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, pswl"),
    ([0x00a3, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb pswl, off imm8"),
    ([0x00a3, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb pswl"),
    ([0x00a3, 0x00e0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb pswl, #imm8"),
    ([0x00a3, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb pswl, a"),
    ([0x00a3, 0x00e2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, pswl"),
    ([0x00a3, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb pswl, off imm8"),
    ([0x00a3, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb pswl"),
    ([0x00a3, 0x00f0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb pswl, #imm8"),
    ([0x00a3, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb pswl, a"),
    ([0x00a3, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, pswl"),
    ([0x00a3, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb pswl, off imm8"),
    ([0x00a3, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab pswl"),
    ([0x00a4, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, lrb"),
    ([0x00a4, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr lrb   "),
    ([0x00a4, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [lrb]"),
    ([0x00a4, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [lrb]     "),
    ([0x00a4, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, lrb"),
    ([0x00a4, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, lrb"),
    ([0x00a4, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, lrb"),
    ([0x00a4, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, lrb"),
    ([0x00a4, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, lrb"),
    ([0x00a4, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, lrb"),
    ([0x00a4, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, lrb"),
    ([0x00a4, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, lrb"),
    ([0x00a4, 0x007c, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8, lrb"),
    ([0x00a4, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, lrb"),
    ([0x00a4, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, lrb"),
    ([0x00a4, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, lrb"),
    ([0x00a4, 0x0080, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add lrb, #imm16"),
    ([0x00a4, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add lrb, a"),
    ([0x00a4, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, lrb"),
    ([0x00a4, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, a"),
    ([0x00a4, 0x0090, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc lrb, #imm16"),
    ([0x00a4, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc lrb, a"),
    ([0x00a4, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, lrb"),
    ([0x00a4, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, lrb"),
    ([0x00a4, 0x00a0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub lrb, #imm16"),
    ([0x00a4, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub lrb, a"),
    ([0x00a4, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, lrb"),
    ([0x00a4, 0x00a3, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub lrb, off imm8"),
    ([0x00a4, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [lrb]"),
    ([0x00a4, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [lrb]"),
    ([0x00a4, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [lrb]"),
    ([0x00a4, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [lrb]"),
    ([0x00a4, 0x00b0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc lrb, #imm16"),
    ([0x00a4, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc lrb, a"),
    ([0x00a4, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, lrb"),
    ([0x00a4, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc lrb, off imm8"),
    ([0x00a4, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol lrb"),
    ([0x00a4, 0x00c0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp lrb, #imm16"),
    ([0x00a4, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp lrb, a"),
    ([0x00a4, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, lrb"),
    ([0x00a4, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp lrb, off imm8"),
    ([0x00a4, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror lrb"),
    ([0x00a4, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and lrb, #imm16"),
    ([0x00a4, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or lrb, #imm16"),
    ([0x00a4, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and lrb, a"),
    ([0x00a4, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, lrb"),
    ([0x00a4, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll lrb"),
    ([0x00a4, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or lrb, a"),
    ([0x00a4, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, lrb"),
    ([0x00a4, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or lrb, off imm8"),
    ([0x00a4, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl lrb"),
    ([0x00a4, 0x00f0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor lrb, #imm16"),
    ([0x00a4, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor lrb, a"),
    ([0x00a4, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, lrb"),
    ([0x00a4, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor lrb, off imm8"),
    ([0x00a4, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra lrb"),
    ([0x00a6, imm16L, imm16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, #imm16"),
    ([0x00a6, imm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, #imm8"),
    ([0x00a7, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, off imm8"),
    ([0x00a7, imm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, off imm8"),
    ([0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb r0"),
    ([0x00a9, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb r1"),
    ([0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb r2"),
    ([0x00ab, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb r3"),
    ([0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb r4"),
    ([0x00ad, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb r5"),
    ([0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb r6"),
    ([0x00af, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb r7"),
    ([0x00b0, imm16L, imm16H, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr imm16[x1]   "),
    ([0x00b0, imm16L, imm16H, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [imm16[x1]]"),
    ([0x00b0, imm16L, imm16H, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [imm16[x1]]     "),
    ([0x00b0, imm16L, imm16H, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x007c, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add imm16[x1], a"),
    ([0x00b0, imm16L, imm16H, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x0083, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add imm16[x1], off imm8"),
    ([0x00b0, imm16L, imm16H, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov imm16[x1], a"),
    ([0x00b0, imm16L, imm16H, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc imm16[x1], a"),
    ([0x00b0, imm16L, imm16H, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc imm16[x1], off imm8"),
    ([0x00b0, imm16L, imm16H, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub imm16[x1], a"),
    ([0x00b0, imm16L, imm16H, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x00a3, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub imm16[x1], off imm8"),
    ([0x00b0, imm16L, imm16H, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [imm16[x1]]"),
    ([0x00b0, imm16L, imm16H, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [imm16[x1]]"),
    ([0x00b0, imm16L, imm16H, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [imm16[x1]]"),
    ([0x00b0, imm16L, imm16H, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [imm16[x1]]"),
    ([0x00b0, imm16L, imm16H, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc imm16[x1], a"),
    ([0x00b0, imm16L, imm16H, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc imm16[x1], off imm8"),
    ([0x00b0, imm16L, imm16H, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp imm16[x1], a"),
    ([0x00b0, imm16L, imm16H, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp imm16[x1], off imm8"),
    ([0x00b0, imm16L, imm16H, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and imm16[x1], a"),
    ([0x00b0, imm16L, imm16H, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and imm16[x1], off imm8"),
    ([0x00b0, imm16L, imm16H, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or imm16[x1], a"),
    ([0x00b0, imm16L, imm16H, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or imm16[x1], off imm8"),
    ([0x00b0, imm16L, imm16H, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor imm16[x1], a"),
    ([0x00b0, imm16L, imm16H, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, imm16[x1]"),
    ([0x00b0, imm16L, imm16H, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor imm16[x1], off imm8"),
    ([0x00b0, imm16L, imm16H, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra imm16[x1]"),
    ([0x00b0, imm16Lb, imm16Hb, 0x0080, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add imm16b[x1], #imm16"),
    ([0x00b0, imm16Lb, imm16Hb, 0x0090, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc imm16b[x1], #imm16"),
    ([0x00b0, imm16Lb, imm16Hb, 0x0098, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov imm16b[x1], #imm16"),
    ([0x00b0, imm16Lb, imm16Hb, 0x00a0, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub imm16b[x1], #imm16"),
    ([0x00b0, imm16Lb, imm16Hb, 0x00b0, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc imm16b[x1], #imm16"),
    ([0x00b0, imm16Lb, imm16Hb, 0x00c0, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp imm16b[x1], #imm16"),
    ([0x00b0, imm16Lb, imm16Hb, 0x00d0, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and imm16b[x1], #imm16"),
    ([0x00b0, imm16Lb, imm16Hb, 0x00d0, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or imm16b[x1], #imm16"),
    ([0x00b0, imm16Lb, imm16Hb, 0x00f0, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor imm16b[x1], #imm16"),
    ([0x00b1, imm16L, imm16H, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr imm16[x2]   "),
    ([0x00b1, imm16L, imm16H, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [imm16[x2]]"),
    ([0x00b1, imm16L, imm16H, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [imm16[x2]]     "),
    ([0x00b1, imm16L, imm16H, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x007c, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add imm16[x2], a"),
    ([0x00b1, imm16L, imm16H, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x0083, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add imm16[x2], off imm8"),
    ([0x00b1, imm16L, imm16H, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov imm16[x2], a"),
    ([0x00b1, imm16L, imm16H, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc imm16[x2], a"),
    ([0x00b1, imm16L, imm16H, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc imm16[x2], off imm8"),
    ([0x00b1, imm16L, imm16H, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub imm16[x2], a"),
    ([0x00b1, imm16L, imm16H, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x00a3, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub imm16[x2], off imm8"),
    ([0x00b1, imm16L, imm16H, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [imm16[x2]]"),
    ([0x00b1, imm16L, imm16H, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [imm16[x2]]"),
    ([0x00b1, imm16L, imm16H, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [imm16[x2]]"),
    ([0x00b1, imm16L, imm16H, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [imm16[x2]]"),
    ([0x00b1, imm16L, imm16H, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc imm16[x2], a"),
    ([0x00b1, imm16L, imm16H, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc imm16[x2], off imm8"),
    ([0x00b1, imm16L, imm16H, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp imm16[x2], a"),
    ([0x00b1, imm16L, imm16H, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp imm16[x2], off imm8"),
    ([0x00b1, imm16L, imm16H, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and imm16[x2], a"),
    ([0x00b1, imm16L, imm16H, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and imm16[x2], off imm8"),
    ([0x00b1, imm16L, imm16H, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or imm16[x2], a"),
    ([0x00b1, imm16L, imm16H, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or imm16[x2], off imm8"),
    ([0x00b1, imm16L, imm16H, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor imm16[x2], a"),
    ([0x00b1, imm16L, imm16H, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, imm16[x2]"),
    ([0x00b1, imm16L, imm16H, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor imm16[x2], off imm8"),
    ([0x00b1, imm16L, imm16H, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra imm16[x2]"),
    ([0x00b1, imm16Lb, imm16Hb, 0x0080, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add imm16b[x2], #imm16"),
    ([0x00b1, imm16Lb, imm16Hb, 0x0090, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc imm16b[x2], #imm16"),
    ([0x00b1, imm16Lb, imm16Hb, 0x0098, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov imm16b[x2], #imm16"),
    ([0x00b1, imm16Lb, imm16Hb, 0x00a0, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub imm16b[x2], #imm16"),
    ([0x00b1, imm16Lb, imm16Hb, 0x00b0, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc imm16b[x2], #imm16"),
    ([0x00b1, imm16Lb, imm16Hb, 0x00c0, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp imm16b[x2], #imm16"),
    ([0x00b1, imm16Lb, imm16Hb, 0x00d0, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and imm16b[x2], #imm16"),
    ([0x00b1, imm16Lb, imm16Hb, 0x00d0, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or imm16b[x2], #imm16"),
    ([0x00b1, imm16Lb, imm16Hb, 0x00f0, imm16La, imm16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor imm16b[x2], #imm16"),
    ([0x00b2, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, [dp]"),
    ([0x00b2, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr [dp]   "),
    ([0x00b2, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc [dp]"),
    ([0x00b2, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec [dp]"),
    ([0x00b2, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [[dp]]"),
    ([0x00b2, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [[dp]]     "),
    ([0x00b2, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, [dp]"),
    ([0x00b2, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, [dp]"),
    ([0x00b2, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, [dp]"),
    ([0x00b2, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, [dp]"),
    ([0x00b2, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, [dp]"),
    ([0x00b2, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, [dp]"),
    ([0x00b2, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, [dp]"),
    ([0x00b2, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, [dp]"),
    ([0x00b2, 0x007c, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8, [dp]"),
    ([0x00b2, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, [dp]"),
    ([0x00b2, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, [dp]"),
    ([0x00b2, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, [dp]"),
    ([0x00b2, 0x0080, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add [dp], #imm16"),
    ([0x00b2, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add [dp], a"),
    ([0x00b2, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, [dp]"),
    ([0x00b2, 0x0083, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add [dp], off imm8"),
    ([0x00b2, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov [dp], a"),
    ([0x00b2, 0x0090, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc [dp], #imm16"),
    ([0x00b2, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc [dp], a"),
    ([0x00b2, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, [dp]"),
    ([0x00b2, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc [dp], off imm8"),
    ([0x00b2, 0x0098, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov [dp], #imm16"),
    ([0x00b2, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, [dp]"),
    ([0x00b2, 0x00a0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub [dp], #imm16"),
    ([0x00b2, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub [dp], a"),
    ([0x00b2, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, [dp]"),
    ([0x00b2, 0x00a3, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub [dp], off imm8"),
    ([0x00b2, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [[dp]]"),
    ([0x00b2, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [[dp]]"),
    ([0x00b2, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [[dp]]"),
    ([0x00b2, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [[dp]]"),
    ([0x00b2, 0x00b0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc [dp], #imm16"),
    ([0x00b2, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc [dp], a"),
    ([0x00b2, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, [dp]"),
    ([0x00b2, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc [dp], off imm8"),
    ([0x00b2, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol [dp]"),
    ([0x00b2, 0x00c0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp [dp], #imm16"),
    ([0x00b2, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp [dp], a"),
    ([0x00b2, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, [dp]"),
    ([0x00b2, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp [dp], off imm8"),
    ([0x00b2, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror [dp]"),
    ([0x00b2, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and [dp], #imm16"),
    ([0x00b2, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or [dp], #imm16"),
    ([0x00b2, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and [dp], a"),
    ([0x00b2, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, [dp]"),
    ([0x00b2, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and [dp], off imm8"),
    ([0x00b2, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll [dp]"),
    ([0x00b2, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or [dp], a"),
    ([0x00b2, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, [dp]"),
    ([0x00b2, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or [dp], off imm8"),
    ([0x00b2, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl [dp]"),
    ([0x00b2, 0x00f0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor [dp], #imm16"),
    ([0x00b2, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor [dp], a"),
    ([0x00b2, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, [dp]"),
    ([0x00b2, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor [dp], off imm8"),
    ([0x00b2, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra [dp]"),
    ([0x00b3, signedimm8, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr signedimm8[usp]   "),
    ([0x00b3, signedimm8, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [signedimm8[usp]]"),
    ([0x00b3, signedimm8, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [signedimm8[usp]]     "),
    ([0x00b3, signedimm8, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x007c, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x0080, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add signedimm8[usp], #imm16"),
    ([0x00b3, signedimm8, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add signedimm8[usp], a"),
    ([0x00b3, signedimm8, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x0083, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add signedimm8[usp], off imm8"),
    ([0x00b3, signedimm8, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov signedimm8[usp], a"),
    ([0x00b3, signedimm8, 0x0090, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc signedimm8[usp], #imm16"),
    ([0x00b3, signedimm8, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc signedimm8[usp], a"),
    ([0x00b3, signedimm8, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc signedimm8[usp], off imm8"),
    ([0x00b3, signedimm8, 0x0098, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov signedimm8[usp], #imm16"),
    ([0x00b3, signedimm8, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x00a0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub signedimm8[usp], #imm16"),
    ([0x00b3, signedimm8, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub signedimm8[usp], a"),
    ([0x00b3, signedimm8, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x00a3, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub signedimm8[usp], off imm8"),
    ([0x00b3, signedimm8, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [signedimm8[usp]]"),
    ([0x00b3, signedimm8, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [signedimm8[usp]]"),
    ([0x00b3, signedimm8, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [signedimm8[usp]]"),
    ([0x00b3, signedimm8, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [signedimm8[usp]]"),
    ([0x00b3, signedimm8, 0x00b0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc signedimm8[usp], #imm16"),
    ([0x00b3, signedimm8, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc signedimm8[usp], a"),
    ([0x00b3, signedimm8, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc signedimm8[usp], off imm8"),
    ([0x00b3, signedimm8, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x00c0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp signedimm8[usp], #imm16"),
    ([0x00b3, signedimm8, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp signedimm8[usp], a"),
    ([0x00b3, signedimm8, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp signedimm8[usp], off imm8"),
    ([0x00b3, signedimm8, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and signedimm8[usp], #imm16"),
    ([0x00b3, signedimm8, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or signedimm8[usp], #imm16"),
    ([0x00b3, signedimm8, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and signedimm8[usp], a"),
    ([0x00b3, signedimm8, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and signedimm8[usp], off imm8"),
    ([0x00b3, signedimm8, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or signedimm8[usp], a"),
    ([0x00b3, signedimm8, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or signedimm8[usp], off imm8"),
    ([0x00b3, signedimm8, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x00f0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor signedimm8[usp], #imm16"),
    ([0x00b3, signedimm8, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor signedimm8[usp], a"),
    ([0x00b3, signedimm8, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, signedimm8[usp]"),
    ([0x00b3, signedimm8, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor signedimm8[usp], off imm8"),
    ([0x00b3, signedimm8, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra signedimm8[usp]"),
    ([0x00b4, imm8, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, off imm8"),
    ([0x00b4, imm8, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr off imm8   "),
    ([0x00b4, imm8, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc off imm8"),
    ([0x00b4, imm8, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec off imm8"),
    ([0x00b4, imm8, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [off imm8]"),
    ([0x00b4, imm8, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [off imm8]     "),
    ([0x00b4, imm8, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, off imm8"),
    ([0x00b4, imm8, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, off imm8"),
    ([0x00b4, imm8, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, off imm8"),
    ([0x00b4, imm8, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, off imm8"),
    ([0x00b4, imm8, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, off imm8"),
    ([0x00b4, imm8, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, off imm8"),
    ([0x00b4, imm8, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, off imm8"),
    ([0x00b4, imm8, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, off imm8"),
    ([0x00b4, imm8, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, off imm8"),
    ([0x00b4, imm8, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, off imm8"),
    ([0x00b4, imm8, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, off imm8"),
    ([0x00b4, imm8, 0x0080, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add off imm8, #imm16"),
    ([0x00b4, imm8, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add off imm8, a"),
    ([0x00b4, imm8, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8, a"),
    ([0x00b4, imm8, 0x0090, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc off imm8, #imm16"),
    ([0x00b4, imm8, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc off imm8, a"),
    ([0x00b4, imm8, 0x0098, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8, #imm16"),
    ([0x00b4, imm8, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, off imm8"),
    ([0x00b4, imm8, 0x00a0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub off imm8, #imm16"),
    ([0x00b4, imm8, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub off imm8, a"),
    ([0x00b4, imm8, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [off imm8]"),
    ([0x00b4, imm8, 0x00a9, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, imm16[off imm8]"),
    ([0x00b4, imm8, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [off imm8]"),
    ([0x00b4, imm8, 0x00ab, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, imm16[off imm8]"),
    ([0x00b4, imm8, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [off imm8]"),
    ([0x00b4, imm8, 0x00ad, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, imm16[off imm8]"),
    ([0x00b4, imm8, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [off imm8]"),
    ([0x00b4, imm8, 0x00af, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, imm16[off imm8]"),
    ([0x00b4, imm8, 0x00b0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc off imm8, #imm16"),
    ([0x00b4, imm8, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc off imm8, a"),
    ([0x00b4, imm8, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol off imm8"),
    ([0x00b4, imm8, 0x00c0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp off imm8, #imm16"),
    ([0x00b4, imm8, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp off imm8, a"),
    ([0x00b4, imm8, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror off imm8"),
    ([0x00b4, imm8, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and off imm8, #imm16"),
    ([0x00b4, imm8, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or off imm8, #imm16"),
    ([0x00b4, imm8, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and off imm8, a"),
    ([0x00b4, imm8, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll off imm8"),
    ([0x00b4, imm8, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or off imm8, a"),
    ([0x00b4, imm8, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, off imm8"),
    ([0x00b4, imm8, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl off imm8"),
    ([0x00b4, imm8, 0x00f0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor off imm8, #imm16"),
    ([0x00b4, imm8, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor off imm8, a"),
    ([0x00b4, imm8, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra off imm8"),
    ([0x00b4, imm8b, 0x007c, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8a, off imm8b"),
    ([0x00b4, imm8b, 0x0083, imm8a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add off imm8b, off imm8a"),
    ([0x00b4, imm8b, 0x0093, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc off imm8b, off imm8a"),
    ([0x00b4, imm8b, 0x00a3, imm8a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub off imm8b, off imm8a"),
    ([0x00b4, imm8b, 0x00b3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc off imm8b, off imm8a"),
    ([0x00b4, imm8b, 0x00c3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp off imm8b, off imm8a"),
    ([0x00b4, imm8b, 0x00d3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and off imm8b, off imm8a"),
    ([0x00b4, imm8b, 0x00e3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or off imm8b, off imm8a"),
    ([0x00b4, imm8b, 0x00f3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor off imm8b, off imm8a"),
    ([0x00b5, imm8, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, imm8"),
    ([0x00b5, imm8, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr imm8   "),
    ([0x00b5, imm8, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc imm8"),
    ([0x00b5, imm8, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec imm8"),
    ([0x00b5, imm8, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [imm8]"),
    ([0x00b5, imm8, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [imm8]     "),
    ([0x00b5, imm8, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, imm8"),
    ([0x00b5, imm8, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, imm8"),
    ([0x00b5, imm8, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, imm8"),
    ([0x00b5, imm8, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, imm8"),
    ([0x00b5, imm8, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, imm8"),
    ([0x00b5, imm8, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, imm8"),
    ([0x00b5, imm8, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, imm8"),
    ([0x00b5, imm8, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, imm8"),
    ([0x00b5, imm8, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, imm8"),
    ([0x00b5, imm8, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, imm8"),
    ([0x00b5, imm8, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, imm8"),
    ([0x00b5, imm8, 0x0080, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add imm8, #imm16"),
    ([0x00b5, imm8, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add imm8, a"),
    ([0x00b5, imm8, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, imm8"),
    ([0x00b5, imm8, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov imm8, a"),
    ([0x00b5, imm8, 0x0090, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc imm8, #imm16"),
    ([0x00b5, imm8, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc imm8, a"),
    ([0x00b5, imm8, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, imm8"),
    ([0x00b5, imm8, 0x0098, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov imm8, #imm16"),
    ([0x00b5, imm8, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, imm8"),
    ([0x00b5, imm8, 0x00a0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub imm8, #imm16"),
    ([0x00b5, imm8, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub imm8, a"),
    ([0x00b5, imm8, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, imm8"),
    ([0x00b5, imm8, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [imm8]"),
    ([0x00b5, imm8, 0x00a9, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, imm16[imm8]"),
    ([0x00b5, imm8, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [imm8]"),
    ([0x00b5, imm8, 0x00ab, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, imm16[imm8]"),
    ([0x00b5, imm8, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [imm8]"),
    ([0x00b5, imm8, 0x00ad, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, imm16[imm8]"),
    ([0x00b5, imm8, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [imm8]"),
    ([0x00b5, imm8, 0x00af, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, imm16[imm8]"),
    ([0x00b5, imm8, 0x00b0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc imm8, #imm16"),
    ([0x00b5, imm8, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc imm8, a"),
    ([0x00b5, imm8, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, imm8"),
    ([0x00b5, imm8, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol imm8"),
    ([0x00b5, imm8, 0x00c0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp imm8, #imm16"),
    ([0x00b5, imm8, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp imm8, a"),
    ([0x00b5, imm8, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, imm8"),
    ([0x00b5, imm8, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror imm8"),
    ([0x00b5, imm8, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and imm8, #imm16"),
    ([0x00b5, imm8, 0x00d0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or imm8, #imm16"),
    ([0x00b5, imm8, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and imm8, a"),
    ([0x00b5, imm8, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, imm8"),
    ([0x00b5, imm8, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll imm8"),
    ([0x00b5, imm8, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or imm8, a"),
    ([0x00b5, imm8, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, imm8"),
    ([0x00b5, imm8, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl imm8"),
    ([0x00b5, imm8, 0x00f0, imm16L, imm16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor imm8, #imm16"),
    ([0x00b5, imm8, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor imm8, a"),
    ([0x00b5, imm8, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, imm8"),
    ([0x00b5, imm8, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra imm8"),
    ([0x00b5, imm8b, 0x007c, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off imm8a, imm8b"),
    ([0x00b5, imm8b, 0x0083, imm8a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add imm8b, off imm8a"),
    ([0x00b5, imm8b, 0x0093, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc imm8b, off imm8a"),
    ([0x00b5, imm8b, 0x00a3, imm8a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub imm8b, off imm8a"),
    ([0x00b5, imm8b, 0x00b3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc imm8b, off imm8a"),
    ([0x00b5, imm8b, 0x00c3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp imm8b, off imm8a"),
    ([0x00b5, imm8b, 0x00d3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and imm8b, off imm8a"),
    ([0x00b5, imm8b, 0x00e3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or imm8b, off imm8a"),
    ([0x00b5, imm8b, 0x00f3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor imm8b, off imm8a"),
    ([0x00b6, imm16L, imm16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, #imm16"),
    ([0x00b6, imm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, #imm8"),
    ([0x00b7, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, off imm8"),
    ([0x00b7, imm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, off imm8"),
    ([0x00b8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb r0"),
    ([0x00b9, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb r1"),
    ([0x00ba, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb r2"),
    ([0x00bb, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb r3"),
    ([0x00bc, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb r4"),
    ([0x00bd, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb r5"),
    ([0x00be, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb r6"),
    ([0x00bf, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb r7"),
    ([0x00c0, imm16L, imm16H, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm16[x1].0"),
    ([0x00c0, imm16L, imm16H, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm16[x1].1"),
    ([0x00c0, imm16L, imm16H, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm16[x1].2"),
    ([0x00c0, imm16L, imm16H, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm16[x1].3"),
    ([0x00c0, imm16L, imm16H, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm16[x1].4"),
    ([0x00c0, imm16L, imm16H, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm16[x1].5"),
    ([0x00c0, imm16L, imm16H, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm16[x1].6"),
    ([0x00c0, imm16L, imm16H, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm16[x1].7"),
    ([0x00c0, imm16L, imm16H, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb imm16[x1]   "),
    ([0x00c0, imm16L, imm16H, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm16[x1].0"),
    ([0x00c0, imm16L, imm16H, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm16[x1].1"),
    ([0x00c0, imm16L, imm16H, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm16[x1].2"),
    ([0x00c0, imm16L, imm16H, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm16[x1].3"),
    ([0x00c0, imm16L, imm16H, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm16[x1].4"),
    ([0x00c0, imm16L, imm16H, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm16[x1].5"),
    ([0x00c0, imm16L, imm16H, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm16[x1].6"),
    ([0x00c0, imm16L, imm16H, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm16[x1].7"),
    ([0x00c0, imm16L, imm16H, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr imm16[x1], c"),
    ([0x00c0, imm16L, imm16H, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm16[x1].0"),
    ([0x00c0, imm16L, imm16H, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm16[x1].1"),
    ([0x00c0, imm16L, imm16H, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm16[x1].2"),
    ([0x00c0, imm16L, imm16H, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm16[x1].3"),
    ([0x00c0, imm16L, imm16H, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm16[x1].4"),
    ([0x00c0, imm16L, imm16H, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm16[x1].5"),
    ([0x00c0, imm16L, imm16H, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm16[x1].6"),
    ([0x00c0, imm16L, imm16H, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm16[x1].7"),
    ([0x00c0, imm16L, imm16H, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm16[x1].0, c"),
    ([0x00c0, imm16L, imm16H, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm16[x1].1, c"),
    ([0x00c0, imm16L, imm16H, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm16[x1].2, c"),
    ([0x00c0, imm16L, imm16H, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm16[x1].3, c"),
    ([0x00c0, imm16L, imm16H, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm16[x1].4, c"),
    ([0x00c0, imm16L, imm16H, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm16[x1].5, c"),
    ([0x00c0, imm16L, imm16H, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm16[x1].6, c"),
    ([0x00c0, imm16L, imm16H, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm16[x1].7, c"),
    ([0x00c0, imm16L, imm16H, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x007c, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8, imm16[x1]    "),
    ([0x00c0, imm16L, imm16H, 0x0080, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb imm16[x1], #imm8"),
    ([0x00c0, imm16L, imm16H, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb imm16[x1], a"),
    ([0x00c0, imm16L, imm16H, 0x0082, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x0083, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb imm16[x1], off imm8"),
    ([0x00c0, imm16L, imm16H, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb imm16[x1], a"),
    ([0x00c0, imm16L, imm16H, 0x0090, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb imm16[x1], #imm8"),
    ([0x00c0, imm16L, imm16H, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb imm16[x1], a"),
    ([0x00c0, imm16L, imm16H, 0x0092, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb imm16[x1], off imm8"),
    ([0x00c0, imm16L, imm16H, 0x0098, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb imm16[x1], #imm8"),
    ([0x00c0, imm16L, imm16H, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x00a0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb imm16[x1], #imm8"),
    ([0x00c0, imm16L, imm16H, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb imm16[x1], a"),
    ([0x00c0, imm16L, imm16H, 0x00a2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x00a3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb imm16[x1], off imm8"),
    ([0x00c0, imm16L, imm16H, 0x00b0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb imm16[x1], #imm8"),
    ([0x00c0, imm16L, imm16H, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb imm16[x1], a"),
    ([0x00c0, imm16L, imm16H, 0x00b2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb imm16[x1], off imm8"),
    ([0x00c0, imm16L, imm16H, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x00c0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb imm16[x1], #imm8"),
    ([0x00c0, imm16L, imm16H, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb imm16[x1], a"),
    ([0x00c0, imm16L, imm16H, 0x00c2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb imm16[x1], off imm8"),
    ([0x00c0, imm16L, imm16H, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x00d0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb imm16[x1], #imm8"),
    ([0x00c0, imm16L, imm16H, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb imm16[x1], a"),
    ([0x00c0, imm16L, imm16H, 0x00d2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb imm16[x1], off imm8"),
    ([0x00c0, imm16L, imm16H, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x00e0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb imm16[x1], #imm8"),
    ([0x00c0, imm16L, imm16H, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb imm16[x1], a"),
    ([0x00c0, imm16L, imm16H, 0x00e2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb imm16[x1], off imm8"),
    ([0x00c0, imm16L, imm16H, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x00f0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb imm16[x1], #imm8"),
    ([0x00c0, imm16L, imm16H, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb imm16[x1], a"),
    ([0x00c0, imm16L, imm16H, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, imm16[x1]"),
    ([0x00c0, imm16L, imm16H, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb imm16[x1], off imm8"),
    ([0x00c0, imm16L, imm16H, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab imm16[x1]"),
    ([0x00c1, imm16L, imm16H, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm16[x2].0"),
    ([0x00c1, imm16L, imm16H, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm16[x2].1"),
    ([0x00c1, imm16L, imm16H, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm16[x2].2"),
    ([0x00c1, imm16L, imm16H, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm16[x2].3"),
    ([0x00c1, imm16L, imm16H, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm16[x2].4"),
    ([0x00c1, imm16L, imm16H, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm16[x2].5"),
    ([0x00c1, imm16L, imm16H, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm16[x2].6"),
    ([0x00c1, imm16L, imm16H, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm16[x2].7"),
    ([0x00c1, imm16L, imm16H, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb imm16[x2]   "),
    ([0x00c1, imm16L, imm16H, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm16[x2].0"),
    ([0x00c1, imm16L, imm16H, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm16[x2].1"),
    ([0x00c1, imm16L, imm16H, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm16[x2].2"),
    ([0x00c1, imm16L, imm16H, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm16[x2].3"),
    ([0x00c1, imm16L, imm16H, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm16[x2].4"),
    ([0x00c1, imm16L, imm16H, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm16[x2].5"),
    ([0x00c1, imm16L, imm16H, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm16[x2].6"),
    ([0x00c1, imm16L, imm16H, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm16[x2].7"),
    ([0x00c1, imm16L, imm16H, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr imm16[x2], c"),
    ([0x00c1, imm16L, imm16H, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm16[x2].0"),
    ([0x00c1, imm16L, imm16H, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm16[x2].1"),
    ([0x00c1, imm16L, imm16H, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm16[x2].2"),
    ([0x00c1, imm16L, imm16H, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm16[x2].3"),
    ([0x00c1, imm16L, imm16H, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm16[x2].4"),
    ([0x00c1, imm16L, imm16H, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm16[x2].5"),
    ([0x00c1, imm16L, imm16H, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm16[x2].6"),
    ([0x00c1, imm16L, imm16H, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm16[x2].7"),
    ([0x00c1, imm16L, imm16H, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm16[x2].0, c"),
    ([0x00c1, imm16L, imm16H, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm16[x2].1, c"),
    ([0x00c1, imm16L, imm16H, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm16[x2].2, c"),
    ([0x00c1, imm16L, imm16H, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm16[x2].3, c"),
    ([0x00c1, imm16L, imm16H, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm16[x2].4, c"),
    ([0x00c1, imm16L, imm16H, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm16[x2].5, c"),
    ([0x00c1, imm16L, imm16H, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm16[x2].6, c"),
    ([0x00c1, imm16L, imm16H, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm16[x2].7, c"),
    ([0x00c1, imm16L, imm16H, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x007c, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8, imm16[x2]    "),
    ([0x00c1, imm16L, imm16H, 0x0080, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb imm16[x2], #imm8"),
    ([0x00c1, imm16L, imm16H, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb imm16[x2], a"),
    ([0x00c1, imm16L, imm16H, 0x0082, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x0083, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb imm16[x2], off imm8"),
    ([0x00c1, imm16L, imm16H, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb imm16[x2], a"),
    ([0x00c1, imm16L, imm16H, 0x0090, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb imm16[x2], #imm8"),
    ([0x00c1, imm16L, imm16H, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb imm16[x2], a"),
    ([0x00c1, imm16L, imm16H, 0x0092, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb imm16[x2], off imm8"),
    ([0x00c1, imm16L, imm16H, 0x0098, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb imm16[x2], #imm8"),
    ([0x00c1, imm16L, imm16H, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x00a0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb imm16[x2], #imm8"),
    ([0x00c1, imm16L, imm16H, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb imm16[x2], a"),
    ([0x00c1, imm16L, imm16H, 0x00a2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x00a3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb imm16[x2], off imm8"),
    ([0x00c1, imm16L, imm16H, 0x00b0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb imm16[x2], #imm8"),
    ([0x00c1, imm16L, imm16H, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb imm16[x2], a"),
    ([0x00c1, imm16L, imm16H, 0x00b2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb imm16[x2], off imm8"),
    ([0x00c1, imm16L, imm16H, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x00c0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb imm16[x2], #imm8"),
    ([0x00c1, imm16L, imm16H, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb imm16[x2], a"),
    ([0x00c1, imm16L, imm16H, 0x00c2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb imm16[x2], off imm8"),
    ([0x00c1, imm16L, imm16H, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x00d0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb imm16[x2], #imm8"),
    ([0x00c1, imm16L, imm16H, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb imm16[x2], a"),
    ([0x00c1, imm16L, imm16H, 0x00d2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb imm16[x2], off imm8"),
    ([0x00c1, imm16L, imm16H, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x00e0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb imm16[x2], #imm8"),
    ([0x00c1, imm16L, imm16H, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb imm16[x2], a"),
    ([0x00c1, imm16L, imm16H, 0x00e2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb imm16[x2], off imm8"),
    ([0x00c1, imm16L, imm16H, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x00f0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb imm16[x2], #imm8"),
    ([0x00c1, imm16L, imm16H, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb imm16[x2], a"),
    ([0x00c1, imm16L, imm16H, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, imm16[x2]"),
    ([0x00c1, imm16L, imm16H, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb imm16[x2], off imm8"),
    ([0x00c1, imm16L, imm16H, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab imm16[x2]"),
    ([0x00c2, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb [dp].0"),
    ([0x00c2, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb [dp].1"),
    ([0x00c2, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb [dp].2"),
    ([0x00c2, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb [dp].3"),
    ([0x00c2, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb [dp].4"),
    ([0x00c2, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb [dp].5"),
    ([0x00c2, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb [dp].6"),
    ([0x00c2, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb [dp].7"),
    ([0x00c2, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, [dp]"),
    ([0x00c2, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr [dp]"),
    ([0x00c2, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr [dp]"),
    ([0x00c2, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr [dp]"),
    ([0x00c2, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb [dp]   "),
    ([0x00c2, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb [dp]"),
    ([0x00c2, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb [dp]"),
    ([0x00c2, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb [dp].0"),
    ([0x00c2, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb [dp].1"),
    ([0x00c2, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb [dp].2"),
    ([0x00c2, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb [dp].3"),
    ([0x00c2, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb [dp].4"),
    ([0x00c2, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb [dp].5"),
    ([0x00c2, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb [dp].6"),
    ([0x00c2, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb [dp].7"),
    ([0x00c2, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr [dp], c"),
    ([0x00c2, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, [dp]"),
    ([0x00c2, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, [dp].0"),
    ([0x00c2, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, [dp].1"),
    ([0x00c2, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, [dp].2"),
    ([0x00c2, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, [dp].3"),
    ([0x00c2, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, [dp].4"),
    ([0x00c2, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, [dp].5"),
    ([0x00c2, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, [dp].6"),
    ([0x00c2, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, [dp].7"),
    ([0x00c2, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb [dp].0, c"),
    ([0x00c2, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb [dp].1, c"),
    ([0x00c2, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb [dp].2, c"),
    ([0x00c2, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb [dp].3, c"),
    ([0x00c2, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb [dp].4, c"),
    ([0x00c2, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb [dp].5, c"),
    ([0x00c2, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb [dp].6, c"),
    ([0x00c2, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb [dp].7, c"),
    ([0x00c2, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, [dp]"),
    ([0x00c2, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, [dp]"),
    ([0x00c2, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, [dp]"),
    ([0x00c2, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, [dp]"),
    ([0x00c2, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, [dp]"),
    ([0x00c2, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, [dp]"),
    ([0x00c2, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, [dp]"),
    ([0x00c2, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, [dp]"),
    ([0x00c2, 0x007c, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8, [dp]       "),
    ([0x00c2, 0x0080, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb [dp], #imm8"),
    ([0x00c2, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb [dp], a"),
    ([0x00c2, 0x0082, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, [dp]"),
    ([0x00c2, 0x0083, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb [dp], off imm8"),
    ([0x00c2, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, [dp]"),
    ([0x00c2, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, [dp]"),
    ([0x00c2, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb [dp], a"),
    ([0x00c2, 0x0090, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb [dp], #imm8"),
    ([0x00c2, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb [dp], a"),
    ([0x00c2, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb [dp], off imm8"),
    ([0x00c2, 0x0097, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, [dp]"),
    ([0x00c2, 0x0098, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb [dp], #imm8"),
    ([0x00c2, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, [dp]"),
    ([0x00c2, 0x00a0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb [dp], #imm8"),
    ([0x00c2, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb [dp], a"),
    ([0x00c2, 0x00a2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, [dp]"),
    ([0x00c2, 0x00a3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb [dp], off imm8"),
    ([0x00c2, 0x00b0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb [dp], #imm8"),
    ([0x00c2, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb [dp], a"),
    ([0x00c2, 0x00b2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, [dp]"),
    ([0x00c2, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb [dp], off imm8"),
    ([0x00c2, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb [dp]"),
    ([0x00c2, 0x00c0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb [dp], #imm8"),
    ([0x00c2, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb [dp], a"),
    ([0x00c2, 0x00c2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, [dp]"),
    ([0x00c2, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb [dp], off imm8"),
    ([0x00c2, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb [dp]"),
    ([0x00c2, 0x00d0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb [dp], #imm8"),
    ([0x00c2, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb [dp], a"),
    ([0x00c2, 0x00d2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, [dp]"),
    ([0x00c2, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb [dp], off imm8"),
    ([0x00c2, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb [dp]"),
    ([0x00c2, 0x00e0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb [dp], #imm8"),
    ([0x00c2, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb [dp], a"),
    ([0x00c2, 0x00e2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, [dp]"),
    ([0x00c2, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb [dp], off imm8"),
    ([0x00c2, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb [dp]"),
    ([0x00c2, 0x00f0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb [dp], #imm8"),
    ([0x00c2, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb [dp], a"),
    ([0x00c2, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, [dp]"),
    ([0x00c2, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb [dp], off imm8"),
    ([0x00c2, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab [dp]"),
    ([0x00c3, signedimm8, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb signedimm8[usp].0"),
    ([0x00c3, signedimm8, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb signedimm8[usp].1"),
    ([0x00c3, signedimm8, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb signedimm8[usp].2"),
    ([0x00c3, signedimm8, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb signedimm8[usp].3"),
    ([0x00c3, signedimm8, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb signedimm8[usp].4"),
    ([0x00c3, signedimm8, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb signedimm8[usp].5"),
    ([0x00c3, signedimm8, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb signedimm8[usp].6"),
    ([0x00c3, signedimm8, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb signedimm8[usp].7"),
    ([0x00c3, signedimm8, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb signedimm8[usp]   "),
    ([0x00c3, signedimm8, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb signedimm8[usp].0"),
    ([0x00c3, signedimm8, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb signedimm8[usp].1"),
    ([0x00c3, signedimm8, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb signedimm8[usp].2"),
    ([0x00c3, signedimm8, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb signedimm8[usp].3"),
    ([0x00c3, signedimm8, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb signedimm8[usp].4"),
    ([0x00c3, signedimm8, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb signedimm8[usp].5"),
    ([0x00c3, signedimm8, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb signedimm8[usp].6"),
    ([0x00c3, signedimm8, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb signedimm8[usp].7"),
    ([0x00c3, signedimm8, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr signedimm8[usp], c"),
    ([0x00c3, signedimm8, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, signedimm8[usp].0"),
    ([0x00c3, signedimm8, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, signedimm8[usp].1"),
    ([0x00c3, signedimm8, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, signedimm8[usp].2"),
    ([0x00c3, signedimm8, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, signedimm8[usp].3"),
    ([0x00c3, signedimm8, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, signedimm8[usp].4"),
    ([0x00c3, signedimm8, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, signedimm8[usp].5"),
    ([0x00c3, signedimm8, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, signedimm8[usp].6"),
    ([0x00c3, signedimm8, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, signedimm8[usp].7"),
    ([0x00c3, signedimm8, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb signedimm8[usp].0, c"),
    ([0x00c3, signedimm8, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb signedimm8[usp].1, c"),
    ([0x00c3, signedimm8, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb signedimm8[usp].2, c"),
    ([0x00c3, signedimm8, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb signedimm8[usp].3, c"),
    ([0x00c3, signedimm8, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb signedimm8[usp].4, c"),
    ([0x00c3, signedimm8, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb signedimm8[usp].5, c"),
    ([0x00c3, signedimm8, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb signedimm8[usp].6, c"),
    ([0x00c3, signedimm8, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb signedimm8[usp].7, c"),
    ([0x00c3, signedimm8, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x007c, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8, signedimm8[usp]   "),
    ([0x00c3, signedimm8, 0x0080, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb signedimm8[usp], #imm8"),
    ([0x00c3, signedimm8, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb signedimm8[usp], a"),
    ([0x00c3, signedimm8, 0x0082, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x0083, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb signedimm8[usp], off imm8"),
    ([0x00c3, signedimm8, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb signedimm8[usp], a"),
    ([0x00c3, signedimm8, 0x0090, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb signedimm8[usp], #imm8"),
    ([0x00c3, signedimm8, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb signedimm8[usp], a"),
    ([0x00c3, signedimm8, 0x0092, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x0093, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb signedimm8[usp], off imm8"),
    ([0x00c3, signedimm8, 0x0098, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb signedimm8[usp], #imm8"),
    ([0x00c3, signedimm8, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x00a0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb signedimm8[usp], #imm8"),
    ([0x00c3, signedimm8, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb signedimm8[usp], a"),
    ([0x00c3, signedimm8, 0x00a2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x00a3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb signedimm8[usp], off imm8"),
    ([0x00c3, signedimm8, 0x00b0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb signedimm8[usp], #imm8"),
    ([0x00c3, signedimm8, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb signedimm8[usp], a"),
    ([0x00c3, signedimm8, 0x00b2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x00b3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb signedimm8[usp], off imm8"),
    ([0x00c3, signedimm8, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x00c0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb signedimm8[usp], #imm8"),
    ([0x00c3, signedimm8, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb signedimm8[usp], a"),
    ([0x00c3, signedimm8, 0x00c2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x00c3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb signedimm8[usp], off imm8"),
    ([0x00c3, signedimm8, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x00d0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb signedimm8[usp], #imm8"),
    ([0x00c3, signedimm8, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb signedimm8[usp], a"),
    ([0x00c3, signedimm8, 0x00d2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x00d3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb signedimm8[usp], off imm8"),
    ([0x00c3, signedimm8, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x00e0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb signedimm8[usp], #imm8"),
    ([0x00c3, signedimm8, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb signedimm8[usp], a"),
    ([0x00c3, signedimm8, 0x00e2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x00e3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb signedimm8[usp], off imm8"),
    ([0x00c3, signedimm8, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x00f0, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb signedimm8[usp], #imm8"),
    ([0x00c3, signedimm8, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb signedimm8[usp], a"),
    ([0x00c3, signedimm8, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, signedimm8[usp]"),
    ([0x00c3, signedimm8, 0x00f3, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb signedimm8[usp], off imm8"),
    ([0x00c3, signedimm8, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab signedimm8[usp]"),
    ([0x00c4, imm8, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb off imm8.0"),
    ([0x00c4, imm8, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb off imm8.1"),
    ([0x00c4, imm8, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb off imm8.2"),
    ([0x00c4, imm8, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb off imm8.3"),
    ([0x00c4, imm8, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb off imm8.4"),
    ([0x00c4, imm8, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb off imm8.5"),
    ([0x00c4, imm8, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb off imm8.6"),
    ([0x00c4, imm8, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb off imm8.7"),
    ([0x00c4, imm8, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, off imm8"),
    ([0x00c4, imm8, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr off imm8"),
    ([0x00c4, imm8, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr off imm8"),
    ([0x00c4, imm8, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr off imm8"),
    ([0x00c4, imm8, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb off imm8   "),
    ([0x00c4, imm8, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb off imm8"),
    ([0x00c4, imm8, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb off imm8"),
    ([0x00c4, imm8, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb off imm8.0"),
    ([0x00c4, imm8, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb off imm8.1"),
    ([0x00c4, imm8, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb off imm8.2"),
    ([0x00c4, imm8, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb off imm8.3"),
    ([0x00c4, imm8, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb off imm8.4"),
    ([0x00c4, imm8, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb off imm8.5"),
    ([0x00c4, imm8, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb off imm8.6"),
    ([0x00c4, imm8, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb off imm8.7"),
    ([0x00c4, imm8, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, off imm8"),
    ([0x00c4, imm8, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, off imm8.0"),
    ([0x00c4, imm8, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, off imm8.1"),
    ([0x00c4, imm8, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, off imm8.2"),
    ([0x00c4, imm8, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, off imm8.3"),
    ([0x00c4, imm8, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, off imm8.4"),
    ([0x00c4, imm8, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, off imm8.5"),
    ([0x00c4, imm8, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, off imm8.6"),
    ([0x00c4, imm8, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, off imm8.7"),
    ([0x00c4, imm8, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb off imm8.0, c"),
    ([0x00c4, imm8, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb off imm8.1, c"),
    ([0x00c4, imm8, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb off imm8.2, c"),
    ([0x00c4, imm8, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb off imm8.3, c"),
    ([0x00c4, imm8, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb off imm8.4, c"),
    ([0x00c4, imm8, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb off imm8.5, c"),
    ([0x00c4, imm8, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb off imm8.6, c"),
    ([0x00c4, imm8, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb off imm8.7, c"),
    ([0x00c4, imm8, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, off imm8"),
    ([0x00c4, imm8, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, off imm8"),
    ([0x00c4, imm8, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, off imm8"),
    ([0x00c4, imm8, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, off imm8"),
    ([0x00c4, imm8, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, off imm8"),
    ([0x00c4, imm8, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, off imm8"),
    ([0x00c4, imm8, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, off imm8"),
    ([0x00c4, imm8, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, off imm8"),
    ([0x00c4, imm8, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb off imm8, a"),
    ([0x00c4, imm8, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, off imm8"),
    ([0x00c4, imm8, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, off imm8"),
    ([0x00c4, imm8, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8, a"),
    ([0x00c4, imm8, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb off imm8, a"),
    ([0x00c4, imm8, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, off imm8"),
    ([0x00c4, imm8, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb off imm8, a"),
    ([0x00c4, imm8, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb off imm8, a"),
    ([0x00c4, imm8, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb off imm8"),
    ([0x00c4, imm8, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb off imm8, a"),
    ([0x00c4, imm8, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb off imm8"),
    ([0x00c4, imm8, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb off imm8, a"),
    ([0x00c4, imm8, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb off imm8"),
    ([0x00c4, imm8, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb off imm8, a"),
    ([0x00c4, imm8, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb off imm8"),
    ([0x00c4, imm8, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb off imm8, a"),
    ([0x00c4, imm8, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab off imm8"),
    ([0x00c4, imm8b, 0x007c, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8a, off imm8b    "),
    ([0x00c4, imm8b, 0x0080, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb off imm8b, #imm8a"),
    ([0x00c4, imm8b, 0x0083, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb off imm8b, off imm8a"),
    ([0x00c4, imm8b, 0x0090, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb off imm8b, #imm8a"),
    ([0x00c4, imm8b, 0x0093, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb off imm8b, off imm8a"),
    ([0x00c4, imm8b, 0x0098, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8b, #imm8a"),
    ([0x00c4, imm8b, 0x00a0, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb off imm8b, #imm8a"),
    ([0x00c4, imm8b, 0x00a3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb off imm8b, off imm8a"),
    ([0x00c4, imm8b, 0x00b0, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb off imm8b, #imm8a"),
    ([0x00c4, imm8b, 0x00b3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb off imm8b, off imm8a"),
    ([0x00c4, imm8b, 0x00c0, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb off imm8b, #imm8a"),
    ([0x00c4, imm8b, 0x00c3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb off imm8b, off imm8a"),
    ([0x00c4, imm8b, 0x00d0, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb off imm8b, #imm8a"),
    ([0x00c4, imm8b, 0x00d3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb off imm8b, off imm8a"),
    ([0x00c4, imm8b, 0x00e0, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb off imm8b, #imm8a"),
    ([0x00c4, imm8b, 0x00e3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb off imm8b, off imm8a"),
    ([0x00c4, imm8b, 0x00f0, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb off imm8b, #imm8a"),
    ([0x00c4, imm8b, 0x00f3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb off imm8b, off imm8a"),
    ([0x00c5, imm8, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm8.0"),
    ([0x00c5, imm8, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm8.1"),
    ([0x00c5, imm8, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm8.2"),
    ([0x00c5, imm8, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm8.3"),
    ([0x00c5, imm8, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm8.4"),
    ([0x00c5, imm8, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm8.5"),
    ([0x00c5, imm8, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm8.6"),
    ([0x00c5, imm8, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb imm8.7"),
    ([0x00c5, imm8, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, imm8"),
    ([0x00c5, imm8, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr imm8"),
    ([0x00c5, imm8, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr imm8"),
    ([0x00c5, imm8, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr imm8"),
    ([0x00c5, imm8, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb imm8   "),
    ([0x00c5, imm8, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb imm8"),
    ([0x00c5, imm8, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb imm8"),
    ([0x00c5, imm8, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm8.0"),
    ([0x00c5, imm8, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm8.1"),
    ([0x00c5, imm8, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm8.2"),
    ([0x00c5, imm8, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm8.3"),
    ([0x00c5, imm8, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm8.4"),
    ([0x00c5, imm8, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm8.5"),
    ([0x00c5, imm8, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm8.6"),
    ([0x00c5, imm8, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb imm8.7"),
    ([0x00c5, imm8, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr imm8, c"),
    ([0x00c5, imm8, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr off imm8, c"),
    ([0x00c5, imm8, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, imm8"),
    ([0x00c5, imm8, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm8.0"),
    ([0x00c5, imm8, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm8.1"),
    ([0x00c5, imm8, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm8.2"),
    ([0x00c5, imm8, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm8.3"),
    ([0x00c5, imm8, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm8.4"),
    ([0x00c5, imm8, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm8.5"),
    ([0x00c5, imm8, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm8.6"),
    ([0x00c5, imm8, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, imm8.7"),
    ([0x00c5, imm8, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm8.0, c"),
    ([0x00c5, imm8, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm8.1, c"),
    ([0x00c5, imm8, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm8.2, c"),
    ([0x00c5, imm8, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm8.3, c"),
    ([0x00c5, imm8, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm8.4, c"),
    ([0x00c5, imm8, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm8.5, c"),
    ([0x00c5, imm8, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm8.6, c"),
    ([0x00c5, imm8, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb imm8.7, c"),
    ([0x00c5, imm8, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, imm8"),
    ([0x00c5, imm8, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, imm8"),
    ([0x00c5, imm8, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, imm8"),
    ([0x00c5, imm8, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, imm8"),
    ([0x00c5, imm8, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, imm8"),
    ([0x00c5, imm8, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, imm8"),
    ([0x00c5, imm8, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, imm8"),
    ([0x00c5, imm8, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, imm8"),
    ([0x00c5, imm8, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb imm8, a"),
    ([0x00c5, imm8, 0x0082, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, imm8"),
    ([0x00c5, imm8, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, imm8"),
    ([0x00c5, imm8, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, imm8"),
    ([0x00c5, imm8, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb imm8, a"),
    ([0x00c5, imm8, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb imm8, a"),
    ([0x00c5, imm8, 0x0092, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, imm8"),
    ([0x00c5, imm8, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, imm8"),
    ([0x00c5, imm8, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb imm8, a"),
    ([0x00c5, imm8, 0x00a2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, imm8"),
    ([0x00c5, imm8, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb imm8, a"),
    ([0x00c5, imm8, 0x00b2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, imm8"),
    ([0x00c5, imm8, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb imm8"),
    ([0x00c5, imm8, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb imm8, a"),
    ([0x00c5, imm8, 0x00c2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, imm8"),
    ([0x00c5, imm8, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb imm8"),
    ([0x00c5, imm8, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb imm8, a"),
    ([0x00c5, imm8, 0x00d2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, imm8"),
    ([0x00c5, imm8, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb imm8"),
    ([0x00c5, imm8, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb imm8, a"),
    ([0x00c5, imm8, 0x00e2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, imm8"),
    ([0x00c5, imm8, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb imm8"),
    ([0x00c5, imm8, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb imm8, a"),
    ([0x00c5, imm8, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, imm8"),
    ([0x00c5, imm8, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab imm8"),
    ([0x00c5, imm8b, 0x007c, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off imm8a, imm8b        "),
    ([0x00c5, imm8b, 0x0080, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb imm8b, #imm8a"),
    ([0x00c5, imm8b, 0x0083, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb imm8b, off imm8a"),
    ([0x00c5, imm8b, 0x0090, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb imm8b, #imm8a"),
    ([0x00c5, imm8b, 0x0093, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb imm8b, off imm8a"),
    ([0x00c5, imm8b, 0x0098, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb imm8b, #imm8a"),
    ([0x00c5, imm8b, 0x00a0, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb imm8b, #imm8a"),
    ([0x00c5, imm8b, 0x00a3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb imm8b, off imm8a"),
    ([0x00c5, imm8b, 0x00b0, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb imm8b, #imm8a"),
    ([0x00c5, imm8b, 0x00b3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb imm8b, off imm8a"),
    ([0x00c5, imm8b, 0x00c0, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb imm8b, #imm8a"),
    ([0x00c5, imm8b, 0x00c3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb imm8b, off imm8a"),
    ([0x00c5, imm8b, 0x00d0, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb imm8b, #imm8a"),
    ([0x00c5, imm8b, 0x00d3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb imm8b, off imm8a"),
    ([0x00c5, imm8b, 0x00e0, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb imm8b, #imm8a"),
    ([0x00c5, imm8b, 0x00e3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb imm8b, off imm8a"),
    ([0x00c5, imm8b, 0x00f0, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb imm8b, #imm8a"),
    ([0x00c5, imm8b, 0x00f3, imm8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb imm8b, off imm8a"),
    ([0x00c6, imm16L, imm16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, #imm16"),
    ([0x00c6, imm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, #imm8"),
    ([0x00c7, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, off imm8"),
    ([0x00c7, imm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, off imm8"),
    ([0x00c8, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jgt rel8"),
    ([0x00c9, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jeq rel8"),
    ([0x00ca, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jlt rel8"),
    ([0x00cb, rel8, ], DD_FLAG_UNUSED, CF_FLAG_JUMP, "sj rel8"),
    ([0x00cd, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jge rel8"),
    ([0x00ce, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jne rel8"),
    ([0x00cf, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jle rel8"),
    ([0x00d0, imm16L, imm16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, imm16[x1]"),
    ([0x00d0, imm16L, imm16H, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, imm16[x1]"),
    ([0x00d1, imm16L, imm16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, imm16[x2]"),
    ([0x00d1, imm16L, imm16H, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, imm16[x2]"),
    ([0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, [dp]"),
    ([0x00d2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, [dp]"),
    ([0x00d3, signedimm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, signedimm8[usp]"),
    ([0x00d3, signedimm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, signedimm8[usp]"),
    ([0x00d4, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, off imm8"),
    ([0x00d4, imm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, off imm8"),
    ([0x00d5, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, imm8"),
    ([0x00d5, imm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, imm8"),
    ([0x00d6, imm16L, imm16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, #imm16"),
    ([0x00d6, imm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, #imm8"),
    ([0x00d7, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, off imm8"),
    ([0x00d7, imm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, off imm8"),
    ([0x00d8, imm8, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbr off imm8.0, rel8"),
    ([0x00d9, imm8, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbr off imm8.1, rel8"),
    ([0x00da, imm8, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbr off imm8.2, rel8"),
    ([0x00db, imm8, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbr off imm8.3, rel8"),
    ([0x00dc, imm8, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbr off imm8.4, rel8"),
    ([0x00dd, imm8, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbr off imm8.5, rel8"),
    ([0x00de, imm8, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbr off imm8.6, rel8"),
    ([0x00df, imm8, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbr off imm8.7, rel8"),
    ([0x00e0, imm16L, imm16H, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, imm16[x1]"),
    ([0x00e1, imm16L, imm16H, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, imm16[x2]"),
    ([0x00e2, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, [dp]"),
    ([0x00e3, signedimm8, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, signedimm8[usp]"),
    ([0x00e4, imm8, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, off imm8"),
    ([0x00e5, imm8, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, imm8"),
    ([0x00e6, imm16L, imm16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, #imm16"),
    ([0x00e6, imm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, #imm8"),
    ([0x00e7, imm8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb a, off imm8"),
    ([0x00e8, imm8, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbs off imm8.0, rel8"),
    ([0x00e9, imm8, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbs off imm8.1, rel8"),
    ([0x00ea, imm8, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbs off imm8.2, rel8"),
    ([0x00eb, imm8, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbs off imm8.3, rel8"),
    ([0x00ec, imm8, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbs off imm8.4, rel8"),
    ([0x00ed, imm8, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbs off imm8.5, rel8"),
    ([0x00ee, imm8, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbs off imm8.6, rel8"),
    ([0x00ef, imm8, rel8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbs off imm8.7, rel8"),
    ([0x00f0, imm16L, imm16H, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, imm16[x1]"),
    ([0x00f1, imm16L, imm16H, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, imm16[x2]"),
    ([0x00f2, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, [dp]"),
    ([0x00f3, signedimm8, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, signedimm8[usp]"),
    ([0x00f4, imm8, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, off imm8"),
    ([0x00f5, imm8, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, imm8"),
    ([0x00f6, imm16L, imm16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, #imm16"),
    ([0x00f6, imm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, #imm8"),
    ([0x00f7, imm8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, off imm8"),
    ([0x00f7, imm8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, off imm8"),
    ([0x00f8, ], DD_FLAG_SET, CF_FLAG_NEXT, "extnd"),
    ([0x00f9, ], DD_FLAG_SET, CF_FLAG_NEXT, "clr a"),
    ([0x00fa, ], DD_FLAG_RESET, CF_FLAG_NEXT, "clrb a"),
    ([0x00fd, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc lrb"),
    ([0x00fe, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec lrb"),
    ([0x00ff, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "brk"),
]

    def init_registers(self):
        """This function parses the
        register table and creates
        corresponding ireg_XXX constants"""
        # register names (non memory mapped)
        self.reg_names = [
            # "acc",
            #"psw",
            "pc",
            # "lrb",
            # "ssp",
            "x1",
            "x2",
            "dp",
            "usp",
            "r0",
            "r1",
            "er0",
            "r2",
            "r3",
            "er1",
            "r4",
            "r5",
            "er2",
            "r6",
            "r7",
            "er3",
            # Fake segment registers
            "CS",
            "DS"
        ]

        # Create the ireg_XXXX constants
        for i in xrange(len(self.reg_names)):
            setattr(self, 'ireg_' + self.reg_names[i], i)

        # Segment register information (use virtual CS and DS registers if your
        # processor doesn't have segment registers):
        self.reg_first_sreg = self.ireg_CS
        self.reg_last_sreg = self.ireg_DS

        # You should define 2 virtual segment registers for CS and DS.

        # number of CS register
        self.reg_code_sreg = self.ireg_CS
        # number of DS register
        self.reg_data_sreg = self.ireg_DS

    def init_instructions():
        # TODO: Verify
        self.instruc = []
        for insn in INSN_DEFS:
            self.instruc.append({'name': insn[IDEF_MNEMONIC], 'feature': insn[0]}) # Replace "0" in feature
        self.instruc_end = len(INSN_DEFS)
        self.icode_return = 3 # TODO: fix that
        pass

    def init_registers():
        pass

    def __init__(self):
        idaapi.processor_t.__init__(self)
        self.init_instructions()
        self.init_registers()

def PROCESSOR_ENTRY():
    # Required for each Processor module script. Returns an instance of a class
    # derived from idaapi.processor_t
    return oki66207_processor_t()
