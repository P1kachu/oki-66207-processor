# OKI 66207 Processor
# (c) Stanislas Lejay
#

import sys
import idaapi
from idaapi import *

#For Version 7
from ida_auto import *
from ida_bytes import *
from ida_funcs import *
from ida_idaapi import *
from ida_idp import *
from ida_lines import *
from ida_nalt import *
from ida_name import *
from ida_netnode import *
from ida_offset import *
from ida_problems import *
from ida_segment import *
from ida_ua import *
from ida_xref import *
import ida_frame
import idc

'''
Misc information from 66201 spec:
    - Uses DATA and CODE segmentation
    - DD (data bit) is 1 if using WORDS or 0 if using BYTES
    - 66207.op format (x1     -x2x3 x4): See ./helpers/op_to_array.py

'''

class oki66207_processor_t(idaapi.processor_t):
    # IDA id (> 0x8000 for third party)
    id = 0x8123

    # Processor features
    flag = PRN_HEX | PR_ASSEMBLE | PR_RNAMESOK

    # Number of bits in a byte for code segments (usually 8)
    # IDA supports values up to 32 bits
    cnbits = 8

    # Number of bits in a byte for non-code segments (usually 8)
    # IDA supports values up to 32 bits
    dnbits = 8

    # short processor names
    # Each name should be shorter than 9 characters
    psnames = ['oki66207']

    # long processor names
    # No restriction on name lengthes.
    plnames = ['OKI 66207/MSM66207']

    # size of a segment register in bytes
    segreg_size = 0

    # icode of the first instruction
    instruc_start = 0

    #
    # Number of digits in floating numbers after the decimal point.
    # If an element of this array equals 0, then the corresponding
    # floating point data is not used for the processor.
    # This array is used to align numbers in the output.
    #    real_width[0] - number of digits for short floats (only PDP-11 has them)
    #    real_width[1] - number of digits for "float"
    #    real_width[2] - number of digits for "double"
    #    real_width[3] - number of digits for "long double"
    # Example: IBM PC module has { 0,7,15,19 }
    #
    # (optional)
    real_width = (0, 0, 0, 0)

    # only one assembler is supported
    assembler = {
        # flag (for data representation)
        'flag' : ASH_HEXF0 | ASD_DECF0 | AS_UNEQU | AS_COLON | ASB_BINF0 | AS_N2CHR,

        # user defined flags (local only for IDP) (optional)
        'uflag' : 0,

        # Assembler name (displayed in menus)
        'name': plnames[0],

        # array of automatically generated header lines they appear at the start of disassembled text (optional)
        'header': [plnames[0], "Experimental for Honda OBD1 ECUs"],

        # org directive
        'origin': ".org",

        # end directive
        'end': ".end",

        # comment string (see also cmnt2)
        'cmnt': "#",

        # ASCII string delimiter
        'ascsep': "\"",

        # ASCII char constant delimiter
        'accsep': "'",

        # ASCII special chars (they can't appear in character and ascii constants)
        'esccodes': "\"'",

        #
        #    Data representation (db,dw,...):
        #
        # ASCII string directive
        'a_ascii': ".ascii",

        # byte directive
        'a_byte': ".byte",

        # word directive
        'a_word': ".hword",

        # remove if not allowed
        'a_dword': ".word",

        # array keyword. the following
        # sequences may appear:
        #    #h - header
        #    #d - size
        #    #v - value
        #    #s(b,w,l,q,f,d,o) - size specifiers
        #                        for byte,word,
        #                            dword,qword,
        #                            float,double,oword
        'a_dups': "#d dup(#v)",

        # uninitialized data directive (should include '%s' for the size of data)
        'a_bss': "%s dup ?",

        # 'equ' Used if AS_UNEQU is set (optional)
        'a_equ': ".equ",

        # 'seg ' prefix (example: push seg seg001)
        'a_seg': "seg",

        # current IP (instruction pointer) symbol in assembler
        'a_curip': "$pc",

        # "public" name keyword. NULL-gen default, ""-do not generate
        'a_public': "public",

        # "weak"    name keyword. NULL-gen default, ""-do not generate
        'a_weak': ".weak",

        # "extrn" name keyword
        'a_extrn': "extrn",

        # "comm" (communal variable)
        'a_comdef': "",

        # "align" keyword
        'a_align': ".align",

        # Left and right braces used in complex expressions
        'lbrace': "(",
        'rbrace': ")",

        # % mod    assembler time operation
        'a_mod': "%",

        # & bit and assembler time operation
        'a_band': "&",

        # | bit or assembler time operation
        'a_bor': "|",

        # ^ bit xor assembler time operation
        'a_xor': "^",

        # ~ bit not assembler time operation
        'a_bnot': "~",

        # << shift left assembler time operation
        'a_shl': "<<",

        # >> shift right assembler time operation
        'a_shr': ">>",

        # size of type (format string) (optional)
        'a_sizeof_fmt': ".size %s",

        'flag2': 0,

        # comment close string (optional)
        # this is used to denote a string which closes comments, for example, if the comments are represented with (* ... *)
        # then cmnt = "(*" and cmnt2 = "*)"
        'cmnt2': "",

        # low8 operation, should contain %s for the operand (optional fields)
        'low8': "",
        'high8': "",
        'low16': "%lo",
        'high16': "%hi",

        # the include directive (format string) (optional)
        'a_include_fmt': ".include %s",

        # if a named item is a structure and displayed in the verbose (multiline) form then display the name
        # as printf(a_strucname_fmt, typename)
        # (for asms with type checking, e.g. tasm ideal)
        # (optional)
        'a_vstruc_fmt': "",

        # 3-byte data (optional)
        'a_3byte': "",

        # 'rva' keyword for image based offsets (optional)
        # (see nalt.hpp, REFINFO_RVA)
        'a_rva': "rva"
    } # Assembler

    # ----------------------------------------------------------------------
    # Special flags used by the decoder, emulator and output
    #
    FL_SIGNED    = 0x01        # value/address is signed; output as such
    FL_VAL32    = 0x02        # 32 bit value / offset from low and high parts
    FL_SUB    = 0x04        # subtract offset from base

    #Global Pointer Node Definition
    GlobalPointerNode = None

    # Global Pointer Value
    GlobalPointer = BADADDR

    # ----------------------------------------------------------------------
    # The following callbacks are optional.
    # *** Please remove the callbacks that you don't plan to implement ***

    # ----------------------------------------------------------------------
    # Global pointer manipulations, init, save, load
    #

    def notify_init(self, idp_file):
        return 1


    def notify_oldfile(self, filename):
        """An old file is loaded (already)"""
        pass

    def notify_savebase(self):
        """The database is being saved. Processor module should save its local data"""
        pass


    # ----------------------------------------------------------------------
    # Registers definition
    #

# -----------------------------------------------------------------------------------------------------------------------------------------------------

    IDEF_OPCODES = 0
    IDEF_DD = 1
    IDEF_CF = 2
    IDEF_MNEMONIC = 3

    SIGNEDIMM8 = "signedimm8"
    IMM16Lb = "imm16lb"
    IMM16La = "imm16la"
    IMM16Ha = "imm16ha"
    IMM16Hb = "imm16hb"
    IMM16L  = "imm16l"
    IMM16H  = "imm16h"
    IMM16b  = "imm16b"
    IMM16   = "imm16"
    IMM8a   = "imm8a"
    IMM8b   = "imm8b"
    IMM8    = "imm8"
    REL8    = "rel8"

    DD_FLAG_ZERO = 0
    DD_FLAG_ONE = 1
    DD_FLAG_RESET = 2
    DD_FLAG_SET = 3
    DD_FLAG_UNUSED = 4

    CF_FLAG_NEXT = 0
    CF_FLAG_INDIRECT_JUMP = 1
    CF_FLAG_JUMP = 2
    CF_FLAG_VCALL = 3
    CF_FLAG_CONDITIONAL_JUMP = 4
    CF_FLAG_CALL = 5

    INSN_DEFS = [
        ([0x0000, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "nop"),
        ([0x0001, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "rt"),
        ([0x0002, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "rti"),
        ([0x0003, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_JUMP, "jmp IMM16"),
        ([0x0004, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "smovi"),
        ([0x0008, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, er0"),
        ([0x0008, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, r0"),
        ([0x0009, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, er1"),
        ([0x0009, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, r1"),
        ([0x000a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, er2"),
        ([0x000a, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, r2"),
        ([0x000b, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, er3"),
        ([0x000b, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, r3"),
        ([0x000c, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, r4"),
        ([0x000d, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, r5"),
        ([0x000e, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, r6"),
        ([0x000f, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, r7"),
        ([0x0010, ], DD_FLAG_UNUSED, CF_FLAG_VCALL, "vcal 0"),
        ([0x0011, ], DD_FLAG_UNUSED, CF_FLAG_VCALL, "vcal 1"),
        ([0x0012, ], DD_FLAG_UNUSED, CF_FLAG_VCALL, "vcal 2"),
        ([0x0013, ], DD_FLAG_UNUSED, CF_FLAG_VCALL, "vcal 3"),
        ([0x0014, ], DD_FLAG_UNUSED, CF_FLAG_VCALL, "vcal 4"),
        ([0x0015, ], DD_FLAG_UNUSED, CF_FLAG_VCALL, "vcal 5"),
        ([0x0016, ], DD_FLAG_UNUSED, CF_FLAG_VCALL, "vcal 6"),
        ([0x0017, ], DD_FLAG_UNUSED, CF_FLAG_VCALL, "vcal 7"),
        ([0x0018, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, er0"),
        ([0x0018, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, r0"),
        ([0x0019, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, er1"),
        ([0x0019, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, r1"),
        ([0x001a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, er2"),
        ([0x001a, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, r2"),
        ([0x001b, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, er3"),
        ([0x001b, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, r3"),
        ([0x001c, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, r4"),
        ([0x001d, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, r5"),
        ([0x001e, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, r6"),
        ([0x001f, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, r7"),
        ([0x0020, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb r0.0"),
        ([0x0020, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, r0"),
        ([0x0020, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr r0"),
        ([0x0020, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr r0"),
        ([0x0020, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr r0"),
        ([0x0020, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb r0   "),
        ([0x0020, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb r0.0"),
        ([0x0020, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr r0, c"),
        ([0x0020, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, r0 "),
        ([0x0020, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, r0.0"),
        ([0x0020, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb r0.0, c"),
        ([0x0020, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, r0'"),
        ([0x0020, 0x007c, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8a, r0'       "),
        ([0x0020, 0x0080, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r0, #IMM8"),
        ([0x0020, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r0, a"),
        ([0x0020, 0x0083, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r0, off IMM8"),
        ([0x0020, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, r0"),
        ([0x0020, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, r0"),
        ([0x0020, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, a"),
        ([0x0020, 0x0090, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r0, #IMM8"),
        ([0x0020, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r0, a"),
        ([0x0020, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r0, off IMM8"),
        ([0x0020, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, r0"),
        ([0x0020, 0x00a0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r0, #IMM8"),
        ([0x0020, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r0, a"),
        ([0x0020, 0x00a3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r0, off IMM8"),
        ([0x0020, 0x00b0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r0, #IMM8"),
        ([0x0020, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r0, a"),
        ([0x0020, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r0, off IMM8"),
        ([0x0020, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb r0"),
        ([0x0020, 0x00c0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r0, #IMM8"),
        ([0x0020, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r0, a"),
        ([0x0020, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r0, off IMM8"),
        ([0x0020, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb r0"),
        ([0x0020, 0x00d0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r0, #IMM8"),
        ([0x0020, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r0, a"),
        ([0x0020, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r0, off IMM8"),
        ([0x0020, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb r0"),
        ([0x0020, 0x00e0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r0, #IMM8"),
        ([0x0020, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r0, a"),
        ([0x0020, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r0, off IMM8"),
        ([0x0020, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb r0"),
        ([0x0020, 0x00f0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r0, #IMM8"),
        ([0x0020, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r0, a"),
        ([0x0020, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, r0"),
        ([0x0020, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r0, off IMM8"),
        ([0x0020, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab r0"),
        ([0x0021, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb r1.1"),
        ([0x0021, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, r1"),
        ([0x0021, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr r1"),
        ([0x0021, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr r1"),
        ([0x0021, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr r1"),
        ([0x0021, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb r1   "),
        ([0x0021, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb r1.1"),
        ([0x0021, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr r1, c"),
        ([0x0021, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, r1 "),
        ([0x0021, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, r1.1"),
        ([0x0021, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb r1.1, c"),
        ([0x0021, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, r1'"),
        ([0x0021, 0x007c, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8a, r1'       "),
        ([0x0021, 0x0080, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r1, #IMM8"),
        ([0x0021, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r1, a"),
        ([0x0021, 0x0083, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r1, off IMM8"),
        ([0x0021, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, r1"),
        ([0x0021, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, r1"),
        ([0x0021, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, a"),
        ([0x0021, 0x0090, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r1, #IMM8"),
        ([0x0021, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r1, a"),
        ([0x0021, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r1, off IMM8"),
        ([0x0021, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, r1"),
        ([0x0021, 0x00a0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r1, #IMM8"),
        ([0x0021, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r1, a"),
        ([0x0021, 0x00a3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r1, off IMM8"),
        ([0x0021, 0x00b0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r1, #IMM8"),
        ([0x0021, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r1, a"),
        ([0x0021, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r1, off IMM8"),
        ([0x0021, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb r1"),
        ([0x0021, 0x00c0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r1, #IMM8"),
        ([0x0021, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r1, a"),
        ([0x0021, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r1, off IMM8"),
        ([0x0021, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb r1"),
        ([0x0021, 0x00d0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r1, #IMM8"),
        ([0x0021, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r1, a"),
        ([0x0021, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r1, off IMM8"),
        ([0x0021, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb r1"),
        ([0x0021, 0x00e0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r1, #IMM8"),
        ([0x0021, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r1, a"),
        ([0x0021, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r1, off IMM8"),
        ([0x0021, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb r1"),
        ([0x0021, 0x00f0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r1, #IMM8"),
        ([0x0021, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r1, a"),
        ([0x0021, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, r1"),
        ([0x0021, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r1, off IMM8"),
        ([0x0021, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab r1"),
        ([0x0022, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb r2.2"),
        ([0x0022, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, r2"),
        ([0x0022, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr r2"),
        ([0x0022, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr r2"),
        ([0x0022, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr r2"),
        ([0x0022, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb r2   "),
        ([0x0022, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb r2.2"),
        ([0x0022, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr r2, c"),
        ([0x0022, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, r2 "),
        ([0x0022, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, r2.2"),
        ([0x0022, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb r2.2, c"),
        ([0x0022, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, r2'"),
        ([0x0022, 0x007c, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8a, r2'       "),
        ([0x0022, 0x0080, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r2, #IMM8"),
        ([0x0022, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r2, a"),
        ([0x0022, 0x0083, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r2, off IMM8"),
        ([0x0022, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, r2"),
        ([0x0022, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, r2"),
        ([0x0022, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, a"),
        ([0x0022, 0x0090, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r2, #IMM8"),
        ([0x0022, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r2, a"),
        ([0x0022, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r2, off IMM8"),
        ([0x0022, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, r2"),
        ([0x0022, 0x00a0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r2, #IMM8"),
        ([0x0022, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r2, a"),
        ([0x0022, 0x00a3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r2, off IMM8"),
        ([0x0022, 0x00b0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r2, #IMM8"),
        ([0x0022, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r2, a"),
        ([0x0022, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r2, off IMM8"),
        ([0x0022, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb r2"),
        ([0x0022, 0x00c0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r2, #IMM8"),
        ([0x0022, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r2, a"),
        ([0x0022, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r2, off IMM8"),
        ([0x0022, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb r2"),
        ([0x0022, 0x00d0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r2, #IMM8"),
        ([0x0022, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r2, a"),
        ([0x0022, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r2, off IMM8"),
        ([0x0022, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb r2"),
        ([0x0022, 0x00e0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r2, #IMM8"),
        ([0x0022, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r2, a"),
        ([0x0022, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r2, off IMM8"),
        ([0x0022, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb r2"),
        ([0x0022, 0x00f0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r2, #IMM8"),
        ([0x0022, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r2, a"),
        ([0x0022, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, r2"),
        ([0x0022, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r2, off IMM8"),
        ([0x0022, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab r2"),
        ([0x0023, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb r3.3"),
        ([0x0023, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, r3"),
        ([0x0023, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr r3"),
        ([0x0023, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr r3"),
        ([0x0023, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr r3"),
        ([0x0023, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb r3   "),
        ([0x0023, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb r3.3"),
        ([0x0023, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr r3, c"),
        ([0x0023, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, r3 "),
        ([0x0023, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, r3.3"),
        ([0x0023, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb r3.3, c"),
        ([0x0023, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, r3'"),
        ([0x0023, 0x007c, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8a, r3'       "),
        ([0x0023, 0x0080, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r3, #IMM8"),
        ([0x0023, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r3, a"),
        ([0x0023, 0x0083, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r3, off IMM8"),
        ([0x0023, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, r3"),
        ([0x0023, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, r3"),
        ([0x0023, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, a"),
        ([0x0023, 0x0090, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r3, #IMM8"),
        ([0x0023, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r3, a"),
        ([0x0023, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r3, off IMM8"),
        ([0x0023, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, r3"),
        ([0x0023, 0x00a0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r3, #IMM8"),
        ([0x0023, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r3, a"),
        ([0x0023, 0x00a3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r3, off IMM8"),
        ([0x0023, 0x00b0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r3, #IMM8"),
        ([0x0023, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r3, a"),
        ([0x0023, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r3, off IMM8"),
        ([0x0023, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb r3"),
        ([0x0023, 0x00c0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r3, #IMM8"),
        ([0x0023, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r3, a"),
        ([0x0023, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r3, off IMM8"),
        ([0x0023, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb r3"),
        ([0x0023, 0x00d0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r3, #IMM8"),
        ([0x0023, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r3, a"),
        ([0x0023, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r3, off IMM8"),
        ([0x0023, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb r3"),
        ([0x0023, 0x00e0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r3, #IMM8"),
        ([0x0023, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r3, a"),
        ([0x0023, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r3, off IMM8"),
        ([0x0023, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb r3"),
        ([0x0023, 0x00f0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r3, #IMM8"),
        ([0x0023, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r3, a"),
        ([0x0023, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, r3"),
        ([0x0023, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r3, off IMM8"),
        ([0x0023, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab r3"),
        ([0x0024, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb r4.4"),
        ([0x0024, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, r4"),
        ([0x0024, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr r4"),
        ([0x0024, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr r4"),
        ([0x0024, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr r4"),
        ([0x0024, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb r4   "),
        ([0x0024, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb r4.4"),
        ([0x0024, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr r4, c"),
        ([0x0024, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, r4 "),
        ([0x0024, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, r4.4"),
        ([0x0024, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb r4.4, c"),
        ([0x0024, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, r4'"),
        ([0x0024, 0x007c, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8a, r4'       "),
        ([0x0024, 0x0080, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r4, #IMM8"),
        ([0x0024, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r4, a"),
        ([0x0024, 0x0083, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r4, off IMM8"),
        ([0x0024, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, r4"),
        ([0x0024, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, r4"),
        ([0x0024, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, a"),
        ([0x0024, 0x0090, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r4, #IMM8"),
        ([0x0024, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r4, a"),
        ([0x0024, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r4, off IMM8"),
        ([0x0024, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, r4"),
        ([0x0024, 0x00a0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r4, #IMM8"),
        ([0x0024, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r4, a"),
        ([0x0024, 0x00a3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r4, off IMM8"),
        ([0x0024, 0x00b0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r4, #IMM8"),
        ([0x0024, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r4, a"),
        ([0x0024, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r4, off IMM8"),
        ([0x0024, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb r4"),
        ([0x0024, 0x00c0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r4, #IMM8"),
        ([0x0024, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r4, a"),
        ([0x0024, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r4, off IMM8"),
        ([0x0024, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb r4"),
        ([0x0024, 0x00d0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r4, #IMM8"),
        ([0x0024, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r4, a"),
        ([0x0024, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r4, off IMM8"),
        ([0x0024, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb r4"),
        ([0x0024, 0x00e0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r4, #IMM8"),
        ([0x0024, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r4, a"),
        ([0x0024, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r4, off IMM8"),
        ([0x0024, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb r4"),
        ([0x0024, 0x00f0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r4, #IMM8"),
        ([0x0024, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r4, a"),
        ([0x0024, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, r4"),
        ([0x0024, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r4, off IMM8"),
        ([0x0024, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab r4"),
        ([0x0025, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb r5.5"),
        ([0x0025, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, r5"),
        ([0x0025, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr r5"),
        ([0x0025, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr r5"),
        ([0x0025, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr r5"),
        ([0x0025, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb r5   "),
        ([0x0025, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb r5.5"),
        ([0x0025, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr r5, c"),
        ([0x0025, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, r5 "),
        ([0x0025, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, r5.5"),
        ([0x0025, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb r5.5, c"),
        ([0x0025, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, r5'"),
        ([0x0025, 0x007c, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8a, r5'       "),
        ([0x0025, 0x0080, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r5, #IMM8"),
        ([0x0025, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r5, a"),
        ([0x0025, 0x0083, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r5, off IMM8"),
        ([0x0025, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, r5"),
        ([0x0025, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, r5"),
        ([0x0025, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, a"),
        ([0x0025, 0x0090, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r5, #IMM8"),
        ([0x0025, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r5, a"),
        ([0x0025, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r5, off IMM8"),
        ([0x0025, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, r5"),
        ([0x0025, 0x00a0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r5, #IMM8"),
        ([0x0025, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r5, a"),
        ([0x0025, 0x00a3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r5, off IMM8"),
        ([0x0025, 0x00b0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r5, #IMM8"),
        ([0x0025, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r5, a"),
        ([0x0025, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r5, off IMM8"),
        ([0x0025, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb r5"),
        ([0x0025, 0x00c0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r5, #IMM8"),
        ([0x0025, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r5, a"),
        ([0x0025, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r5, off IMM8"),
        ([0x0025, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb r5"),
        ([0x0025, 0x00d0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r5, #IMM8"),
        ([0x0025, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r5, a"),
        ([0x0025, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r5, off IMM8"),
        ([0x0025, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb r5"),
        ([0x0025, 0x00e0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r5, #IMM8"),
        ([0x0025, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r5, a"),
        ([0x0025, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r5, off IMM8"),
        ([0x0025, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb r5"),
        ([0x0025, 0x00f0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r5, #IMM8"),
        ([0x0025, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r5, a"),
        ([0x0025, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, r5"),
        ([0x0025, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r5, off IMM8"),
        ([0x0025, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab r5"),
        ([0x0026, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb r6.6"),
        ([0x0026, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, r6"),
        ([0x0026, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr r6"),
        ([0x0026, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr r6"),
        ([0x0026, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr r6"),
        ([0x0026, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb r6   "),
        ([0x0026, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb r6.6"),
        ([0x0026, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr r6, c"),
        ([0x0026, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, r6 "),
        ([0x0026, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, r6.6"),
        ([0x0026, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb r6.6, c"),
        ([0x0026, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, r6'"),
        ([0x0026, 0x007c, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8a, r6'       "),
        ([0x0026, 0x0080, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r6, #IMM8"),
        ([0x0026, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r6, a"),
        ([0x0026, 0x0083, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r6, off IMM8"),
        ([0x0026, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, r6"),
        ([0x0026, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, r6"),
        ([0x0026, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, a"),
        ([0x0026, 0x0090, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r6, #IMM8"),
        ([0x0026, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r6, a"),
        ([0x0026, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r6, off IMM8"),
        ([0x0026, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, r6"),
        ([0x0026, 0x00a0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r6, #IMM8"),
        ([0x0026, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r6, a"),
        ([0x0026, 0x00a3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r6, off IMM8"),
        ([0x0026, 0x00b0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r6, #IMM8"),
        ([0x0026, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r6, a"),
        ([0x0026, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r6, off IMM8"),
        ([0x0026, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb r6"),
        ([0x0026, 0x00c0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r6, #IMM8"),
        ([0x0026, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r6, a"),
        ([0x0026, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r6, off IMM8"),
        ([0x0026, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb r6"),
        ([0x0026, 0x00d0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r6, #IMM8"),
        ([0x0026, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r6, a"),
        ([0x0026, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r6, off IMM8"),
        ([0x0026, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb r6"),
        ([0x0026, 0x00e0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r6, #IMM8"),
        ([0x0026, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r6, a"),
        ([0x0026, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r6, off IMM8"),
        ([0x0026, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb r6"),
        ([0x0026, 0x00f0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r6, #IMM8"),
        ([0x0026, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r6, a"),
        ([0x0026, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, r6"),
        ([0x0026, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r6, off IMM8"),
        ([0x0026, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab r6"),
        ([0x0027, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb r7.7"),
        ([0x0027, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, r7"),
        ([0x0027, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr r7"),
        ([0x0027, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr r7"),
        ([0x0027, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr r7"),
        ([0x0027, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb r7   "),
        ([0x0027, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb r7.7"),
        ([0x0027, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr r7, c"),
        ([0x0027, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, r7 "),
        ([0x0027, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, r7.7"),
        ([0x0027, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb r7.7, c"),
        ([0x0027, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, r7'"),
        ([0x0027, 0x007c, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8a, r7'       "),
        ([0x0027, 0x0080, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r7, #IMM8"),
        ([0x0027, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r7, a"),
        ([0x0027, 0x0083, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb r7, off IMM8"),
        ([0x0027, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, r7"),
        ([0x0027, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, r7"),
        ([0x0027, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, a"),
        ([0x0027, 0x0090, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r7, #IMM8"),
        ([0x0027, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r7, a"),
        ([0x0027, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb r7, off IMM8"),
        ([0x0027, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, r7"),
        ([0x0027, 0x00a0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r7, #IMM8"),
        ([0x0027, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r7, a"),
        ([0x0027, 0x00a3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb r7, off IMM8"),
        ([0x0027, 0x00b0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r7, #IMM8"),
        ([0x0027, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r7, a"),
        ([0x0027, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb r7, off IMM8"),
        ([0x0027, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb r7"),
        ([0x0027, 0x00c0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r7, #IMM8"),
        ([0x0027, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r7, a"),
        ([0x0027, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb r7, off IMM8"),
        ([0x0027, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb r7"),
        ([0x0027, 0x00d0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r7, #IMM8"),
        ([0x0027, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r7, a"),
        ([0x0027, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb r7, off IMM8"),
        ([0x0027, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb r7"),
        ([0x0027, 0x00e0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r7, #IMM8"),
        ([0x0027, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r7, a"),
        ([0x0027, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb r7, off IMM8"),
        ([0x0027, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb r7"),
        ([0x0027, 0x00f0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r7, #IMM8"),
        ([0x0027, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r7, a"),
        ([0x0027, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, r7"),
        ([0x0027, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb r7, off IMM8"),
        ([0x0027, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab r7"),
        ([0x0028, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, er0"),
        ([0x0028, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, r0"),
        ([0x0029, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, er1"),
        ([0x0029, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, r1"),
        ([0x002a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, er2"),
        ([0x002a, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, r2"),
        ([0x002b, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, er3"),
        ([0x002b, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, r3"),
        ([0x002c, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, r4"),
        ([0x002d, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, r5"),
        ([0x002e, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, r6"),
        ([0x002f, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, r7"),
        ([0x0030, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jrnz dp, REL8"),
        ([0x0031, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CALL, "scal REL8"),
        ([0x0032, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_CALL, "cal IMM16"),
        ([0x0033, ], DD_FLAG_ONE, CF_FLAG_NEXT, "rol a"),
        ([0x0033, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "rolb a"),
        ([0x0034, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, er0"),
        ([0x0035, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, er1"),
        ([0x0036, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, er2"),
        ([0x0037, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, er3"),
        ([0x0038, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, er0"),
        ([0x0038, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, r0"),
        ([0x0039, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, er1"),
        ([0x0039, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, r1"),
        ([0x003a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, er2"),
        ([0x003a, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, r2"),
        ([0x003b, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, er3"),
        ([0x003b, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, r3"),
        ([0x003c, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, r4"),
        ([0x003d, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, r5"),
        ([0x003e, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, r6"),
        ([0x003f, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, r7"),
        ([0x0040, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, x1"),
        ([0x0041, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, x2"),
        ([0x0042, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, dp"),
        ([0x0043, ], DD_FLAG_ONE, CF_FLAG_NEXT, "ror a"),
        ([0x0043, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "rorb a"),
        ([0x0044, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, er0"),
        ([0x0044, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr er0   "),
        ([0x0044, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc er0"),
        ([0x0044, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec er0"),
        ([0x0044, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [er0]"),
        ([0x0044, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [er0]"),
        ([0x0044, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, er0'"),
        ([0x0044, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, er0"),
        ([0x0044, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, er0"),
        ([0x0044, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, er0"),
        ([0x0044, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, er0"),
        ([0x0044, 0x007c, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8a, er0'"),
        ([0x0044, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, er0"),
        ([0x0044, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, er0"),
        ([0x0044, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, er0"),
        ([0x0044, 0x0080, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add er0, #IMM16"),
        ([0x0044, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add er0, a"),
        ([0x0044, 0x0083, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add er0, off IMM8"),
        ([0x0044, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, a"),
        ([0x0044, 0x0090, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er0, #IMM16"),
        ([0x0044, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er0, a"),
        ([0x0044, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er0, off IMM8"),
        ([0x0044, 0x0098, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, #IMM16"),
        ([0x0044, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, er0"),
        ([0x0044, 0x00a0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub er0, #IMM16"),
        ([0x0044, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub er0, a"),
        ([0x0044, 0x00a3, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub er0, off IMM8"),
        ([0x0044, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [er0]"),
        ([0x0044, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [er0]"),
        ([0x0044, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [er0]"),
        ([0x0044, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [er0]"),
        ([0x0044, 0x00b0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er0, #IMM16"),
        ([0x0044, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er0, a"),
        ([0x0044, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er0, off IMM8"),
        ([0x0044, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol er0"),
        ([0x0044, 0x00c0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er0, #IMM16"),
        ([0x0044, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er0, a"),
        ([0x0044, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er0, off IMM8"),
        ([0x0044, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror er0"),
        ([0x0044, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er0, #IMM16"),
        ([0x0044, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er0, #IMM16"),
        ([0x0044, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er0, a"),
        ([0x0044, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er0, off IMM8"),
        ([0x0044, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll er0"),
        ([0x0044, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er0, a"),
        ([0x0044, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er0, off IMM8"),
        ([0x0044, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl er0"),
        ([0x0044, 0x00f0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er0, #IMM16"),
        ([0x0044, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er0, a"),
        ([0x0044, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er0, off IMM8"),
        ([0x0044, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra er0"),
        ([0x0045, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, er1"),
        ([0x0045, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr er1   "),
        ([0x0045, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc er1"),
        ([0x0045, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec er1"),
        ([0x0045, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [er1]"),
        ([0x0045, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [er1]"),
        ([0x0045, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, er1'"),
        ([0x0045, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, er1"),
        ([0x0045, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, er1"),
        ([0x0045, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, er1"),
        ([0x0045, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, er1"),
        ([0x0045, 0x007c, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8a, er1'"),
        ([0x0045, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, er1"),
        ([0x0045, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, er1"),
        ([0x0045, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, er1"),
        ([0x0045, 0x0080, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add er1, #IMM16"),
        ([0x0045, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add er1, a"),
        ([0x0045, 0x0083, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add er1, off IMM8"),
        ([0x0045, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, a"),
        ([0x0045, 0x0090, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er1, #IMM16"),
        ([0x0045, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er1, a"),
        ([0x0045, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er1, off IMM8"),
        ([0x0045, 0x0098, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, #IMM16"),
        ([0x0045, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, er1"),
        ([0x0045, 0x00a0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub er1, #IMM16"),
        ([0x0045, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub er1, a"),
        ([0x0045, 0x00a3, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub er1, off IMM8"),
        ([0x0045, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [er1]"),
        ([0x0045, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [er1]"),
        ([0x0045, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [er1]"),
        ([0x0045, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [er1]"),
        ([0x0045, 0x00b0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er1, #IMM16"),
        ([0x0045, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er1, a"),
        ([0x0045, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er1, off IMM8"),
        ([0x0045, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol er1"),
        ([0x0045, 0x00c0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er1, #IMM16"),
        ([0x0045, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er1, a"),
        ([0x0045, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er1, off IMM8"),
        ([0x0045, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror er1"),
        ([0x0045, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er1, #IMM16"),
        ([0x0045, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er1, #IMM16"),
        ([0x0045, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er1, a"),
        ([0x0045, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er1, off IMM8"),
        ([0x0045, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll er1"),
        ([0x0045, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er1, a"),
        ([0x0045, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er1, off IMM8"),
        ([0x0045, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl er1"),
        ([0x0045, 0x00f0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er1, #IMM16"),
        ([0x0045, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er1, a"),
        ([0x0045, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er1, off IMM8"),
        ([0x0045, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra er1"),
        ([0x0046, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, er2"),
        ([0x0046, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr er2   "),
        ([0x0046, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc er2"),
        ([0x0046, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec er2"),
        ([0x0046, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [er2]"),
        ([0x0046, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [er2]"),
        ([0x0046, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, er2'"),
        ([0x0046, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, er2"),
        ([0x0046, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, er2"),
        ([0x0046, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, er2"),
        ([0x0046, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, er2"),
        ([0x0046, 0x007c, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8a, er2'"),
        ([0x0046, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, er2"),
        ([0x0046, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, er2"),
        ([0x0046, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, er2"),
        ([0x0046, 0x0080, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add er2, #IMM16"),
        ([0x0046, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add er2, a"),
        ([0x0046, 0x0083, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add er2, off IMM8"),
        ([0x0046, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, a"),
        ([0x0046, 0x0090, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er2, #IMM16"),
        ([0x0046, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er2, a"),
        ([0x0046, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er2, off IMM8"),
        ([0x0046, 0x0098, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, #IMM16"),
        ([0x0046, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, er2"),
        ([0x0046, 0x00a0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub er2, #IMM16"),
        ([0x0046, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub er2, a"),
        ([0x0046, 0x00a3, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub er2, off IMM8"),
        ([0x0046, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [er2]"),
        ([0x0046, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [er2]"),
        ([0x0046, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [er2]"),
        ([0x0046, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [er2]"),
        ([0x0046, 0x00b0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er2, #IMM16"),
        ([0x0046, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er2, a"),
        ([0x0046, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er2, off IMM8"),
        ([0x0046, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol er2"),
        ([0x0046, 0x00c0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er2, #IMM16"),
        ([0x0046, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er2, a"),
        ([0x0046, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er2, off IMM8"),
        ([0x0046, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror er2"),
        ([0x0046, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er2, #IMM16"),
        ([0x0046, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er2, #IMM16"),
        ([0x0046, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er2, a"),
        ([0x0046, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er2, off IMM8"),
        ([0x0046, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll er2"),
        ([0x0046, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er2, a"),
        ([0x0046, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er2, off IMM8"),
        ([0x0046, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl er2"),
        ([0x0046, 0x00f0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er2, #IMM16"),
        ([0x0046, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er2, a"),
        ([0x0046, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er2, off IMM8"),
        ([0x0046, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra er2"),
        ([0x0047, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, er3"),
        ([0x0047, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr er3   "),
        ([0x0047, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc er3"),
        ([0x0047, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec er3"),
        ([0x0047, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [er3]"),
        ([0x0047, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [er3]"),
        ([0x0047, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, er3'"),
        ([0x0047, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, er3"),
        ([0x0047, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, er3"),
        ([0x0047, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, er3"),
        ([0x0047, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, er3"),
        ([0x0047, 0x007c, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8a, er3'"),
        ([0x0047, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, er3"),
        ([0x0047, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, er3"),
        ([0x0047, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, er3"),
        ([0x0047, 0x0080, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add er3, #IMM16"),
        ([0x0047, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add er3, a"),
        ([0x0047, 0x0083, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add er3, off IMM8"),
        ([0x0047, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, a"),
        ([0x0047, 0x0090, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er3, #IMM16"),
        ([0x0047, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er3, a"),
        ([0x0047, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc er3, off IMM8"),
        ([0x0047, 0x0098, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, #IMM16"),
        ([0x0047, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, er3"),
        ([0x0047, 0x00a0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub er3, #IMM16"),
        ([0x0047, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub er3, a"),
        ([0x0047, 0x00a3, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub er3, off IMM8"),
        ([0x0047, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [er3]"),
        ([0x0047, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [er3]"),
        ([0x0047, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [er3]"),
        ([0x0047, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [er3]"),
        ([0x0047, 0x00b0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er3, #IMM16"),
        ([0x0047, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er3, a"),
        ([0x0047, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc er3, off IMM8"),
        ([0x0047, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol er3"),
        ([0x0047, 0x00c0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er3, #IMM16"),
        ([0x0047, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er3, a"),
        ([0x0047, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp er3, off IMM8"),
        ([0x0047, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror er3"),
        ([0x0047, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er3, #IMM16"),
        ([0x0047, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er3, #IMM16"),
        ([0x0047, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er3, a"),
        ([0x0047, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and er3, off IMM8"),
        ([0x0047, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll er3"),
        ([0x0047, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er3, a"),
        ([0x0047, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or er3, off IMM8"),
        ([0x0047, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl er3"),
        ([0x0047, 0x00f0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er3, #IMM16"),
        ([0x0047, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er3, a"),
        ([0x0047, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor er3, off IMM8"),
        ([0x0047, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra er3"),
        ([0x0048, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, er0"),
        ([0x0048, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, r0"),
        ([0x0049, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, er1"),
        ([0x0049, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, r1"),
        ([0x004a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, er2"),
        ([0x004a, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, r2"),
        ([0x004b, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, er3"),
        ([0x004b, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, r3"),
        ([0x004c, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, r4"),
        ([0x004d, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, r5"),
        ([0x004e, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, r6"),
        ([0x004f, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, r7"),
        ([0x0050, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, a"),
        ([0x0051, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, a"),
        ([0x0052, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, a"),
        ([0x0053, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sll a"),
        ([0x0053, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sllb a"),
        ([0x0054, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "pushs lrb"),
        ([0x0055, ], DD_FLAG_ONE, CF_FLAG_NEXT, "pushs a"),
        ([0x0057, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, #IMM16"),
        ([0x0058, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, er0"),
        ([0x0058, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, r0"),
        ([0x0059, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, er1"),
        ([0x0059, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, r1"),
        ([0x005a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, er2"),
        ([0x005a, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, r2"),
        ([0x005b, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, er3"),
        ([0x005b, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, r3"),
        ([0x005c, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, r4"),
        ([0x005d, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, r5"),
        ([0x005e, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, r6"),
        ([0x005f, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, r7"),
        ([0x0060, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, #IMM16"),
        ([0x0061, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, #IMM16"),
        ([0x0062, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, #IMM16"),
        ([0x0063, ], DD_FLAG_ONE, CF_FLAG_NEXT, "srl a"),
        ([0x0063, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "srlb a"),
        ([0x0064, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "pops lrb"),
        ([0x0065, ], DD_FLAG_SET, CF_FLAG_NEXT, "pops a"),
        ([0x0067, IMM16L, IMM16H, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, #IMM16"),
        ([0x0068, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, er0"),
        ([0x0068, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, r0"),
        ([0x0069, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, er1"),
        ([0x0069, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, r1"),
        ([0x006a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, er2"),
        ([0x006a, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, r2"),
        ([0x006b, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, er3"),
        ([0x006b, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, r3"),
        ([0x006c, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, r4"),
        ([0x006d, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, r5"),
        ([0x006e, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, r6"),
        ([0x006f, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, r7"),
        ([0x0070, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc x1"),
        ([0x0071, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc x2"),
        ([0x0072, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc dp"),
        ([0x0073, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sra a"),
        ([0x0073, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "srab a"),
        ([0x0076, ], DD_FLAG_ONE, CF_FLAG_NEXT, "pushu a"),
        ([0x0077, IMM8, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, #IMM8"),
        ([0x0078, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, r0"),
        ([0x0079, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, r1"),
        ([0x007a, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, r2"),
        ([0x007b, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, r3"),
        ([0x007c, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, r4"),
        ([0x007d, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, r5"),
        ([0x007e, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, r6"),
        ([0x007f, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, r7"),
        ([0x0080, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec x1"),
        ([0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec x2"),
        ([0x0082, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec dp"),
        ([0x0083, ], DD_FLAG_ONE, CF_FLAG_NEXT, "swap"),
        ([0x0083, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "swapb"),
        ([0x0084, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xnbl a, off IMM8"),
        ([0x0085, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sc"),
        ([0x0086, IMM16L, IMM16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, #IMM16"),
        ([0x0086, IMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, #IMM8"),
        ([0x0087, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, off IMM8"),
        ([0x0087, IMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, off IMM8"),
        ([0x0088, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, er0"),
        ([0x0088, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, r0"),
        ([0x0089, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, er1"),
        ([0x0089, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, r1"),
        ([0x008a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, er2"),
        ([0x008a, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, r2"),
        ([0x008b, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, er3"),
        ([0x008b, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, r3"),
        ([0x008c, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, r4"),
        ([0x008d, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, r5"),
        ([0x008e, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, r6"),
        ([0x008f, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, r7"),
        ([0x0090, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, x1"),
        ([0x0090, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr x1   "),
        ([0x0090, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [x1]"),
        ([0x0090, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [x1]"),
        ([0x0090, 0x0035, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mul "),
        ([0x0090, 0x0037, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "div"),
        ([0x0090, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, x1"),
        ([0x0090, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, x1"),
        ([0x0090, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, x1"),
        ([0x0090, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, x1"),
        ([0x0090, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, x1"),
        ([0x0090, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, x1"),
        ([0x0090, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, x1"),
        ([0x0090, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, x1"),
        ([0x0090, 0x007c, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8, x1"),
        ([0x0090, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, x1"),
        ([0x0090, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, x1"),
        ([0x0090, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, x1"),
        ([0x0090, 0x0080, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add x1, #IMM16"),
        ([0x0090, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add x1, a"),
        ([0x0090, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, x1"),
        ([0x0090, 0x0083, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add x1, off IMM8"),
        ([0x0090, 0x0090, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc x1, #IMM16"),
        ([0x0090, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc x1, a"),
        ([0x0090, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, x1"),
        ([0x0090, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc x1, off IMM8"),
        ([0x0090, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, x1"),
        ([0x0090, 0x009c, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, IMM16"),
        ([0x0090, 0x009d, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, IMM16"),
        ([0x0090, 0x009e, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, IMM16"),
        ([0x0090, 0x009f, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, IMM16"),
        ([0x0090, 0x00a0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub x1, #IMM16"),
        ([0x0090, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub x1, a"),
        ([0x0090, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, x1"),
        ([0x0090, 0x00a3, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub x1, off IMM8"),
        ([0x0090, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [x1]"),
        ([0x0090, 0x00a9, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, IMM16[x1]"),
        ([0x0090, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [x1]"),
        ([0x0090, 0x00ab, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, IMM16[x1]"),
        ([0x0090, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [x1]"),
        ([0x0090, 0x00ad, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, IMM16[x1]"),
        ([0x0090, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [x1]"),
        ([0x0090, 0x00af, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, IMM16[x1]"),
        ([0x0090, 0x00b0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc x1, #IMM16"),
        ([0x0090, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc x1, a"),
        ([0x0090, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, x1"),
        ([0x0090, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc x1, off IMM8"),
        ([0x0090, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol x1"),
        ([0x0090, 0x00c0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp x1, #IMM16"),
        ([0x0090, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp x1, a"),
        ([0x0090, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, x1"),
        ([0x0090, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp x1, off IMM8"),
        ([0x0090, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror x1"),
        ([0x0090, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and x1, #IMM16"),
        ([0x0090, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or x1, #IMM16"),
        ([0x0090, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and x1, a"),
        ([0x0090, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, x1"),
        ([0x0090, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and x1, off IMM8"),
        ([0x0090, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll x1"),
        ([0x0090, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or x1, a"),
        ([0x0090, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, x1"),
        ([0x0090, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or x1, off IMM8"),
        ([0x0090, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl x1"),
        ([0x0090, 0x00f0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor x1, #IMM16"),
        ([0x0090, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor x1, a"),
        ([0x0090, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, x1"),
        ([0x0090, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor x1, off IMM8"),
        ([0x0090, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra x1"),
        ([0x0091, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, x2"),
        ([0x0091, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr x2   "),
        ([0x0091, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [x2]"),
        ([0x0091, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [x2]"),
        ([0x0091, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, x2"),
        ([0x0091, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, x2"),
        ([0x0091, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, x2"),
        ([0x0091, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, x2"),
        ([0x0091, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, x2"),
        ([0x0091, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, x2"),
        ([0x0091, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, x2"),
        ([0x0091, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, x2"),
        ([0x0091, 0x007c, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8, x2"),
        ([0x0091, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, x2"),
        ([0x0091, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, x2"),
        ([0x0091, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, x2"),
        ([0x0091, 0x0080, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add x2, #IMM16"),
        ([0x0091, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add x2, a"),
        ([0x0091, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, x2"),
        ([0x0091, 0x0083, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add x2, off IMM8"),
        ([0x0091, 0x0090, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc x2, #IMM16"),
        ([0x0091, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc x2, a"),
        ([0x0091, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, x2"),
        ([0x0091, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc x2, off IMM8"),
        ([0x0091, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, x2"),
        ([0x0091, 0x00a0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub x2, #IMM16"),
        ([0x0091, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub x2, a"),
        ([0x0091, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, x2"),
        ([0x0091, 0x00a3, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub x2, off IMM8"),
        ([0x0091, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [x2]"),
        ([0x0091, 0x00a9, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, IMM16[x2]"),
        ([0x0091, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [x2]"),
        ([0x0091, 0x00ab, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, IMM16[x2]"),
        ([0x0091, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [x2]"),
        ([0x0091, 0x00ad, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, IMM16[x2]"),
        ([0x0091, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [x2]"),
        ([0x0091, 0x00af, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, IMM16[x2]"),
        ([0x0091, 0x00b0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc x2, #IMM16"),
        ([0x0091, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc x2, a"),
        ([0x0091, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, x2"),
        ([0x0091, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc x2, off IMM8"),
        ([0x0091, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol x2"),
        ([0x0091, 0x00c0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp x2, #IMM16"),
        ([0x0091, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp x2, a"),
        ([0x0091, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, x2"),
        ([0x0091, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp x2, off IMM8"),
        ([0x0091, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror x2"),
        ([0x0091, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and x2, #IMM16"),
        ([0x0091, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or x2, #IMM16"),
        ([0x0091, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and x2, a"),
        ([0x0091, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, x2"),
        ([0x0091, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and x2, off IMM8"),
        ([0x0091, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll x2"),
        ([0x0091, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or x2, a"),
        ([0x0091, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, x2"),
        ([0x0091, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or x2, off IMM8"),
        ([0x0091, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl x2"),
        ([0x0091, 0x00f0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor x2, #IMM16"),
        ([0x0091, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor x2, a"),
        ([0x0091, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, x2"),
        ([0x0091, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor x2, off IMM8"),
        ([0x0091, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra x2"),
        ([0x0092, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, dp"),
        ([0x0092, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr dp   "),
        ([0x0092, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [dp]"),
        ([0x0092, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [dp]"),
        ([0x0092, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, dp"),
        ([0x0092, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, dp"),
        ([0x0092, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, dp"),
        ([0x0092, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, dp"),
        ([0x0092, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, dp"),
        ([0x0092, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, dp"),
        ([0x0092, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, dp"),
        ([0x0092, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, dp"),
        ([0x0092, 0x007c, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8, dp"),
        ([0x0092, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, dp"),
        ([0x0092, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, dp"),
        ([0x0092, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, dp"),
        ([0x0092, 0x0080, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add dp, #IMM16"),
        ([0x0092, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add dp, a"),
        ([0x0092, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, dp"),
        ([0x0092, 0x0083, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add dp, off IMM8"),
        ([0x0092, 0x0090, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc dp, #IMM16"),
        ([0x0092, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc dp, a"),
        ([0x0092, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, dp"),
        ([0x0092, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc dp, off IMM8"),
        ([0x0092, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, dp"),
        ([0x0092, 0x00a0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub dp, #IMM16"),
        ([0x0092, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub dp, a"),
        ([0x0092, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, dp"),
        ([0x0092, 0x00a3, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub dp, off IMM8"),
        ([0x0092, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [dp]"),
        ([0x0092, 0x00a9, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, IMM16[dp]"),
        ([0x0092, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [dp]"),
        ([0x0092, 0x00ab, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, IMM16[dp]"),
        ([0x0092, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [dp]"),
        ([0x0092, 0x00ad, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, IMM16[dp]"),
        ([0x0092, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [dp]"),
        ([0x0092, 0x00af, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, IMM16[dp]"),
        ([0x0092, 0x00b0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc dp, #IMM16"),
        ([0x0092, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc dp, a"),
        ([0x0092, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, dp"),
        ([0x0092, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc dp, off IMM8"),
        ([0x0092, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol dp"),
        ([0x0092, 0x00c0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp dp, #IMM16"),
        ([0x0092, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp dp, a"),
        ([0x0092, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, dp"),
        ([0x0092, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp dp, off IMM8"),
        ([0x0092, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror dp"),
        ([0x0092, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and dp, #IMM16"),
        ([0x0092, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or dp, #IMM16"),
        ([0x0092, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and dp, a"),
        ([0x0092, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, dp"),
        ([0x0092, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and dp, off IMM8"),
        ([0x0092, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll dp"),
        ([0x0092, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or dp, a"),
        ([0x0092, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, dp"),
        ([0x0092, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or dp, off IMM8"),
        ([0x0092, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl dp"),
        ([0x0092, 0x00f0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor dp, #IMM16"),
        ([0x0092, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor dp, a"),
        ([0x0092, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, dp"),
        ([0x0092, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor dp, off IMM8"),
        ([0x0092, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra dp"),
        ([0x0093, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "daa"),
        ([0x0094, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "das"),
        ([0x0095, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rc"),
        ([0x0096, IMM16L, IMM16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, #IMM16"),
        ([0x0096, IMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, #IMM8"),
        ([0x0097, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, off IMM8"),
        ([0x0097, IMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, off IMM8"),
        ([0x0098, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, #IMM8"),
        ([0x0099, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, #IMM8"),
        ([0x009a, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, #IMM8"),
        ([0x009b, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, #IMM8"),
        ([0x009c, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, #IMM8"),
        ([0x009d, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, #IMM8"),
        ([0x009e, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, #IMM8"),
        ([0x009f, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, #IMM8"),
        ([0x00a0, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, ssp"),
        ([0x00a0, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr ssp   "),
        ([0x00a0, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc ssp"),
        ([0x00a0, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec ssp"),
        ([0x00a0, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [ssp]"),
        ([0x00a0, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [ssp]     "),
        ([0x00a0, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, ssp"),
        ([0x00a0, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, ssp"),
        ([0x00a0, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, ssp"),
        ([0x00a0, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, ssp"),
        ([0x00a0, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, ssp"),
        ([0x00a0, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, ssp"),
        ([0x00a0, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, ssp"),
        ([0x00a0, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, ssp"),
        ([0x00a0, 0x007c, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8, ssp"),
        ([0x00a0, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, ssp"),
        ([0x00a0, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, ssp"),
        ([0x00a0, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, ssp"),
        ([0x00a0, 0x0080, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add ssp, #IMM16"),
        ([0x00a0, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add ssp, a"),
        ([0x00a0, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, ssp"),
        ([0x00a0, 0x0083, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add ssp, off IMM8"),
        ([0x00a0, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, a"),
        ([0x00a0, 0x0090, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc ssp, #IMM16"),
        ([0x00a0, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc ssp, a"),
        ([0x00a0, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, ssp"),
        ([0x00a0, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc ssp, off IMM8"),
        ([0x00a0, 0x0098, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, #IMM16"),
        ([0x00a0, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, ssp"),
        ([0x00a0, 0x00a0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub ssp, #IMM16"),
        ([0x00a0, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub ssp, a"),
        ([0x00a0, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, ssp"),
        ([0x00a0, 0x00a3, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub ssp, off IMM8"),
        ([0x00a0, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [ssp]"),
        ([0x00a0, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [ssp]"),
        ([0x00a0, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [ssp]"),
        ([0x00a0, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [ssp]"),
        ([0x00a0, 0x00b0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc ssp, #IMM16"),
        ([0x00a0, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc ssp, a"),
        ([0x00a0, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, ssp"),
        ([0x00a0, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc ssp, off IMM8"),
        ([0x00a0, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol ssp"),
        ([0x00a0, 0x00c0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp ssp, #IMM16"),
        ([0x00a0, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp ssp, a"),
        ([0x00a0, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, ssp"),
        ([0x00a0, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp ssp, off IMM8"),
        ([0x00a0, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror ssp"),
        ([0x00a0, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and ssp, #IMM16"),
        ([0x00a0, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or ssp, #IMM16"),
        ([0x00a0, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and ssp, a"),
        ([0x00a0, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, ssp"),
        ([0x00a0, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and ssp, off IMM8"),
        ([0x00a0, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll ssp"),
        ([0x00a0, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or ssp, a"),
        ([0x00a0, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, ssp"),
        ([0x00a0, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or ssp, off IMM8"),
        ([0x00a0, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl ssp"),
        ([0x00a0, 0x00f0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor ssp, #IMM16"),
        ([0x00a0, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor ssp, a"),
        ([0x00a0, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, ssp"),
        ([0x00a0, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor ssp, off IMM8"),
        ([0x00a0, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra ssp"),
        ([0x00a1, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, usp"),
        ([0x00a1, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr usp   "),
        ([0x00a1, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc usp"),
        ([0x00a1, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec usp"),
        ([0x00a1, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [usp]"),
        ([0x00a1, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [usp]     "),
        ([0x00a1, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, usp"),
        ([0x00a1, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, usp"),
        ([0x00a1, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, usp"),
        ([0x00a1, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, usp"),
        ([0x00a1, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, usp"),
        ([0x00a1, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, usp"),
        ([0x00a1, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, usp"),
        ([0x00a1, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, usp"),
        ([0x00a1, 0x007c, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8, usp "),
        ([0x00a1, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, usp"),
        ([0x00a1, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, usp"),
        ([0x00a1, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, usp"),
        ([0x00a1, 0x0080, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add usp, #IMM16"),
        ([0x00a1, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add usp, a"),
        ([0x00a1, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, usp"),
        ([0x00a1, 0x0083, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add usp, off IMM8 "),
        ([0x00a1, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, a"),
        ([0x00a1, 0x0090, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc usp, #IMM16"),
        ([0x00a1, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc usp, a"),
        ([0x00a1, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, usp"),
        ([0x00a1, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc usp, off IMM8 "),
        ([0x00a1, 0x0098, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, #IMM16"),
        ([0x00a1, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, usp"),
        ([0x00a1, 0x00a0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub usp, #IMM16"),
        ([0x00a1, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub usp, a"),
        ([0x00a1, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, usp"),
        ([0x00a1, 0x00a3, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub usp, off IMM8 "),
        ([0x00a1, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [usp]"),
        ([0x00a1, 0x00a9, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, IMM16[usp]"),
        ([0x00a1, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [usp]"),
        ([0x00a1, 0x00ab, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, IMM16[usp]"),
        ([0x00a1, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [usp]"),
        ([0x00a1, 0x00ad, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, IMM16[usp]"),
        ([0x00a1, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [usp]"),
        ([0x00a1, 0x00b0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc usp, #IMM16"),
        ([0x00a1, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc usp, a"),
        ([0x00a1, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, usp"),
        ([0x00a1, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc usp, off IMM8 "),
        ([0x00a1, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol usp"),
        ([0x00a1, 0x00c0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp usp, #IMM16"),
        ([0x00a1, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp usp, a"),
        ([0x00a1, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, usp"),
        ([0x00a1, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp usp, off IMM8 "),
        ([0x00a1, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror usp"),
        ([0x00a1, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and usp, #IMM16"),
        ([0x00a1, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or usp, #IMM16"),
        ([0x00a1, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and usp, a"),
        ([0x00a1, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, usp"),
        ([0x00a1, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and usp, off IMM8 "),
        ([0x00a1, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll usp"),
        ([0x00a1, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or usp, a"),
        ([0x00a1, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, usp"),
        ([0x00a1, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or usp, off IMM8 "),
        ([0x00a1, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl usp"),
        ([0x00a1, 0x00f0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor usp, #IMM16"),
        ([0x00a1, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor usp, a"),
        ([0x00a1, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, usp"),
        ([0x00a1, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor usp, off IMM8 "),
        ([0x00a1, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra usp"),
        ([0x00a2, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswh.0"),
        ([0x00a2, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswh.1"),
        ([0x00a2, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswh.2"),
        ([0x00a2, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswh.3"),
        ([0x00a2, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswh.4"),
        ([0x00a2, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswh.5"),
        ([0x00a2, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswh.6"),
        ([0x00a2, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswh.7"),
        ([0x00a2, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, pswh"),
        ([0x00a2, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr pswh"),
        ([0x00a2, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr pswh"),
        ([0x00a2, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr pswh"),
        ([0x00a2, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb pswh   "),
        ([0x00a2, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb pswh"),
        ([0x00a2, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb pswh"),
        ([0x00a2, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswh.0"),
        ([0x00a2, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswh.1"),
        ([0x00a2, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswh.2"),
        ([0x00a2, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswh.3"),
        ([0x00a2, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswh.4"),
        ([0x00a2, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswh.5"),
        ([0x00a2, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswh.6"),
        ([0x00a2, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswh.7"),
        ([0x00a2, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr pswh, c"),
        ([0x00a2, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, pswh"),
        ([0x00a2, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswh.0"),
        ([0x00a2, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswh.1"),
        ([0x00a2, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswh.2"),
        ([0x00a2, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswh.3"),
        ([0x00a2, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswh.4"),
        ([0x00a2, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswh.5"),
        ([0x00a2, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswh.6"),
        ([0x00a2, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswh.7"),
        ([0x00a2, 0x0034, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mulb"),
        ([0x00a2, 0x0036, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "divb"),
        ([0x00a2, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswh.0, c"),
        ([0x00a2, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswh.1, c"),
        ([0x00a2, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswh.2, c"),
        ([0x00a2, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswh.3, c"),
        ([0x00a2, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswh.4, c"),
        ([0x00a2, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswh.5, c"),
        ([0x00a2, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswh.6, c"),
        ([0x00a2, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswh.7, c"),
        ([0x00a2, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, pswh"),
        ([0x00a2, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, pswh"),
        ([0x00a2, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, pswh"),
        ([0x00a2, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, pswh"),
        ([0x00a2, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, pswh"),
        ([0x00a2, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, pswh"),
        ([0x00a2, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, pswh"),
        ([0x00a2, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, pswh"),
        ([0x00a2, 0x007c, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8, pswh       "),
        ([0x00a2, 0x0080, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb pswh, #IMM8"),
        ([0x00a2, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb pswh, a"),
        ([0x00a2, 0x0082, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, pswh"),
        ([0x00a2, 0x0083, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb pswh, off IMM8"),
        ([0x00a2, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, pswh"),
        ([0x00a2, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, pswh"),
        ([0x00a2, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, a"),
        ([0x00a2, 0x0090, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb pswh, #IMM8"),
        ([0x00a2, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb pswh, a"),
        ([0x00a2, 0x0092, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, pswh"),
        ([0x00a2, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb pswh, off IMM8"),
        ([0x00a2, 0x0098, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, #IMM8"),
        ([0x00a2, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, pswh"),
        ([0x00a2, 0x00a0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb pswh, #IMM8"),
        ([0x00a2, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb pswh, a"),
        ([0x00a2, 0x00a2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, pswh"),
        ([0x00a2, 0x00a3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb pswh, off IMM8"),
        ([0x00a2, 0x00af, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, IMM16[usp]"),
        ([0x00a2, 0x00b0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb pswh, #IMM8"),
        ([0x00a2, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb pswh, a"),
        ([0x00a2, 0x00b2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, pswh"),
        ([0x00a2, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb pswh, off IMM8"),
        ([0x00a2, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb pswh"),
        ([0x00a2, 0x00c0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb pswh, #IMM8"),
        ([0x00a2, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb pswh, a"),
        ([0x00a2, 0x00c2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, pswh"),
        ([0x00a2, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb pswh, off IMM8"),
        ([0x00a2, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb pswh"),
        ([0x00a2, 0x00d0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb pswh, #IMM8"),
        ([0x00a2, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb pswh, a"),
        ([0x00a2, 0x00d2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, pswh"),
        ([0x00a2, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb pswh, off IMM8"),
        ([0x00a2, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb pswh"),
        ([0x00a2, 0x00e0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb pswh, #IMM8"),
        ([0x00a2, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb pswh, a"),
        ([0x00a2, 0x00e2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, pswh"),
        ([0x00a2, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb pswh, off IMM8"),
        ([0x00a2, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb pswh"),
        ([0x00a2, 0x00f0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb pswh, #IMM8"),
        ([0x00a2, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb pswh, a"),
        ([0x00a2, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, pswh"),
        ([0x00a2, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb pswh, off IMM8"),
        ([0x00a2, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab pswh"),
        ([0x00a3, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswl.0"),
        ([0x00a3, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswl.1"),
        ([0x00a3, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswl.2"),
        ([0x00a3, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswl.3"),
        ([0x00a3, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswl.4"),
        ([0x00a3, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswl.5"),
        ([0x00a3, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswl.6"),
        ([0x00a3, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb pswl.7"),
        ([0x00a3, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, pswl"),
        ([0x00a3, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr pswl"),
        ([0x00a3, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr pswl"),
        ([0x00a3, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr pswl"),
        ([0x00a3, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb pswl   "),
        ([0x00a3, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb pswl"),
        ([0x00a3, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb pswl"),
        ([0x00a3, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswl.0"),
        ([0x00a3, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswl.1"),
        ([0x00a3, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswl.2"),
        ([0x00a3, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswl.3"),
        ([0x00a3, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswl.4"),
        ([0x00a3, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswl.5"),
        ([0x00a3, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswl.6"),
        ([0x00a3, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb pswl.7"),
        ([0x00a3, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr pswl, c"),
        ([0x00a3, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, pswl"),
        ([0x00a3, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswl.0"),
        ([0x00a3, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswl.1"),
        ([0x00a3, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswl.2"),
        ([0x00a3, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswl.3"),
        ([0x00a3, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswl.4"),
        ([0x00a3, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswl.5"),
        ([0x00a3, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswl.6"),
        ([0x00a3, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, pswl.7"),
        ([0x00a3, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswl.0, c"),
        ([0x00a3, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswl.1, c"),
        ([0x00a3, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswl.2, c"),
        ([0x00a3, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswl.3, c"),
        ([0x00a3, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswl.4, c"),
        ([0x00a3, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswl.5, c"),
        ([0x00a3, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswl.6, c"),
        ([0x00a3, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb pswl.7, c"),
        ([0x00a3, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, pswl"),
        ([0x00a3, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, pswl"),
        ([0x00a3, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, pswl"),
        ([0x00a3, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, pswl"),
        ([0x00a3, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, pswl"),
        ([0x00a3, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, pswl"),
        ([0x00a3, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, pswl"),
        ([0x00a3, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, pswl"),
        ([0x00a3, 0x007c, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8, pswl       "),
        ([0x00a3, 0x0080, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb pswl, #IMM8"),
        ([0x00a3, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb pswl, a"),
        ([0x00a3, 0x0082, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, pswl"),
        ([0x00a3, 0x0083, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb pswl, off IMM8"),
        ([0x00a3, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, pswl"),
        ([0x00a3, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, pswl"),
        ([0x00a3, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, a"),
        ([0x00a3, 0x0090, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb pswl, #IMM8"),
        ([0x00a3, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb pswl, a"),
        ([0x00a3, 0x0092, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, pswl"),
        ([0x00a3, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb pswl, off IMM8"),
        ([0x00a3, 0x0098, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, #IMM8"),
        ([0x00a3, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, pswl"),
        ([0x00a3, 0x00a0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb pswl, #IMM8"),
        ([0x00a3, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb pswl, a"),
        ([0x00a3, 0x00a2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, pswl"),
        ([0x00a3, 0x00a3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb pswl, off IMM8"),
        ([0x00a3, 0x00b0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb pswl, #IMM8"),
        ([0x00a3, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb pswl, a"),
        ([0x00a3, 0x00b2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, pswl"),
        ([0x00a3, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb pswl, off IMM8"),
        ([0x00a3, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb pswl"),
        ([0x00a3, 0x00c0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb pswl, #IMM8"),
        ([0x00a3, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb pswl, a"),
        ([0x00a3, 0x00c2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, pswl"),
        ([0x00a3, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb pswl, off IMM8"),
        ([0x00a3, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb pswl"),
        ([0x00a3, 0x00d0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb pswl, #IMM8"),
        ([0x00a3, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb pswl, a"),
        ([0x00a3, 0x00d2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, pswl"),
        ([0x00a3, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb pswl, off IMM8"),
        ([0x00a3, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb pswl"),
        ([0x00a3, 0x00e0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb pswl, #IMM8"),
        ([0x00a3, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb pswl, a"),
        ([0x00a3, 0x00e2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, pswl"),
        ([0x00a3, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb pswl, off IMM8"),
        ([0x00a3, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb pswl"),
        ([0x00a3, 0x00f0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb pswl, #IMM8"),
        ([0x00a3, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb pswl, a"),
        ([0x00a3, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, pswl"),
        ([0x00a3, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb pswl, off IMM8"),
        ([0x00a3, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab pswl"),
        ([0x00a4, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, lrb"),
        ([0x00a4, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr lrb   "),
        ([0x00a4, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [lrb]"),
        ([0x00a4, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [lrb]     "),
        ([0x00a4, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, lrb"),
        ([0x00a4, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, lrb"),
        ([0x00a4, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, lrb"),
        ([0x00a4, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, lrb"),
        ([0x00a4, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, lrb"),
        ([0x00a4, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, lrb"),
        ([0x00a4, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, lrb"),
        ([0x00a4, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, lrb"),
        ([0x00a4, 0x007c, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8, lrb"),
        ([0x00a4, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, lrb"),
        ([0x00a4, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, lrb"),
        ([0x00a4, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, lrb"),
        ([0x00a4, 0x0080, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add lrb, #IMM16"),
        ([0x00a4, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add lrb, a"),
        ([0x00a4, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, lrb"),
        ([0x00a4, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, a"),
        ([0x00a4, 0x0090, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc lrb, #IMM16"),
        ([0x00a4, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc lrb, a"),
        ([0x00a4, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, lrb"),
        ([0x00a4, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, lrb"),
        ([0x00a4, 0x00a0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub lrb, #IMM16"),
        ([0x00a4, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub lrb, a"),
        ([0x00a4, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, lrb"),
        ([0x00a4, 0x00a3, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub lrb, off IMM8"),
        ([0x00a4, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [lrb]"),
        ([0x00a4, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [lrb]"),
        ([0x00a4, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [lrb]"),
        ([0x00a4, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [lrb]"),
        ([0x00a4, 0x00b0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc lrb, #IMM16"),
        ([0x00a4, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc lrb, a"),
        ([0x00a4, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, lrb"),
        ([0x00a4, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc lrb, off IMM8"),
        ([0x00a4, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol lrb"),
        ([0x00a4, 0x00c0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp lrb, #IMM16"),
        ([0x00a4, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp lrb, a"),
        ([0x00a4, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, lrb"),
        ([0x00a4, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp lrb, off IMM8"),
        ([0x00a4, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror lrb"),
        ([0x00a4, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and lrb, #IMM16"),
        ([0x00a4, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or lrb, #IMM16"),
        ([0x00a4, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and lrb, a"),
        ([0x00a4, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, lrb"),
        ([0x00a4, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll lrb"),
        ([0x00a4, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or lrb, a"),
        ([0x00a4, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, lrb"),
        ([0x00a4, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or lrb, off IMM8"),
        ([0x00a4, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl lrb"),
        ([0x00a4, 0x00f0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor lrb, #IMM16"),
        ([0x00a4, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor lrb, a"),
        ([0x00a4, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, lrb"),
        ([0x00a4, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor lrb, off IMM8"),
        ([0x00a4, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra lrb"),
        ([0x00a6, IMM16L, IMM16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, #IMM16"),
        ([0x00a6, IMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, #IMM8"),
        ([0x00a7, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, off IMM8"),
        ([0x00a7, IMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, off IMM8"),
        ([0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb r0"),
        ([0x00a9, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb r1"),
        ([0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb r2"),
        ([0x00ab, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb r3"),
        ([0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb r4"),
        ([0x00ad, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb r5"),
        ([0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb r6"),
        ([0x00af, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb r7"),
        ([0x00b0, IMM16L, IMM16H, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr IMM16[x1]   "),
        ([0x00b0, IMM16L, IMM16H, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [IMM16[x1]]"),
        ([0x00b0, IMM16L, IMM16H, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [IMM16[x1]]     "),
        ([0x00b0, IMM16L, IMM16H, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x007c, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add IMM16[x1], a"),
        ([0x00b0, IMM16L, IMM16H, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x0083, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add IMM16[x1], off IMM8"),
        ([0x00b0, IMM16L, IMM16H, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov IMM16[x1], a"),
        ([0x00b0, IMM16L, IMM16H, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc IMM16[x1], a"),
        ([0x00b0, IMM16L, IMM16H, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc IMM16[x1], off IMM8"),
        ([0x00b0, IMM16L, IMM16H, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub IMM16[x1], a"),
        ([0x00b0, IMM16L, IMM16H, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x00a3, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub IMM16[x1], off IMM8"),
        ([0x00b0, IMM16L, IMM16H, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [IMM16[x1]]"),
        ([0x00b0, IMM16L, IMM16H, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [IMM16[x1]]"),
        ([0x00b0, IMM16L, IMM16H, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [IMM16[x1]]"),
        ([0x00b0, IMM16L, IMM16H, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [IMM16[x1]]"),
        ([0x00b0, IMM16L, IMM16H, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc IMM16[x1], a"),
        ([0x00b0, IMM16L, IMM16H, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc IMM16[x1], off IMM8"),
        ([0x00b0, IMM16L, IMM16H, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp IMM16[x1], a"),
        ([0x00b0, IMM16L, IMM16H, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp IMM16[x1], off IMM8"),
        ([0x00b0, IMM16L, IMM16H, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and IMM16[x1], a"),
        ([0x00b0, IMM16L, IMM16H, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and IMM16[x1], off IMM8"),
        ([0x00b0, IMM16L, IMM16H, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or IMM16[x1], a"),
        ([0x00b0, IMM16L, IMM16H, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or IMM16[x1], off IMM8"),
        ([0x00b0, IMM16L, IMM16H, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor IMM16[x1], a"),
        ([0x00b0, IMM16L, IMM16H, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, IMM16[x1]"),
        ([0x00b0, IMM16L, IMM16H, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor IMM16[x1], off IMM8"),
        ([0x00b0, IMM16L, IMM16H, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra IMM16[x1]"),
        ([0x00b0, IMM16Lb, IMM16Hb, 0x0080, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add IMM16b[x1], #IMM16"),
        ([0x00b0, IMM16Lb, IMM16Hb, 0x0090, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc IMM16b[x1], #IMM16"),
        ([0x00b0, IMM16Lb, IMM16Hb, 0x0098, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov IMM16b[x1], #IMM16"),
        ([0x00b0, IMM16Lb, IMM16Hb, 0x00a0, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub IMM16b[x1], #IMM16"),
        ([0x00b0, IMM16Lb, IMM16Hb, 0x00b0, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc IMM16b[x1], #IMM16"),
        ([0x00b0, IMM16Lb, IMM16Hb, 0x00c0, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp IMM16b[x1], #IMM16"),
        ([0x00b0, IMM16Lb, IMM16Hb, 0x00d0, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and IMM16b[x1], #IMM16"),
        ([0x00b0, IMM16Lb, IMM16Hb, 0x00d0, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or IMM16b[x1], #IMM16"),
        ([0x00b0, IMM16Lb, IMM16Hb, 0x00f0, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor IMM16b[x1], #IMM16"),
        ([0x00b1, IMM16L, IMM16H, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr IMM16[x2]   "),
        ([0x00b1, IMM16L, IMM16H, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [IMM16[x2]]"),
        ([0x00b1, IMM16L, IMM16H, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [IMM16[x2]]     "),
        ([0x00b1, IMM16L, IMM16H, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x007c, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add IMM16[x2], a"),
        ([0x00b1, IMM16L, IMM16H, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x0083, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add IMM16[x2], off IMM8"),
        ([0x00b1, IMM16L, IMM16H, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov IMM16[x2], a"),
        ([0x00b1, IMM16L, IMM16H, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc IMM16[x2], a"),
        ([0x00b1, IMM16L, IMM16H, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc IMM16[x2], off IMM8"),
        ([0x00b1, IMM16L, IMM16H, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub IMM16[x2], a"),
        ([0x00b1, IMM16L, IMM16H, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x00a3, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub IMM16[x2], off IMM8"),
        ([0x00b1, IMM16L, IMM16H, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [IMM16[x2]]"),
        ([0x00b1, IMM16L, IMM16H, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [IMM16[x2]]"),
        ([0x00b1, IMM16L, IMM16H, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [IMM16[x2]]"),
        ([0x00b1, IMM16L, IMM16H, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [IMM16[x2]]"),
        ([0x00b1, IMM16L, IMM16H, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc IMM16[x2], a"),
        ([0x00b1, IMM16L, IMM16H, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc IMM16[x2], off IMM8"),
        ([0x00b1, IMM16L, IMM16H, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp IMM16[x2], a"),
        ([0x00b1, IMM16L, IMM16H, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp IMM16[x2], off IMM8"),
        ([0x00b1, IMM16L, IMM16H, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and IMM16[x2], a"),
        ([0x00b1, IMM16L, IMM16H, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and IMM16[x2], off IMM8"),
        ([0x00b1, IMM16L, IMM16H, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or IMM16[x2], a"),
        ([0x00b1, IMM16L, IMM16H, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or IMM16[x2], off IMM8"),
        ([0x00b1, IMM16L, IMM16H, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor IMM16[x2], a"),
        ([0x00b1, IMM16L, IMM16H, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, IMM16[x2]"),
        ([0x00b1, IMM16L, IMM16H, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor IMM16[x2], off IMM8"),
        ([0x00b1, IMM16L, IMM16H, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra IMM16[x2]"),
        ([0x00b1, IMM16Lb, IMM16Hb, 0x0080, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add IMM16b[x2], #IMM16"),
        ([0x00b1, IMM16Lb, IMM16Hb, 0x0090, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc IMM16b[x2], #IMM16"),
        ([0x00b1, IMM16Lb, IMM16Hb, 0x0098, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov IMM16b[x2], #IMM16"),
        ([0x00b1, IMM16Lb, IMM16Hb, 0x00a0, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub IMM16b[x2], #IMM16"),
        ([0x00b1, IMM16Lb, IMM16Hb, 0x00b0, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc IMM16b[x2], #IMM16"),
        ([0x00b1, IMM16Lb, IMM16Hb, 0x00c0, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp IMM16b[x2], #IMM16"),
        ([0x00b1, IMM16Lb, IMM16Hb, 0x00d0, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and IMM16b[x2], #IMM16"),
        ([0x00b1, IMM16Lb, IMM16Hb, 0x00d0, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or IMM16b[x2], #IMM16"),
        ([0x00b1, IMM16Lb, IMM16Hb, 0x00f0, IMM16La, IMM16Ha, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor IMM16b[x2], #IMM16"),
        ([0x00b2, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, [dp]"),
        ([0x00b2, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr [dp]   "),
        ([0x00b2, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc [dp]"),
        ([0x00b2, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec [dp]"),
        ([0x00b2, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [[dp]]"),
        ([0x00b2, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [[dp]]     "),
        ([0x00b2, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, [dp]"),
        ([0x00b2, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, [dp]"),
        ([0x00b2, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, [dp]"),
        ([0x00b2, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, [dp]"),
        ([0x00b2, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, [dp]"),
        ([0x00b2, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, [dp]"),
        ([0x00b2, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, [dp]"),
        ([0x00b2, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, [dp]"),
        ([0x00b2, 0x007c, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8, [dp]"),
        ([0x00b2, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, [dp]"),
        ([0x00b2, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, [dp]"),
        ([0x00b2, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, [dp]"),
        ([0x00b2, 0x0080, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add [dp], #IMM16"),
        ([0x00b2, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add [dp], a"),
        ([0x00b2, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, [dp]"),
        ([0x00b2, 0x0083, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add [dp], off IMM8"),
        ([0x00b2, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov [dp], a"),
        ([0x00b2, 0x0090, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc [dp], #IMM16"),
        ([0x00b2, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc [dp], a"),
        ([0x00b2, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, [dp]"),
        ([0x00b2, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc [dp], off IMM8"),
        ([0x00b2, 0x0098, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov [dp], #IMM16"),
        ([0x00b2, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, [dp]"),
        ([0x00b2, 0x00a0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub [dp], #IMM16"),
        ([0x00b2, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub [dp], a"),
        ([0x00b2, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, [dp]"),
        ([0x00b2, 0x00a3, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub [dp], off IMM8"),
        ([0x00b2, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [[dp]]"),
        ([0x00b2, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [[dp]]"),
        ([0x00b2, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [[dp]]"),
        ([0x00b2, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [[dp]]"),
        ([0x00b2, 0x00b0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc [dp], #IMM16"),
        ([0x00b2, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc [dp], a"),
        ([0x00b2, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, [dp]"),
        ([0x00b2, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc [dp], off IMM8"),
        ([0x00b2, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol [dp]"),
        ([0x00b2, 0x00c0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp [dp], #IMM16"),
        ([0x00b2, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp [dp], a"),
        ([0x00b2, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, [dp]"),
        ([0x00b2, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp [dp], off IMM8"),
        ([0x00b2, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror [dp]"),
        ([0x00b2, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and [dp], #IMM16"),
        ([0x00b2, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or [dp], #IMM16"),
        ([0x00b2, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and [dp], a"),
        ([0x00b2, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, [dp]"),
        ([0x00b2, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and [dp], off IMM8"),
        ([0x00b2, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll [dp]"),
        ([0x00b2, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or [dp], a"),
        ([0x00b2, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, [dp]"),
        ([0x00b2, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or [dp], off IMM8"),
        ([0x00b2, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl [dp]"),
        ([0x00b2, 0x00f0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor [dp], #IMM16"),
        ([0x00b2, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor [dp], a"),
        ([0x00b2, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, [dp]"),
        ([0x00b2, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor [dp], off IMM8"),
        ([0x00b2, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra [dp]"),
        ([0x00b3, SIGNEDIMM8, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr SIGNEDIMM8[usp]   "),
        ([0x00b3, SIGNEDIMM8, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [SIGNEDIMM8[usp]]"),
        ([0x00b3, SIGNEDIMM8, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [SIGNEDIMM8[usp]]     "),
        ([0x00b3, SIGNEDIMM8, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x007c, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x0080, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add SIGNEDIMM8[usp], #IMM16"),
        ([0x00b3, SIGNEDIMM8, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add SIGNEDIMM8[usp], a"),
        ([0x00b3, SIGNEDIMM8, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x0083, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add SIGNEDIMM8[usp], off IMM8"),
        ([0x00b3, SIGNEDIMM8, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov SIGNEDIMM8[usp], a"),
        ([0x00b3, SIGNEDIMM8, 0x0090, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc SIGNEDIMM8[usp], #IMM16"),
        ([0x00b3, SIGNEDIMM8, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc SIGNEDIMM8[usp], a"),
        ([0x00b3, SIGNEDIMM8, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc SIGNEDIMM8[usp], off IMM8"),
        ([0x00b3, SIGNEDIMM8, 0x0098, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov SIGNEDIMM8[usp], #IMM16"),
        ([0x00b3, SIGNEDIMM8, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x00a0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub SIGNEDIMM8[usp], #IMM16"),
        ([0x00b3, SIGNEDIMM8, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub SIGNEDIMM8[usp], a"),
        ([0x00b3, SIGNEDIMM8, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x00a3, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub SIGNEDIMM8[usp], off IMM8"),
        ([0x00b3, SIGNEDIMM8, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [SIGNEDIMM8[usp]]"),
        ([0x00b3, SIGNEDIMM8, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [SIGNEDIMM8[usp]]"),
        ([0x00b3, SIGNEDIMM8, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [SIGNEDIMM8[usp]]"),
        ([0x00b3, SIGNEDIMM8, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [SIGNEDIMM8[usp]]"),
        ([0x00b3, SIGNEDIMM8, 0x00b0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc SIGNEDIMM8[usp], #IMM16"),
        ([0x00b3, SIGNEDIMM8, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc SIGNEDIMM8[usp], a"),
        ([0x00b3, SIGNEDIMM8, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc SIGNEDIMM8[usp], off IMM8"),
        ([0x00b3, SIGNEDIMM8, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x00c0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp SIGNEDIMM8[usp], #IMM16"),
        ([0x00b3, SIGNEDIMM8, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp SIGNEDIMM8[usp], a"),
        ([0x00b3, SIGNEDIMM8, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp SIGNEDIMM8[usp], off IMM8"),
        ([0x00b3, SIGNEDIMM8, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and SIGNEDIMM8[usp], #IMM16"),
        ([0x00b3, SIGNEDIMM8, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or SIGNEDIMM8[usp], #IMM16"),
        ([0x00b3, SIGNEDIMM8, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and SIGNEDIMM8[usp], a"),
        ([0x00b3, SIGNEDIMM8, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and SIGNEDIMM8[usp], off IMM8"),
        ([0x00b3, SIGNEDIMM8, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or SIGNEDIMM8[usp], a"),
        ([0x00b3, SIGNEDIMM8, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or SIGNEDIMM8[usp], off IMM8"),
        ([0x00b3, SIGNEDIMM8, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x00f0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor SIGNEDIMM8[usp], #IMM16"),
        ([0x00b3, SIGNEDIMM8, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor SIGNEDIMM8[usp], a"),
        ([0x00b3, SIGNEDIMM8, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, SIGNEDIMM8[usp]"),
        ([0x00b3, SIGNEDIMM8, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor SIGNEDIMM8[usp], off IMM8"),
        ([0x00b3, SIGNEDIMM8, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra SIGNEDIMM8[usp]"),
        ([0x00b4, IMM8, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, off IMM8"),
        ([0x00b4, IMM8, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr off IMM8   "),
        ([0x00b4, IMM8, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc off IMM8"),
        ([0x00b4, IMM8, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec off IMM8"),
        ([0x00b4, IMM8, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [off IMM8]"),
        ([0x00b4, IMM8, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [off IMM8]     "),
        ([0x00b4, IMM8, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, off IMM8"),
        ([0x00b4, IMM8, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, off IMM8"),
        ([0x00b4, IMM8, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, off IMM8"),
        ([0x00b4, IMM8, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, off IMM8"),
        ([0x00b4, IMM8, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, off IMM8"),
        ([0x00b4, IMM8, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, off IMM8"),
        ([0x00b4, IMM8, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, off IMM8"),
        ([0x00b4, IMM8, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, off IMM8"),
        ([0x00b4, IMM8, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, off IMM8"),
        ([0x00b4, IMM8, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, off IMM8"),
        ([0x00b4, IMM8, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, off IMM8"),
        ([0x00b4, IMM8, 0x0080, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add off IMM8, #IMM16"),
        ([0x00b4, IMM8, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add off IMM8, a"),
        ([0x00b4, IMM8, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8, a"),
        ([0x00b4, IMM8, 0x0090, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc off IMM8, #IMM16"),
        ([0x00b4, IMM8, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc off IMM8, a"),
        ([0x00b4, IMM8, 0x0098, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8, #IMM16"),
        ([0x00b4, IMM8, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, off IMM8"),
        ([0x00b4, IMM8, 0x00a0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub off IMM8, #IMM16"),
        ([0x00b4, IMM8, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub off IMM8, a"),
        ([0x00b4, IMM8, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [off IMM8]"),
        ([0x00b4, IMM8, 0x00a9, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, IMM16[off IMM8]"),
        ([0x00b4, IMM8, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [off IMM8]"),
        ([0x00b4, IMM8, 0x00ab, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, IMM16[off IMM8]"),
        ([0x00b4, IMM8, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [off IMM8]"),
        ([0x00b4, IMM8, 0x00ad, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, IMM16[off IMM8]"),
        ([0x00b4, IMM8, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [off IMM8]"),
        ([0x00b4, IMM8, 0x00af, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, IMM16[off IMM8]"),
        ([0x00b4, IMM8, 0x00b0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc off IMM8, #IMM16"),
        ([0x00b4, IMM8, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc off IMM8, a"),
        ([0x00b4, IMM8, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol off IMM8"),
        ([0x00b4, IMM8, 0x00c0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp off IMM8, #IMM16"),
        ([0x00b4, IMM8, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp off IMM8, a"),
        ([0x00b4, IMM8, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror off IMM8"),
        ([0x00b4, IMM8, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and off IMM8, #IMM16"),
        ([0x00b4, IMM8, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or off IMM8, #IMM16"),
        ([0x00b4, IMM8, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and off IMM8, a"),
        ([0x00b4, IMM8, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll off IMM8"),
        ([0x00b4, IMM8, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or off IMM8, a"),
        ([0x00b4, IMM8, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, off IMM8"),
        ([0x00b4, IMM8, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl off IMM8"),
        ([0x00b4, IMM8, 0x00f0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor off IMM8, #IMM16"),
        ([0x00b4, IMM8, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor off IMM8, a"),
        ([0x00b4, IMM8, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra off IMM8"),
        ([0x00b4, IMM8b, 0x007c, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8a, off IMM8b"),
        ([0x00b4, IMM8b, 0x0083, IMM8a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add off IMM8b, off IMM8a"),
        ([0x00b4, IMM8b, 0x0093, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc off IMM8b, off IMM8a"),
        ([0x00b4, IMM8b, 0x00a3, IMM8a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub off IMM8b, off IMM8a"),
        ([0x00b4, IMM8b, 0x00b3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc off IMM8b, off IMM8a"),
        ([0x00b4, IMM8b, 0x00c3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp off IMM8b, off IMM8a"),
        ([0x00b4, IMM8b, 0x00d3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and off IMM8b, off IMM8a"),
        ([0x00b4, IMM8b, 0x00e3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or off IMM8b, off IMM8a"),
        ([0x00b4, IMM8b, 0x00f3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor off IMM8b, off IMM8a"),
        ([0x00b5, IMM8, 0x0010, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xchg a, IMM8"),
        ([0x00b5, IMM8, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clr IMM8   "),
        ([0x00b5, IMM8, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc IMM8"),
        ([0x00b5, IMM8, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec IMM8"),
        ([0x00b5, IMM8, 0x0022, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "jmp [IMM8]"),
        ([0x00b5, IMM8, 0x0023, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cal [IMM8]     "),
        ([0x00b5, IMM8, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er0, IMM8"),
        ([0x00b5, IMM8, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er1, IMM8"),
        ([0x00b5, IMM8, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er2, IMM8"),
        ([0x00b5, IMM8, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov er3, IMM8"),
        ([0x00b5, IMM8, 0x0078, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x1, IMM8"),
        ([0x00b5, IMM8, 0x0079, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov x2, IMM8"),
        ([0x00b5, IMM8, 0x007a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov dp, IMM8"),
        ([0x00b5, IMM8, 0x007b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov usp, IMM8"),
        ([0x00b5, IMM8, 0x007d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov psw, IMM8"),
        ([0x00b5, IMM8, 0x007e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov ssp, IMM8"),
        ([0x00b5, IMM8, 0x007f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov lrb, IMM8"),
        ([0x00b5, IMM8, 0x0080, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add IMM8, #IMM16"),
        ([0x00b5, IMM8, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "add IMM8, a"),
        ([0x00b5, IMM8, 0x0082, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add a, IMM8"),
        ([0x00b5, IMM8, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov IMM8, a"),
        ([0x00b5, IMM8, 0x0090, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc IMM8, #IMM16"),
        ([0x00b5, IMM8, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc IMM8, a"),
        ([0x00b5, IMM8, 0x0092, ], DD_FLAG_ONE, CF_FLAG_NEXT, "adc a, IMM8"),
        ([0x00b5, IMM8, 0x0098, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov IMM8, #IMM16"),
        ([0x00b5, IMM8, 0x0099, ], DD_FLAG_SET, CF_FLAG_NEXT, "mov a, IMM8"),
        ([0x00b5, IMM8, 0x00a0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub IMM8, #IMM16"),
        ([0x00b5, IMM8, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sub IMM8, a"),
        ([0x00b5, IMM8, 0x00a2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub a, IMM8"),
        ([0x00b5, IMM8, 0x00a8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, [IMM8]"),
        ([0x00b5, IMM8, 0x00a9, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lc a, IMM16[IMM8]"),
        ([0x00b5, IMM8, 0x00aa, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, [IMM8]"),
        ([0x00b5, IMM8, 0x00ab, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "lcb a, IMM16[IMM8]"),
        ([0x00b5, IMM8, 0x00ac, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, [IMM8]"),
        ([0x00b5, IMM8, 0x00ad, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpc a, IMM16[IMM8]"),
        ([0x00b5, IMM8, 0x00ae, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, [IMM8]"),
        ([0x00b5, IMM8, 0x00af, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpcb a, IMM16[IMM8]"),
        ([0x00b5, IMM8, 0x00b0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc IMM8, #IMM16"),
        ([0x00b5, IMM8, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc IMM8, a"),
        ([0x00b5, IMM8, 0x00b2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, IMM8"),
        ([0x00b5, IMM8, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rol IMM8"),
        ([0x00b5, IMM8, 0x00c0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp IMM8, #IMM16"),
        ([0x00b5, IMM8, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp IMM8, a"),
        ([0x00b5, IMM8, 0x00c2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, IMM8"),
        ([0x00b5, IMM8, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "ror IMM8"),
        ([0x00b5, IMM8, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and IMM8, #IMM16"),
        ([0x00b5, IMM8, 0x00d0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or IMM8, #IMM16"),
        ([0x00b5, IMM8, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and IMM8, a"),
        ([0x00b5, IMM8, 0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, IMM8"),
        ([0x00b5, IMM8, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sll IMM8"),
        ([0x00b5, IMM8, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or IMM8, a"),
        ([0x00b5, IMM8, 0x00e2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, IMM8"),
        ([0x00b5, IMM8, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srl IMM8"),
        ([0x00b5, IMM8, 0x00f0, IMM16L, IMM16H, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor IMM8, #IMM16"),
        ([0x00b5, IMM8, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor IMM8, a"),
        ([0x00b5, IMM8, 0x00f2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, IMM8"),
        ([0x00b5, IMM8, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sra IMM8"),
        ([0x00b5, IMM8b, 0x007c, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mov off IMM8a, IMM8b"),
        ([0x00b5, IMM8b, 0x0083, IMM8a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "add IMM8b, off IMM8a"),
        ([0x00b5, IMM8b, 0x0093, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adc IMM8b, off IMM8a"),
        ([0x00b5, IMM8b, 0x00a3, IMM8a, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sub IMM8b, off IMM8a"),
        ([0x00b5, IMM8b, 0x00b3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbc IMM8b, off IMM8a"),
        ([0x00b5, IMM8b, 0x00c3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmp IMM8b, off IMM8a"),
        ([0x00b5, IMM8b, 0x00d3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "and IMM8b, off IMM8a"),
        ([0x00b5, IMM8b, 0x00e3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "or IMM8b, off IMM8a"),
        ([0x00b5, IMM8b, 0x00f3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xor IMM8b, off IMM8a"),
        ([0x00b6, IMM16L, IMM16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, #IMM16"),
        ([0x00b6, IMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, #IMM8"),
        ([0x00b7, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "sbc a, off IMM8"),
        ([0x00b7, IMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, off IMM8"),
        ([0x00b8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb r0"),
        ([0x00b9, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb r1"),
        ([0x00ba, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb r2"),
        ([0x00bb, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb r3"),
        ([0x00bc, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb r4"),
        ([0x00bd, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb r5"),
        ([0x00be, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb r6"),
        ([0x00bf, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb r7"),
        ([0x00c0, IMM16L, IMM16H, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM16[x1].0"),
        ([0x00c0, IMM16L, IMM16H, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM16[x1].1"),
        ([0x00c0, IMM16L, IMM16H, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM16[x1].2"),
        ([0x00c0, IMM16L, IMM16H, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM16[x1].3"),
        ([0x00c0, IMM16L, IMM16H, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM16[x1].4"),
        ([0x00c0, IMM16L, IMM16H, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM16[x1].5"),
        ([0x00c0, IMM16L, IMM16H, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM16[x1].6"),
        ([0x00c0, IMM16L, IMM16H, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM16[x1].7"),
        ([0x00c0, IMM16L, IMM16H, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb IMM16[x1]   "),
        ([0x00c0, IMM16L, IMM16H, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM16[x1].0"),
        ([0x00c0, IMM16L, IMM16H, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM16[x1].1"),
        ([0x00c0, IMM16L, IMM16H, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM16[x1].2"),
        ([0x00c0, IMM16L, IMM16H, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM16[x1].3"),
        ([0x00c0, IMM16L, IMM16H, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM16[x1].4"),
        ([0x00c0, IMM16L, IMM16H, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM16[x1].5"),
        ([0x00c0, IMM16L, IMM16H, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM16[x1].6"),
        ([0x00c0, IMM16L, IMM16H, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM16[x1].7"),
        ([0x00c0, IMM16L, IMM16H, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr IMM16[x1], c"),
        ([0x00c0, IMM16L, IMM16H, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM16[x1].0"),
        ([0x00c0, IMM16L, IMM16H, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM16[x1].1"),
        ([0x00c0, IMM16L, IMM16H, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM16[x1].2"),
        ([0x00c0, IMM16L, IMM16H, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM16[x1].3"),
        ([0x00c0, IMM16L, IMM16H, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM16[x1].4"),
        ([0x00c0, IMM16L, IMM16H, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM16[x1].5"),
        ([0x00c0, IMM16L, IMM16H, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM16[x1].6"),
        ([0x00c0, IMM16L, IMM16H, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM16[x1].7"),
        ([0x00c0, IMM16L, IMM16H, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM16[x1].0, c"),
        ([0x00c0, IMM16L, IMM16H, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM16[x1].1, c"),
        ([0x00c0, IMM16L, IMM16H, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM16[x1].2, c"),
        ([0x00c0, IMM16L, IMM16H, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM16[x1].3, c"),
        ([0x00c0, IMM16L, IMM16H, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM16[x1].4, c"),
        ([0x00c0, IMM16L, IMM16H, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM16[x1].5, c"),
        ([0x00c0, IMM16L, IMM16H, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM16[x1].6, c"),
        ([0x00c0, IMM16L, IMM16H, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM16[x1].7, c"),
        ([0x00c0, IMM16L, IMM16H, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x007c, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8, IMM16[x1]    "),
        ([0x00c0, IMM16L, IMM16H, 0x0080, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb IMM16[x1], #IMM8"),
        ([0x00c0, IMM16L, IMM16H, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb IMM16[x1], a"),
        ([0x00c0, IMM16L, IMM16H, 0x0082, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x0083, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb IMM16[x1], off IMM8"),
        ([0x00c0, IMM16L, IMM16H, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb IMM16[x1], a"),
        ([0x00c0, IMM16L, IMM16H, 0x0090, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb IMM16[x1], #IMM8"),
        ([0x00c0, IMM16L, IMM16H, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb IMM16[x1], a"),
        ([0x00c0, IMM16L, IMM16H, 0x0092, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb IMM16[x1], off IMM8"),
        ([0x00c0, IMM16L, IMM16H, 0x0098, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb IMM16[x1], #IMM8"),
        ([0x00c0, IMM16L, IMM16H, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x00a0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb IMM16[x1], #IMM8"),
        ([0x00c0, IMM16L, IMM16H, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb IMM16[x1], a"),
        ([0x00c0, IMM16L, IMM16H, 0x00a2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x00a3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb IMM16[x1], off IMM8"),
        ([0x00c0, IMM16L, IMM16H, 0x00b0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb IMM16[x1], #IMM8"),
        ([0x00c0, IMM16L, IMM16H, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb IMM16[x1], a"),
        ([0x00c0, IMM16L, IMM16H, 0x00b2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb IMM16[x1], off IMM8"),
        ([0x00c0, IMM16L, IMM16H, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x00c0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb IMM16[x1], #IMM8"),
        ([0x00c0, IMM16L, IMM16H, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb IMM16[x1], a"),
        ([0x00c0, IMM16L, IMM16H, 0x00c2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb IMM16[x1], off IMM8"),
        ([0x00c0, IMM16L, IMM16H, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x00d0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb IMM16[x1], #IMM8"),
        ([0x00c0, IMM16L, IMM16H, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb IMM16[x1], a"),
        ([0x00c0, IMM16L, IMM16H, 0x00d2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb IMM16[x1], off IMM8"),
        ([0x00c0, IMM16L, IMM16H, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x00e0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb IMM16[x1], #IMM8"),
        ([0x00c0, IMM16L, IMM16H, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb IMM16[x1], a"),
        ([0x00c0, IMM16L, IMM16H, 0x00e2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb IMM16[x1], off IMM8"),
        ([0x00c0, IMM16L, IMM16H, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x00f0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb IMM16[x1], #IMM8"),
        ([0x00c0, IMM16L, IMM16H, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb IMM16[x1], a"),
        ([0x00c0, IMM16L, IMM16H, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, IMM16[x1]"),
        ([0x00c0, IMM16L, IMM16H, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb IMM16[x1], off IMM8"),
        ([0x00c0, IMM16L, IMM16H, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab IMM16[x1]"),
        ([0x00c1, IMM16L, IMM16H, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM16[x2].0"),
        ([0x00c1, IMM16L, IMM16H, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM16[x2].1"),
        ([0x00c1, IMM16L, IMM16H, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM16[x2].2"),
        ([0x00c1, IMM16L, IMM16H, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM16[x2].3"),
        ([0x00c1, IMM16L, IMM16H, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM16[x2].4"),
        ([0x00c1, IMM16L, IMM16H, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM16[x2].5"),
        ([0x00c1, IMM16L, IMM16H, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM16[x2].6"),
        ([0x00c1, IMM16L, IMM16H, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM16[x2].7"),
        ([0x00c1, IMM16L, IMM16H, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb IMM16[x2]   "),
        ([0x00c1, IMM16L, IMM16H, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM16[x2].0"),
        ([0x00c1, IMM16L, IMM16H, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM16[x2].1"),
        ([0x00c1, IMM16L, IMM16H, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM16[x2].2"),
        ([0x00c1, IMM16L, IMM16H, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM16[x2].3"),
        ([0x00c1, IMM16L, IMM16H, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM16[x2].4"),
        ([0x00c1, IMM16L, IMM16H, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM16[x2].5"),
        ([0x00c1, IMM16L, IMM16H, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM16[x2].6"),
        ([0x00c1, IMM16L, IMM16H, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM16[x2].7"),
        ([0x00c1, IMM16L, IMM16H, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr IMM16[x2], c"),
        ([0x00c1, IMM16L, IMM16H, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM16[x2].0"),
        ([0x00c1, IMM16L, IMM16H, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM16[x2].1"),
        ([0x00c1, IMM16L, IMM16H, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM16[x2].2"),
        ([0x00c1, IMM16L, IMM16H, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM16[x2].3"),
        ([0x00c1, IMM16L, IMM16H, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM16[x2].4"),
        ([0x00c1, IMM16L, IMM16H, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM16[x2].5"),
        ([0x00c1, IMM16L, IMM16H, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM16[x2].6"),
        ([0x00c1, IMM16L, IMM16H, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM16[x2].7"),
        ([0x00c1, IMM16L, IMM16H, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM16[x2].0, c"),
        ([0x00c1, IMM16L, IMM16H, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM16[x2].1, c"),
        ([0x00c1, IMM16L, IMM16H, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM16[x2].2, c"),
        ([0x00c1, IMM16L, IMM16H, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM16[x2].3, c"),
        ([0x00c1, IMM16L, IMM16H, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM16[x2].4, c"),
        ([0x00c1, IMM16L, IMM16H, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM16[x2].5, c"),
        ([0x00c1, IMM16L, IMM16H, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM16[x2].6, c"),
        ([0x00c1, IMM16L, IMM16H, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM16[x2].7, c"),
        ([0x00c1, IMM16L, IMM16H, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x007c, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8, IMM16[x2]    "),
        ([0x00c1, IMM16L, IMM16H, 0x0080, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb IMM16[x2], #IMM8"),
        ([0x00c1, IMM16L, IMM16H, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb IMM16[x2], a"),
        ([0x00c1, IMM16L, IMM16H, 0x0082, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x0083, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb IMM16[x2], off IMM8"),
        ([0x00c1, IMM16L, IMM16H, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb IMM16[x2], a"),
        ([0x00c1, IMM16L, IMM16H, 0x0090, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb IMM16[x2], #IMM8"),
        ([0x00c1, IMM16L, IMM16H, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb IMM16[x2], a"),
        ([0x00c1, IMM16L, IMM16H, 0x0092, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb IMM16[x2], off IMM8"),
        ([0x00c1, IMM16L, IMM16H, 0x0098, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb IMM16[x2], #IMM8"),
        ([0x00c1, IMM16L, IMM16H, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x00a0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb IMM16[x2], #IMM8"),
        ([0x00c1, IMM16L, IMM16H, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb IMM16[x2], a"),
        ([0x00c1, IMM16L, IMM16H, 0x00a2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x00a3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb IMM16[x2], off IMM8"),
        ([0x00c1, IMM16L, IMM16H, 0x00b0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb IMM16[x2], #IMM8"),
        ([0x00c1, IMM16L, IMM16H, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb IMM16[x2], a"),
        ([0x00c1, IMM16L, IMM16H, 0x00b2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb IMM16[x2], off IMM8"),
        ([0x00c1, IMM16L, IMM16H, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x00c0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb IMM16[x2], #IMM8"),
        ([0x00c1, IMM16L, IMM16H, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb IMM16[x2], a"),
        ([0x00c1, IMM16L, IMM16H, 0x00c2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb IMM16[x2], off IMM8"),
        ([0x00c1, IMM16L, IMM16H, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x00d0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb IMM16[x2], #IMM8"),
        ([0x00c1, IMM16L, IMM16H, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb IMM16[x2], a"),
        ([0x00c1, IMM16L, IMM16H, 0x00d2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb IMM16[x2], off IMM8"),
        ([0x00c1, IMM16L, IMM16H, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x00e0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb IMM16[x2], #IMM8"),
        ([0x00c1, IMM16L, IMM16H, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb IMM16[x2], a"),
        ([0x00c1, IMM16L, IMM16H, 0x00e2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb IMM16[x2], off IMM8"),
        ([0x00c1, IMM16L, IMM16H, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x00f0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb IMM16[x2], #IMM8"),
        ([0x00c1, IMM16L, IMM16H, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb IMM16[x2], a"),
        ([0x00c1, IMM16L, IMM16H, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, IMM16[x2]"),
        ([0x00c1, IMM16L, IMM16H, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb IMM16[x2], off IMM8"),
        ([0x00c1, IMM16L, IMM16H, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab IMM16[x2]"),
        ([0x00c2, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb [dp].0"),
        ([0x00c2, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb [dp].1"),
        ([0x00c2, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb [dp].2"),
        ([0x00c2, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb [dp].3"),
        ([0x00c2, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb [dp].4"),
        ([0x00c2, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb [dp].5"),
        ([0x00c2, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb [dp].6"),
        ([0x00c2, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb [dp].7"),
        ([0x00c2, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, [dp]"),
        ([0x00c2, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr [dp]"),
        ([0x00c2, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr [dp]"),
        ([0x00c2, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr [dp]"),
        ([0x00c2, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb [dp]   "),
        ([0x00c2, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb [dp]"),
        ([0x00c2, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb [dp]"),
        ([0x00c2, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb [dp].0"),
        ([0x00c2, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb [dp].1"),
        ([0x00c2, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb [dp].2"),
        ([0x00c2, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb [dp].3"),
        ([0x00c2, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb [dp].4"),
        ([0x00c2, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb [dp].5"),
        ([0x00c2, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb [dp].6"),
        ([0x00c2, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb [dp].7"),
        ([0x00c2, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr [dp], c"),
        ([0x00c2, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, [dp]"),
        ([0x00c2, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, [dp].0"),
        ([0x00c2, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, [dp].1"),
        ([0x00c2, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, [dp].2"),
        ([0x00c2, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, [dp].3"),
        ([0x00c2, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, [dp].4"),
        ([0x00c2, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, [dp].5"),
        ([0x00c2, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, [dp].6"),
        ([0x00c2, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, [dp].7"),
        ([0x00c2, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb [dp].0, c"),
        ([0x00c2, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb [dp].1, c"),
        ([0x00c2, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb [dp].2, c"),
        ([0x00c2, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb [dp].3, c"),
        ([0x00c2, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb [dp].4, c"),
        ([0x00c2, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb [dp].5, c"),
        ([0x00c2, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb [dp].6, c"),
        ([0x00c2, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb [dp].7, c"),
        ([0x00c2, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, [dp]"),
        ([0x00c2, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, [dp]"),
        ([0x00c2, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, [dp]"),
        ([0x00c2, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, [dp]"),
        ([0x00c2, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, [dp]"),
        ([0x00c2, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, [dp]"),
        ([0x00c2, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, [dp]"),
        ([0x00c2, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, [dp]"),
        ([0x00c2, 0x007c, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8, [dp]       "),
        ([0x00c2, 0x0080, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb [dp], #IMM8"),
        ([0x00c2, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb [dp], a"),
        ([0x00c2, 0x0082, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, [dp]"),
        ([0x00c2, 0x0083, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb [dp], off IMM8"),
        ([0x00c2, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, [dp]"),
        ([0x00c2, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, [dp]"),
        ([0x00c2, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb [dp], a"),
        ([0x00c2, 0x0090, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb [dp], #IMM8"),
        ([0x00c2, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb [dp], a"),
        ([0x00c2, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb [dp], off IMM8"),
        ([0x00c2, 0x0097, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, [dp]"),
        ([0x00c2, 0x0098, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb [dp], #IMM8"),
        ([0x00c2, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, [dp]"),
        ([0x00c2, 0x00a0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb [dp], #IMM8"),
        ([0x00c2, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb [dp], a"),
        ([0x00c2, 0x00a2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, [dp]"),
        ([0x00c2, 0x00a3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb [dp], off IMM8"),
        ([0x00c2, 0x00b0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb [dp], #IMM8"),
        ([0x00c2, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb [dp], a"),
        ([0x00c2, 0x00b2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, [dp]"),
        ([0x00c2, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb [dp], off IMM8"),
        ([0x00c2, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb [dp]"),
        ([0x00c2, 0x00c0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb [dp], #IMM8"),
        ([0x00c2, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb [dp], a"),
        ([0x00c2, 0x00c2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, [dp]"),
        ([0x00c2, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb [dp], off IMM8"),
        ([0x00c2, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb [dp]"),
        ([0x00c2, 0x00d0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb [dp], #IMM8"),
        ([0x00c2, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb [dp], a"),
        ([0x00c2, 0x00d2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, [dp]"),
        ([0x00c2, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb [dp], off IMM8"),
        ([0x00c2, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb [dp]"),
        ([0x00c2, 0x00e0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb [dp], #IMM8"),
        ([0x00c2, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb [dp], a"),
        ([0x00c2, 0x00e2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, [dp]"),
        ([0x00c2, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb [dp], off IMM8"),
        ([0x00c2, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb [dp]"),
        ([0x00c2, 0x00f0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb [dp], #IMM8"),
        ([0x00c2, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb [dp], a"),
        ([0x00c2, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, [dp]"),
        ([0x00c2, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb [dp], off IMM8"),
        ([0x00c2, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab [dp]"),
        ([0x00c3, SIGNEDIMM8, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb SIGNEDIMM8[usp].0"),
        ([0x00c3, SIGNEDIMM8, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb SIGNEDIMM8[usp].1"),
        ([0x00c3, SIGNEDIMM8, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb SIGNEDIMM8[usp].2"),
        ([0x00c3, SIGNEDIMM8, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb SIGNEDIMM8[usp].3"),
        ([0x00c3, SIGNEDIMM8, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb SIGNEDIMM8[usp].4"),
        ([0x00c3, SIGNEDIMM8, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb SIGNEDIMM8[usp].5"),
        ([0x00c3, SIGNEDIMM8, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb SIGNEDIMM8[usp].6"),
        ([0x00c3, SIGNEDIMM8, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb SIGNEDIMM8[usp].7"),
        ([0x00c3, SIGNEDIMM8, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb SIGNEDIMM8[usp]   "),
        ([0x00c3, SIGNEDIMM8, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb SIGNEDIMM8[usp].0"),
        ([0x00c3, SIGNEDIMM8, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb SIGNEDIMM8[usp].1"),
        ([0x00c3, SIGNEDIMM8, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb SIGNEDIMM8[usp].2"),
        ([0x00c3, SIGNEDIMM8, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb SIGNEDIMM8[usp].3"),
        ([0x00c3, SIGNEDIMM8, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb SIGNEDIMM8[usp].4"),
        ([0x00c3, SIGNEDIMM8, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb SIGNEDIMM8[usp].5"),
        ([0x00c3, SIGNEDIMM8, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb SIGNEDIMM8[usp].6"),
        ([0x00c3, SIGNEDIMM8, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb SIGNEDIMM8[usp].7"),
        ([0x00c3, SIGNEDIMM8, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr SIGNEDIMM8[usp], c"),
        ([0x00c3, SIGNEDIMM8, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, SIGNEDIMM8[usp].0"),
        ([0x00c3, SIGNEDIMM8, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, SIGNEDIMM8[usp].1"),
        ([0x00c3, SIGNEDIMM8, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, SIGNEDIMM8[usp].2"),
        ([0x00c3, SIGNEDIMM8, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, SIGNEDIMM8[usp].3"),
        ([0x00c3, SIGNEDIMM8, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, SIGNEDIMM8[usp].4"),
        ([0x00c3, SIGNEDIMM8, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, SIGNEDIMM8[usp].5"),
        ([0x00c3, SIGNEDIMM8, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, SIGNEDIMM8[usp].6"),
        ([0x00c3, SIGNEDIMM8, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, SIGNEDIMM8[usp].7"),
        ([0x00c3, SIGNEDIMM8, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb SIGNEDIMM8[usp].0, c"),
        ([0x00c3, SIGNEDIMM8, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb SIGNEDIMM8[usp].1, c"),
        ([0x00c3, SIGNEDIMM8, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb SIGNEDIMM8[usp].2, c"),
        ([0x00c3, SIGNEDIMM8, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb SIGNEDIMM8[usp].3, c"),
        ([0x00c3, SIGNEDIMM8, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb SIGNEDIMM8[usp].4, c"),
        ([0x00c3, SIGNEDIMM8, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb SIGNEDIMM8[usp].5, c"),
        ([0x00c3, SIGNEDIMM8, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb SIGNEDIMM8[usp].6, c"),
        ([0x00c3, SIGNEDIMM8, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb SIGNEDIMM8[usp].7, c"),
        ([0x00c3, SIGNEDIMM8, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x007c, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8, SIGNEDIMM8[usp]   "),
        ([0x00c3, SIGNEDIMM8, 0x0080, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb SIGNEDIMM8[usp], #IMM8"),
        ([0x00c3, SIGNEDIMM8, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb SIGNEDIMM8[usp], a"),
        ([0x00c3, SIGNEDIMM8, 0x0082, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x0083, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb SIGNEDIMM8[usp], off IMM8"),
        ([0x00c3, SIGNEDIMM8, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb SIGNEDIMM8[usp], a"),
        ([0x00c3, SIGNEDIMM8, 0x0090, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb SIGNEDIMM8[usp], #IMM8"),
        ([0x00c3, SIGNEDIMM8, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb SIGNEDIMM8[usp], a"),
        ([0x00c3, SIGNEDIMM8, 0x0092, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x0093, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb SIGNEDIMM8[usp], off IMM8"),
        ([0x00c3, SIGNEDIMM8, 0x0098, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb SIGNEDIMM8[usp], #IMM8"),
        ([0x00c3, SIGNEDIMM8, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x00a0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb SIGNEDIMM8[usp], #IMM8"),
        ([0x00c3, SIGNEDIMM8, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb SIGNEDIMM8[usp], a"),
        ([0x00c3, SIGNEDIMM8, 0x00a2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x00a3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb SIGNEDIMM8[usp], off IMM8"),
        ([0x00c3, SIGNEDIMM8, 0x00b0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb SIGNEDIMM8[usp], #IMM8"),
        ([0x00c3, SIGNEDIMM8, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb SIGNEDIMM8[usp], a"),
        ([0x00c3, SIGNEDIMM8, 0x00b2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x00b3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb SIGNEDIMM8[usp], off IMM8"),
        ([0x00c3, SIGNEDIMM8, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x00c0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb SIGNEDIMM8[usp], #IMM8"),
        ([0x00c3, SIGNEDIMM8, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb SIGNEDIMM8[usp], a"),
        ([0x00c3, SIGNEDIMM8, 0x00c2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x00c3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb SIGNEDIMM8[usp], off IMM8"),
        ([0x00c3, SIGNEDIMM8, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x00d0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb SIGNEDIMM8[usp], #IMM8"),
        ([0x00c3, SIGNEDIMM8, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb SIGNEDIMM8[usp], a"),
        ([0x00c3, SIGNEDIMM8, 0x00d2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x00d3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb SIGNEDIMM8[usp], off IMM8"),
        ([0x00c3, SIGNEDIMM8, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x00e0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb SIGNEDIMM8[usp], #IMM8"),
        ([0x00c3, SIGNEDIMM8, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb SIGNEDIMM8[usp], a"),
        ([0x00c3, SIGNEDIMM8, 0x00e2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x00e3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb SIGNEDIMM8[usp], off IMM8"),
        ([0x00c3, SIGNEDIMM8, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x00f0, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb SIGNEDIMM8[usp], #IMM8"),
        ([0x00c3, SIGNEDIMM8, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb SIGNEDIMM8[usp], a"),
        ([0x00c3, SIGNEDIMM8, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, SIGNEDIMM8[usp]"),
        ([0x00c3, SIGNEDIMM8, 0x00f3, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb SIGNEDIMM8[usp], off IMM8"),
        ([0x00c3, SIGNEDIMM8, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab SIGNEDIMM8[usp]"),
        ([0x00c4, IMM8, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb off IMM8.0"),
        ([0x00c4, IMM8, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb off IMM8.1"),
        ([0x00c4, IMM8, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb off IMM8.2"),
        ([0x00c4, IMM8, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb off IMM8.3"),
        ([0x00c4, IMM8, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb off IMM8.4"),
        ([0x00c4, IMM8, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb off IMM8.5"),
        ([0x00c4, IMM8, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb off IMM8.6"),
        ([0x00c4, IMM8, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb off IMM8.7"),
        ([0x00c4, IMM8, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, off IMM8"),
        ([0x00c4, IMM8, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr off IMM8"),
        ([0x00c4, IMM8, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr off IMM8"),
        ([0x00c4, IMM8, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr off IMM8"),
        ([0x00c4, IMM8, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb off IMM8   "),
        ([0x00c4, IMM8, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb off IMM8"),
        ([0x00c4, IMM8, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb off IMM8"),
        ([0x00c4, IMM8, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb off IMM8.0"),
        ([0x00c4, IMM8, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb off IMM8.1"),
        ([0x00c4, IMM8, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb off IMM8.2"),
        ([0x00c4, IMM8, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb off IMM8.3"),
        ([0x00c4, IMM8, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb off IMM8.4"),
        ([0x00c4, IMM8, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb off IMM8.5"),
        ([0x00c4, IMM8, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb off IMM8.6"),
        ([0x00c4, IMM8, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb off IMM8.7"),
        ([0x00c4, IMM8, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, off IMM8"),
        ([0x00c4, IMM8, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, off IMM8.0"),
        ([0x00c4, IMM8, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, off IMM8.1"),
        ([0x00c4, IMM8, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, off IMM8.2"),
        ([0x00c4, IMM8, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, off IMM8.3"),
        ([0x00c4, IMM8, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, off IMM8.4"),
        ([0x00c4, IMM8, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, off IMM8.5"),
        ([0x00c4, IMM8, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, off IMM8.6"),
        ([0x00c4, IMM8, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, off IMM8.7"),
        ([0x00c4, IMM8, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb off IMM8.0, c"),
        ([0x00c4, IMM8, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb off IMM8.1, c"),
        ([0x00c4, IMM8, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb off IMM8.2, c"),
        ([0x00c4, IMM8, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb off IMM8.3, c"),
        ([0x00c4, IMM8, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb off IMM8.4, c"),
        ([0x00c4, IMM8, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb off IMM8.5, c"),
        ([0x00c4, IMM8, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb off IMM8.6, c"),
        ([0x00c4, IMM8, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb off IMM8.7, c"),
        ([0x00c4, IMM8, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, off IMM8"),
        ([0x00c4, IMM8, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, off IMM8"),
        ([0x00c4, IMM8, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, off IMM8"),
        ([0x00c4, IMM8, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, off IMM8"),
        ([0x00c4, IMM8, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, off IMM8"),
        ([0x00c4, IMM8, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, off IMM8"),
        ([0x00c4, IMM8, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, off IMM8"),
        ([0x00c4, IMM8, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, off IMM8"),
        ([0x00c4, IMM8, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb off IMM8, a"),
        ([0x00c4, IMM8, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, off IMM8"),
        ([0x00c4, IMM8, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, off IMM8"),
        ([0x00c4, IMM8, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8, a"),
        ([0x00c4, IMM8, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb off IMM8, a"),
        ([0x00c4, IMM8, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, off IMM8"),
        ([0x00c4, IMM8, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb off IMM8, a"),
        ([0x00c4, IMM8, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb off IMM8, a"),
        ([0x00c4, IMM8, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb off IMM8"),
        ([0x00c4, IMM8, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb off IMM8, a"),
        ([0x00c4, IMM8, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb off IMM8"),
        ([0x00c4, IMM8, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb off IMM8, a"),
        ([0x00c4, IMM8, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb off IMM8"),
        ([0x00c4, IMM8, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb off IMM8, a"),
        ([0x00c4, IMM8, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb off IMM8"),
        ([0x00c4, IMM8, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb off IMM8, a"),
        ([0x00c4, IMM8, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab off IMM8"),
        ([0x00c4, IMM8b, 0x007c, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8a, off IMM8b"),
        ([0x00c4, IMM8b, 0x0080, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb off IMM8b, #IMM8a"),
        ([0x00c4, IMM8b, 0x0083, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb off IMM8b, off IMM8a"),
        ([0x00c4, IMM8b, 0x0090, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb off IMM8b, #IMM8a"),
        ([0x00c4, IMM8b, 0x0093, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb off IMM8b, off IMM8a"),
        ([0x00c4, IMM8b, 0x0098, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8b, #IMM8a"),
        ([0x00c4, IMM8b, 0x00a0, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb off IMM8b, #IMM8a"),
        ([0x00c4, IMM8b, 0x00a3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb off IMM8b, off IMM8a"),
        ([0x00c4, IMM8b, 0x00b0, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb off IMM8b, #IMM8a"),
        ([0x00c4, IMM8b, 0x00b3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb off IMM8b, off IMM8a"),
        ([0x00c4, IMM8b, 0x00c0, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb off IMM8b, #IMM8a"),
        ([0x00c4, IMM8b, 0x00c3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb off IMM8b, off IMM8a"),
        ([0x00c4, IMM8b, 0x00d0, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb off IMM8b, #IMM8a"),
        ([0x00c4, IMM8b, 0x00d3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb off IMM8b, off IMM8a"),
        ([0x00c4, IMM8b, 0x00e0, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb off IMM8b, #IMM8a"),
        ([0x00c4, IMM8b, 0x00e3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb off IMM8b, off IMM8a"),
        ([0x00c4, IMM8b, 0x00f0, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb off IMM8b, #IMM8a"),
        ([0x00c4, IMM8b, 0x00f3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb off IMM8b, off IMM8a"),
        ([0x00c5, IMM8, 0x0008, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM8.0"),
        ([0x00c5, IMM8, 0x0009, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM8.1"),
        ([0x00c5, IMM8, 0x000a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM8.2"),
        ([0x00c5, IMM8, 0x000b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM8.3"),
        ([0x00c5, IMM8, 0x000c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM8.4"),
        ([0x00c5, IMM8, 0x000d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM8.5"),
        ([0x00c5, IMM8, 0x000e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM8.6"),
        ([0x00c5, IMM8, 0x000f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rb IMM8.7"),
        ([0x00c5, IMM8, 0x0010, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xchgb a, IMM8"),
        ([0x00c5, IMM8, 0x0011, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbr IMM8"),
        ([0x00c5, IMM8, 0x0012, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rbr IMM8"),
        ([0x00c5, IMM8, 0x0013, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "tbr IMM8"),
        ([0x00c5, IMM8, 0x0015, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "clrb IMM8   "),
        ([0x00c5, IMM8, 0x0016, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "incb IMM8"),
        ([0x00c5, IMM8, 0x0017, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "decb IMM8"),
        ([0x00c5, IMM8, 0x0018, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM8.0"),
        ([0x00c5, IMM8, 0x0019, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM8.1"),
        ([0x00c5, IMM8, 0x001a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM8.2"),
        ([0x00c5, IMM8, 0x001b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM8.3"),
        ([0x00c5, IMM8, 0x001c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM8.4"),
        ([0x00c5, IMM8, 0x001d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM8.5"),
        ([0x00c5, IMM8, 0x001e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM8.6"),
        ([0x00c5, IMM8, 0x001f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sb IMM8.7"),
        ([0x00c5, IMM8, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr IMM8, c"),
        ([0x00c5, IMM8, 0x0020, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr off IMM8, c"),
        ([0x00c5, IMM8, 0x0021, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mbr c, IMM8"),
        ([0x00c5, IMM8, 0x0028, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM8.0"),
        ([0x00c5, IMM8, 0x0029, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM8.1"),
        ([0x00c5, IMM8, 0x002a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM8.2"),
        ([0x00c5, IMM8, 0x002b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM8.3"),
        ([0x00c5, IMM8, 0x002c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM8.4"),
        ([0x00c5, IMM8, 0x002d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM8.5"),
        ([0x00c5, IMM8, 0x002e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM8.6"),
        ([0x00c5, IMM8, 0x002f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb c, IMM8.7"),
        ([0x00c5, IMM8, 0x0038, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM8.0, c"),
        ([0x00c5, IMM8, 0x0039, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM8.1, c"),
        ([0x00c5, IMM8, 0x003a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM8.2, c"),
        ([0x00c5, IMM8, 0x003b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM8.3, c"),
        ([0x00c5, IMM8, 0x003c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM8.4, c"),
        ([0x00c5, IMM8, 0x003d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM8.5, c"),
        ([0x00c5, IMM8, 0x003e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM8.6, c"),
        ([0x00c5, IMM8, 0x003f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "mb IMM8.7, c"),
        ([0x00c5, IMM8, 0x0048, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r0, IMM8"),
        ([0x00c5, IMM8, 0x0049, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r1, IMM8"),
        ([0x00c5, IMM8, 0x004a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r2, IMM8"),
        ([0x00c5, IMM8, 0x004b, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r3, IMM8"),
        ([0x00c5, IMM8, 0x004c, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r4, IMM8"),
        ([0x00c5, IMM8, 0x004d, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r5, IMM8"),
        ([0x00c5, IMM8, 0x004e, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r6, IMM8"),
        ([0x00c5, IMM8, 0x004f, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb r7, IMM8"),
        ([0x00c5, IMM8, 0x0081, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb IMM8, a"),
        ([0x00c5, IMM8, 0x0082, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "addb a, IMM8"),
        ([0x00c5, IMM8, 0x0088, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswl, IMM8"),
        ([0x00c5, IMM8, 0x0089, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb pswh, IMM8"),
        ([0x00c5, IMM8, 0x008a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb IMM8, a"),
        ([0x00c5, IMM8, 0x0091, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb IMM8, a"),
        ([0x00c5, IMM8, 0x0092, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "adcb a, IMM8"),
        ([0x00c5, IMM8, 0x0099, ], DD_FLAG_RESET, CF_FLAG_NEXT, "movb a, IMM8"),
        ([0x00c5, IMM8, 0x00a1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb IMM8, a"),
        ([0x00c5, IMM8, 0x00a2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "subb a, IMM8"),
        ([0x00c5, IMM8, 0x00b1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb IMM8, a"),
        ([0x00c5, IMM8, 0x00b2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "sbcb a, IMM8"),
        ([0x00c5, IMM8, 0x00b7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rolb IMM8"),
        ([0x00c5, IMM8, 0x00c1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb IMM8, a"),
        ([0x00c5, IMM8, 0x00c2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, IMM8"),
        ([0x00c5, IMM8, 0x00c7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "rorb IMM8"),
        ([0x00c5, IMM8, 0x00d1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb IMM8, a"),
        ([0x00c5, IMM8, 0x00d2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, IMM8"),
        ([0x00c5, IMM8, 0x00d7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sllb IMM8"),
        ([0x00c5, IMM8, 0x00e1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb IMM8, a"),
        ([0x00c5, IMM8, 0x00e2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, IMM8"),
        ([0x00c5, IMM8, 0x00e7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srlb IMM8"),
        ([0x00c5, IMM8, 0x00f1, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb IMM8, a"),
        ([0x00c5, IMM8, 0x00f2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, IMM8"),
        ([0x00c5, IMM8, 0x00f7, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "srab IMM8"),
        ([0x00c5, IMM8b, 0x007c, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb off IMM8a, IMM8b"),
        ([0x00c5, IMM8b, 0x0080, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb IMM8b, #IMM8a"),
        ([0x00c5, IMM8b, 0x0083, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "addb IMM8b, off IMM8a"),
        ([0x00c5, IMM8b, 0x0090, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb IMM8b, #IMM8a"),
        ([0x00c5, IMM8b, 0x0093, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "adcb IMM8b, off IMM8a"),
        ([0x00c5, IMM8b, 0x0098, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "movb IMM8b, #IMM8a"),
        ([0x00c5, IMM8b, 0x00a0, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb IMM8b, #IMM8a"),
        ([0x00c5, IMM8b, 0x00a3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "subb IMM8b, off IMM8a"),
        ([0x00c5, IMM8b, 0x00b0, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb IMM8b, #IMM8a"),
        ([0x00c5, IMM8b, 0x00b3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "sbcb IMM8b, off IMM8a"),
        ([0x00c5, IMM8b, 0x00c0, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb IMM8b, #IMM8a"),
        ([0x00c5, IMM8b, 0x00c3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "cmpb IMM8b, off IMM8a"),
        ([0x00c5, IMM8b, 0x00d0, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb IMM8b, #IMM8a"),
        ([0x00c5, IMM8b, 0x00d3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "andb IMM8b, off IMM8a"),
        ([0x00c5, IMM8b, 0x00e0, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb IMM8b, #IMM8a"),
        ([0x00c5, IMM8b, 0x00e3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb IMM8b, off IMM8a"),
        ([0x00c5, IMM8b, 0x00f0, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb IMM8b, #IMM8a"),
        ([0x00c5, IMM8b, 0x00f3, IMM8a, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "xorb IMM8b, off IMM8a"),
        ([0x00c6, IMM16L, IMM16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, #IMM16"),
        ([0x00c6, IMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, #IMM8"),
        ([0x00c7, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "cmp a, off IMM8"),
        ([0x00c7, IMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "cmpb a, off IMM8"),
        ([0x00c8, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jgt REL8"),
        ([0x00c9, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jeq REL8"),
        ([0x00ca, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jlt REL8"),
        ([0x00cb, REL8, ], DD_FLAG_UNUSED, CF_FLAG_JUMP, "sj REL8"),
        ([0x00cd, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jge REL8"),
        ([0x00ce, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jne REL8"),
        ([0x00cf, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jle REL8"),
        ([0x00d0, IMM16L, IMM16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, IMM16[x1]"),
        ([0x00d0, IMM16L, IMM16H, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, IMM16[x1]"),
        ([0x00d1, IMM16L, IMM16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, IMM16[x2]"),
        ([0x00d1, IMM16L, IMM16H, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, IMM16[x2]"),
        ([0x00d2, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, [dp]"),
        ([0x00d2, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, [dp]"),
        ([0x00d3, SIGNEDIMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, SIGNEDIMM8[usp]"),
        ([0x00d3, SIGNEDIMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, SIGNEDIMM8[usp]"),
        ([0x00d4, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, off IMM8"),
        ([0x00d4, IMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, off IMM8"),
        ([0x00d5, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "st a, IMM8"),
        ([0x00d5, IMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "stb a, IMM8"),
        ([0x00d6, IMM16L, IMM16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, #IMM16"),
        ([0x00d6, IMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, #IMM8"),
        ([0x00d7, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "and a, off IMM8"),
        ([0x00d7, IMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "andb a, off IMM8"),
        ([0x00d8, IMM8, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbr off IMM8.0, REL8"),
        ([0x00d9, IMM8, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbr off IMM8.1, REL8"),
        ([0x00da, IMM8, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbr off IMM8.2, REL8"),
        ([0x00db, IMM8, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbr off IMM8.3, REL8"),
        ([0x00dc, IMM8, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbr off IMM8.4, REL8"),
        ([0x00dd, IMM8, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbr off IMM8.5, REL8"),
        ([0x00de, IMM8, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbr off IMM8.6, REL8"),
        ([0x00df, IMM8, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbr off IMM8.7, REL8"),
        ([0x00e0, IMM16L, IMM16H, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, IMM16[x1]"),
        ([0x00e1, IMM16L, IMM16H, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, IMM16[x2]"),
        ([0x00e2, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, [dp]"),
        ([0x00e3, SIGNEDIMM8, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, SIGNEDIMM8[usp]"),
        ([0x00e4, IMM8, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, off IMM8"),
        ([0x00e5, IMM8, ], DD_FLAG_SET, CF_FLAG_NEXT, "l a, IMM8"),
        ([0x00e6, IMM16L, IMM16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "or a, #IMM16"),
        ([0x00e6, IMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "orb a, #IMM8"),
        ([0x00e7, IMM8, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "orb a, off IMM8"),
        ([0x00e8, IMM8, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbs off IMM8.0, REL8"),
        ([0x00e9, IMM8, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbs off IMM8.1, REL8"),
        ([0x00ea, IMM8, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbs off IMM8.2, REL8"),
        ([0x00eb, IMM8, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbs off IMM8.3, REL8"),
        ([0x00ec, IMM8, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbs off IMM8.4, REL8"),
        ([0x00ed, IMM8, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbs off IMM8.5, REL8"),
        ([0x00ee, IMM8, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbs off IMM8.6, REL8"),
        ([0x00ef, IMM8, REL8, ], DD_FLAG_UNUSED, CF_FLAG_CONDITIONAL_JUMP, "jbs off IMM8.7, REL8"),
        ([0x00f0, IMM16L, IMM16H, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, IMM16[x1]"),
        ([0x00f1, IMM16L, IMM16H, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, IMM16[x2]"),
        ([0x00f2, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, [dp]"),
        ([0x00f3, SIGNEDIMM8, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, SIGNEDIMM8[usp]"),
        ([0x00f4, IMM8, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, off IMM8"),
        ([0x00f5, IMM8, ], DD_FLAG_RESET, CF_FLAG_NEXT, "lb a, IMM8"),
        ([0x00f6, IMM16L, IMM16H, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, #IMM16"),
        ([0x00f6, IMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, #IMM8"),
        ([0x00f7, IMM8, ], DD_FLAG_ONE, CF_FLAG_NEXT, "xor a, off IMM8"),
        ([0x00f7, IMM8, ], DD_FLAG_ZERO, CF_FLAG_NEXT, "xorb a, off IMM8"),
        ([0x00f8, ], DD_FLAG_SET, CF_FLAG_NEXT, "extnd"),
        ([0x00f9, ], DD_FLAG_SET, CF_FLAG_NEXT, "clr a"),
        ([0x00fa, ], DD_FLAG_RESET, CF_FLAG_NEXT, "clrb a"),
        ([0x00fd, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "inc lrb"),
        ([0x00fe, ], DD_FLAG_UNUSED, CF_FLAG_NEXT, "dec lrb"),
        ([0x00ff, ], DD_FLAG_UNUSED, CF_FLAG_INDIRECT_JUMP, "brk"),
    ]

    def notify_ana(self, insn):
        insn_size = 0
        bytecode = get_bytes(insn.ea, 1)

        print("notify_ana 1: insn @ {0}".format(hex(insn.ea)))

        #operands = [insn[i] for i in xrange(1, 6)]
        #for o in operands:
        #    o.type = o_void

        current = None
        index = -1

        for i, definition in enumerate(self.INSN_DEFS):
            if definition[0][0] == ord(bytecode[0]):
                current = definition
                index = i
                break

        if current == None:
            print("ERROR - notify_ana: Instruction not found: {0}".format([hex(ord(x)) for x in bytecode]))
            return 0 # Instruction not found

        print("notify_ana 2: current = {0}".format(current))

        insn.itype = index
        print("notify_ana 3: itype = {0}".format(insn.itype))

        insn_size = len(current[0])
        print("notify_ana 4: insn_size = {0}".format(insn_size))

        return insn_size

    def notify_out_insn(self, ctx):
        print("notify_out_insn 1: ctx = {0}".format(ctx))
        insn = ctx.insn
        ctx.out_mnem()
        return True

    def notify_out_operand(self, ctx, op):
        print("notify_out_operand 1: ctx = {0}, op = {1}".format(ctx, op))
        return True

    def notify_emu(self, insn):
        print("notify_emu 1: insn = {0}".format(insn))
        return True


    def init_instructions(self):
        # TODO: Verify
        self.instruc = []
        for insn in self.INSN_DEFS:
            self.instruc.append({'name': insn[self.IDEF_MNEMONIC], 'feature': 0}) # Replace "0" in feature
        self.instruc_end = len(self.INSN_DEFS)
        self.icode_return = 3 # TODO: fix that
        pass

    def init_registers(self):
        """This function parses the
        register table and creates
        corresponding ireg_XXX constants"""
        # register names (non memory mapped)
        self.reg_names = [
            # "acc",
            #"psw",
            "pc",
            # "lrb",
            # "ssp",
            "x1",
            "x2",
            "dp",
            "usp",
            "r0",
            "r1",
            "er0",
            "r2",
            "r3",
            "er1",
            "r4",
            "r5",
            "er2",
            "r6",
            "r7",
            "er3",
            # Fake segment registers
            "CS",
            "DS"
        ]

        # Create the ireg_XXXX constants
        for i in xrange(len(self.reg_names)):
            setattr(self, 'ireg_' + self.reg_names[i], i)

        # Segment register information (use virtual CS and DS registers if your
        # processor doesn't have segment registers):
        self.reg_first_sreg = self.ireg_CS
        self.reg_last_sreg = self.ireg_DS

        # You should define 2 virtual segment registers for CS and DS.

        # number of CS register
        self.reg_code_sreg = self.ireg_CS
        # number of DS register
        self.reg_data_sreg = self.ireg_DS

    def __init__(self):
        idaapi.processor_t.__init__(self)
        self.init_instructions()
        self.init_registers()

def PROCESSOR_ENTRY():
    # Required for each Processor module script. Returns an instance of a class
    # derived from idaapi.processor_t
    return oki66207_processor_t()
